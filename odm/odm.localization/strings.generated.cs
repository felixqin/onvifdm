
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using odm.localization;


namespace odm.ui {
	public partial class LocalEngineControlsInputsCreation: LocalizedStringsBase<LocalEngineControlsInputsCreation>{
		


		private const string s_input = @"Inputs:";
		private string m_input=null;
		[XPath(@"/localized-strings/module[@name='LocalEngineControlsInputsCreation' and @namespace='odm.ui']/descendant::string[@name='input']/@value")]
		public string input {
			get { 
				if( m_input == null){
					return s_input;
				}
				return m_input; 
			}
			set { 
				if( value != m_input){
					m_input = value;
					NotifyPropertyChanged("input");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalEngineControlsUpdating: LocalizedStringsBase<LocalEngineControlsUpdating>{
		


		private const string s_controlname = @"Control name:";
		private string m_controlname=null;
		[XPath(@"/localized-strings/module[@name='LocalEngineControlsUpdating' and @namespace='odm.ui']/descendant::string[@name='controlname']/@value")]
		public string controlname {
			get { 
				if( m_controlname == null){
					return s_controlname;
				}
				return m_controlname; 
			}
			set { 
				if( value != m_controlname){
					m_controlname = value;
					NotifyPropertyChanged("controlname");
				}
			}  
		}
	


		private const string s_vac = @"Video Analytics Configuration";
		private string m_vac=null;
		[XPath(@"/localized-strings/module[@name='LocalEngineControlsUpdating' and @namespace='odm.ui']/descendant::string[@name='vac']/@value")]
		public string vac {
			get { 
				if( m_vac == null){
					return s_vac;
				}
				return m_vac; 
			}
			set { 
				if( value != m_vac){
					m_vac = value;
					NotifyPropertyChanged("vac");
				}
			}  
		}
	


		private const string s_configure = @"Configure Inputs";
		private string m_configure=null;
		[XPath(@"/localized-strings/module[@name='LocalEngineControlsUpdating' and @namespace='odm.ui']/descendant::string[@name='configure']/@value")]
		public string configure {
			get { 
				if( m_configure == null){
					return s_configure;
				}
				return m_configure; 
			}
			set { 
				if( value != m_configure){
					m_configure = value;
					NotifyPropertyChanged("configure");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalEngineControlsVACSelection: LocalizedStringsBase<LocalEngineControlsVACSelection>{
		


		private const string s_vac = @"VAC";
		private string m_vac=null;
		[XPath(@"/localized-strings/module[@name='LocalEngineControlsVACSelection' and @namespace='odm.ui']/descendant::string[@name='vac']/@value")]
		public string vac {
			get { 
				if( m_vac == null){
					return s_vac;
				}
				return m_vac; 
			}
			set { 
				if( value != m_vac){
					m_vac = value;
					NotifyPropertyChanged("vac");
				}
			}  
		}
	


		private const string s_details = @"Details";
		private string m_details=null;
		[XPath(@"/localized-strings/module[@name='LocalEngineControlsVACSelection' and @namespace='odm.ui']/descendant::string[@name='details']/@value")]
		public string details {
			get { 
				if( m_details == null){
					return s_details;
				}
				return m_details; 
			}
			set { 
				if( value != m_details){
					m_details = value;
					NotifyPropertyChanged("details");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalEngineControl: LocalizedStringsBase<LocalEngineControl>{
		


		private const string s_name = @"Name";
		private string m_name=null;
		[XPath(@"/localized-strings/module[@name='LocalEngineControl' and @namespace='odm.ui']/descendant::string[@name='name']/@value")]
		public string name {
			get { 
				if( m_name == null){
					return s_name;
				}
				return m_name; 
			}
			set { 
				if( value != m_name){
					m_name = value;
					NotifyPropertyChanged("name");
				}
			}  
		}
	


		private const string s_mode = @"Mode";
		private string m_mode=null;
		[XPath(@"/localized-strings/module[@name='LocalEngineControl' and @namespace='odm.ui']/descendant::string[@name='mode']/@value")]
		public string mode {
			get { 
				if( m_mode == null){
					return s_mode;
				}
				return m_mode; 
			}
			set { 
				if( value != m_mode){
					m_mode = value;
					NotifyPropertyChanged("mode");
				}
			}  
		}
	


		private const string s_status = @"Status";
		private string m_status=null;
		[XPath(@"/localized-strings/module[@name='LocalEngineControl' and @namespace='odm.ui']/descendant::string[@name='status']/@value")]
		public string status {
			get { 
				if( m_status == null){
					return s_status;
				}
				return m_status; 
			}
			set { 
				if( value != m_status){
					m_status = value;
					NotifyPropertyChanged("status");
				}
			}  
		}
	


		private const string s_vac = @"VAC";
		private string m_vac=null;
		[XPath(@"/localized-strings/module[@name='LocalEngineControl' and @namespace='odm.ui']/descendant::string[@name='vac']/@value")]
		public string vac {
			get { 
				if( m_vac == null){
					return s_vac;
				}
				return m_vac; 
			}
			set { 
				if( value != m_vac){
					m_vac = value;
					NotifyPropertyChanged("vac");
				}
			}  
		}
	


		private const string s_details = @"Details";
		private string m_details=null;
		[XPath(@"/localized-strings/module[@name='LocalEngineControl' and @namespace='odm.ui']/descendant::string[@name='details']/@value")]
		public string details {
			get { 
				if( m_details == null){
					return s_details;
				}
				return m_details; 
			}
			set { 
				if( value != m_details){
					m_details = value;
					NotifyPropertyChanged("details");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalVideoPlayer: LocalizedStringsBase<LocalVideoPlayer>{
		


		private const string s_noSignal = @"NO SIGNAL";
		private string m_noSignal=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoPlayer' and @namespace='odm.ui']/descendant::string[@name='noSignal']/@value")]
		public string noSignal {
			get { 
				if( m_noSignal == null){
					return s_noSignal;
				}
				return m_noSignal; 
			}
			set { 
				if( value != m_noSignal){
					m_noSignal = value;
					NotifyPropertyChanged("noSignal");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalSystemLog: LocalizedStringsBase<LocalSystemLog>{
		


		private const string s_logTypeSystem = @"System";
		private string m_logTypeSystem=null;
		[XPath(@"/localized-strings/module[@name='LocalSystemLog' and @namespace='odm.ui']/descendant::string[@name='logTypeSystem']/@value")]
		public string logTypeSystem {
			get { 
				if( m_logTypeSystem == null){
					return s_logTypeSystem;
				}
				return m_logTypeSystem; 
			}
			set { 
				if( value != m_logTypeSystem){
					m_logTypeSystem = value;
					NotifyPropertyChanged("logTypeSystem");
				}
			}  
		}
	


		private const string s_logTypeAccess = @"Access";
		private string m_logTypeAccess=null;
		[XPath(@"/localized-strings/module[@name='LocalSystemLog' and @namespace='odm.ui']/descendant::string[@name='logTypeAccess']/@value")]
		public string logTypeAccess {
			get { 
				if( m_logTypeAccess == null){
					return s_logTypeAccess;
				}
				return m_logTypeAccess; 
			}
			set { 
				if( value != m_logTypeAccess){
					m_logTypeAccess = value;
					NotifyPropertyChanged("logTypeAccess");
				}
			}  
		}
	


		private const string s_logType = @"Select system log type: ";
		private string m_logType=null;
		[XPath(@"/localized-strings/module[@name='LocalSystemLog' and @namespace='odm.ui']/descendant::string[@name='logType']/@value")]
		public string logType {
			get { 
				if( m_logType == null){
					return s_logType;
				}
				return m_logType; 
			}
			set { 
				if( value != m_logType){
					m_logType = value;
					NotifyPropertyChanged("logType");
				}
			}  
		}
	


		private const string s_Get = @"Get";
		private string m_Get=null;
		[XPath(@"/localized-strings/module[@name='LocalSystemLog' and @namespace='odm.ui']/descendant::string[@name='Get']/@value")]
		public string Get {
			get { 
				if( m_Get == null){
					return s_Get;
				}
				return m_Get; 
			}
			set { 
				if( value != m_Get){
					m_Get = value;
					NotifyPropertyChanged("Get");
				}
			}  
		}
	


		private const string s_Save = @"Save";
		private string m_Save=null;
		[XPath(@"/localized-strings/module[@name='LocalSystemLog' and @namespace='odm.ui']/descendant::string[@name='Save']/@value")]
		public string Save {
			get { 
				if( m_Save == null){
					return s_Save;
				}
				return m_Save; 
			}
			set { 
				if( value != m_Save){
					m_Save = value;
					NotifyPropertyChanged("Save");
				}
			}  
		}
	


		private const string s_titleSaveLog = @"Save system log";
		private string m_titleSaveLog=null;
		[XPath(@"/localized-strings/module[@name='LocalSystemLog' and @namespace='odm.ui']/descendant::string[@name='titleSaveLog']/@value")]
		public string titleSaveLog {
			get { 
				if( m_titleSaveLog == null){
					return s_titleSaveLog;
				}
				return m_titleSaveLog; 
			}
			set { 
				if( value != m_titleSaveLog){
					m_titleSaveLog = value;
					NotifyPropertyChanged("titleSaveLog");
				}
			}  
		}
	


		private const string s_titleSaveAttach = @"Save attachment";
		private string m_titleSaveAttach=null;
		[XPath(@"/localized-strings/module[@name='LocalSystemLog' and @namespace='odm.ui']/descendant::string[@name='titleSaveAttach']/@value")]
		public string titleSaveAttach {
			get { 
				if( m_titleSaveAttach == null){
					return s_titleSaveAttach;
				}
				return m_titleSaveAttach; 
			}
			set { 
				if( value != m_titleSaveAttach){
					m_titleSaveAttach = value;
					NotifyPropertyChanged("titleSaveAttach");
				}
			}  
		}
	


		private const string s_syslogNotFound = @"Log has not been found";
		private string m_syslogNotFound=null;
		[XPath(@"/localized-strings/module[@name='LocalSystemLog' and @namespace='odm.ui']/descendant::string[@name='syslogNotFound']/@value")]
		public string syslogNotFound {
			get { 
				if( m_syslogNotFound == null){
					return s_syslogNotFound;
				}
				return m_syslogNotFound; 
			}
			set { 
				if( value != m_syslogNotFound){
					m_syslogNotFound = value;
					NotifyPropertyChanged("syslogNotFound");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalImaging: LocalizedStringsBase<LocalImaging>{
		


		private const string s_title = @"Sensor settings";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_imagingSettings = @"Imaging Settings";
		private string m_imagingSettings=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='imagingSettings']/@value")]
		public string imagingSettings {
			get { 
				if( m_imagingSettings == null){
					return s_imagingSettings;
				}
				return m_imagingSettings; 
			}
			set { 
				if( value != m_imagingSettings){
					m_imagingSettings = value;
					NotifyPropertyChanged("imagingSettings");
				}
			}  
		}
	


		private const string s_autoFocusMode = @"Focus Mode";
		private string m_autoFocusMode=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='autoFocusMode']/@value")]
		public string autoFocusMode {
			get { 
				if( m_autoFocusMode == null){
					return s_autoFocusMode;
				}
				return m_autoFocusMode; 
			}
			set { 
				if( value != m_autoFocusMode){
					m_autoFocusMode = value;
					NotifyPropertyChanged("autoFocusMode");
				}
			}  
		}
	


		private const string s_brightness = @"Brightness";
		private string m_brightness=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='brightness']/@value")]
		public string brightness {
			get { 
				if( m_brightness == null){
					return s_brightness;
				}
				return m_brightness; 
			}
			set { 
				if( value != m_brightness){
					m_brightness = value;
					NotifyPropertyChanged("brightness");
				}
			}  
		}
	


		private const string s_saturation = @"Color saturation";
		private string m_saturation=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='saturation']/@value")]
		public string saturation {
			get { 
				if( m_saturation == null){
					return s_saturation;
				}
				return m_saturation; 
			}
			set { 
				if( value != m_saturation){
					m_saturation = value;
					NotifyPropertyChanged("saturation");
				}
			}  
		}
	


		private const string s_contrast = @"Contrast";
		private string m_contrast=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='contrast']/@value")]
		public string contrast {
			get { 
				if( m_contrast == null){
					return s_contrast;
				}
				return m_contrast; 
			}
			set { 
				if( value != m_contrast){
					m_contrast = value;
					NotifyPropertyChanged("contrast");
				}
			}  
		}
	


		private const string s_sharpness = @"Sharpness";
		private string m_sharpness=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='sharpness']/@value")]
		public string sharpness {
			get { 
				if( m_sharpness == null){
					return s_sharpness;
				}
				return m_sharpness; 
			}
			set { 
				if( value != m_sharpness){
					m_sharpness = value;
					NotifyPropertyChanged("sharpness");
				}
			}  
		}
	


		private const string s_gain = @"Gain";
		private string m_gain=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='gain']/@value")]
		public string gain {
			get { 
				if( m_gain == null){
					return s_gain;
				}
				return m_gain; 
			}
			set { 
				if( value != m_gain){
					m_gain = value;
					NotifyPropertyChanged("gain");
				}
			}  
		}
	


		private const string s_gainMax = @"Gain max";
		private string m_gainMax=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='gainMax']/@value")]
		public string gainMax {
			get { 
				if( m_gainMax == null){
					return s_gainMax;
				}
				return m_gainMax; 
			}
			set { 
				if( value != m_gainMax){
					m_gainMax = value;
					NotifyPropertyChanged("gainMax");
				}
			}  
		}
	


		private const string s_gainMin = @"Gain min";
		private string m_gainMin=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='gainMin']/@value")]
		public string gainMin {
			get { 
				if( m_gainMin == null){
					return s_gainMin;
				}
				return m_gainMin; 
			}
			set { 
				if( value != m_gainMin){
					m_gainMin = value;
					NotifyPropertyChanged("gainMin");
				}
			}  
		}
	


		private const string s_iris = @"Iris";
		private string m_iris=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='iris']/@value")]
		public string iris {
			get { 
				if( m_iris == null){
					return s_iris;
				}
				return m_iris; 
			}
			set { 
				if( value != m_iris){
					m_iris = value;
					NotifyPropertyChanged("iris");
				}
			}  
		}
	


		private const string s_irisMax = @"Iris max";
		private string m_irisMax=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='irisMax']/@value")]
		public string irisMax {
			get { 
				if( m_irisMax == null){
					return s_irisMax;
				}
				return m_irisMax; 
			}
			set { 
				if( value != m_irisMax){
					m_irisMax = value;
					NotifyPropertyChanged("irisMax");
				}
			}  
		}
	


		private const string s_irisMin = @"Iris min";
		private string m_irisMin=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='irisMin']/@value")]
		public string irisMin {
			get { 
				if( m_irisMin == null){
					return s_irisMin;
				}
				return m_irisMin; 
			}
			set { 
				if( value != m_irisMin){
					m_irisMin = value;
					NotifyPropertyChanged("irisMin");
				}
			}  
		}
	


		private const string s_whitemode = @"White balance mode";
		private string m_whitemode=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='whitemode']/@value")]
		public string whitemode {
			get { 
				if( m_whitemode == null){
					return s_whitemode;
				}
				return m_whitemode; 
			}
			set { 
				if( value != m_whitemode){
					m_whitemode = value;
					NotifyPropertyChanged("whitemode");
				}
			}  
		}
	


		private const string s_whiteBalanceCb = @"White balance Cb";
		private string m_whiteBalanceCb=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='whiteBalanceCb']/@value")]
		public string whiteBalanceCb {
			get { 
				if( m_whiteBalanceCb == null){
					return s_whiteBalanceCb;
				}
				return m_whiteBalanceCb; 
			}
			set { 
				if( value != m_whiteBalanceCb){
					m_whiteBalanceCb = value;
					NotifyPropertyChanged("whiteBalanceCb");
				}
			}  
		}
	


		private const string s_whiteBalanceCr = @"White balance Cr";
		private string m_whiteBalanceCr=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='whiteBalanceCr']/@value")]
		public string whiteBalanceCr {
			get { 
				if( m_whiteBalanceCr == null){
					return s_whiteBalanceCr;
				}
				return m_whiteBalanceCr; 
			}
			set { 
				if( value != m_whiteBalanceCr){
					m_whiteBalanceCr = value;
					NotifyPropertyChanged("whiteBalanceCr");
				}
			}  
		}
	


		private const string s_backlightMode = @"Backlight compensation Mode";
		private string m_backlightMode=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='backlightMode']/@value")]
		public string backlightMode {
			get { 
				if( m_backlightMode == null){
					return s_backlightMode;
				}
				return m_backlightMode; 
			}
			set { 
				if( value != m_backlightMode){
					m_backlightMode = value;
					NotifyPropertyChanged("backlightMode");
				}
			}  
		}
	


		private const string s_backlightLevel = @"Backlight compensation Level";
		private string m_backlightLevel=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='backlightLevel']/@value")]
		public string backlightLevel {
			get { 
				if( m_backlightLevel == null){
					return s_backlightLevel;
				}
				return m_backlightLevel; 
			}
			set { 
				if( value != m_backlightLevel){
					m_backlightLevel = value;
					NotifyPropertyChanged("backlightLevel");
				}
			}  
		}
	


		private const string s_focusSettings = @"Focus Settings";
		private string m_focusSettings=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='focusSettings']/@value")]
		public string focusSettings {
			get { 
				if( m_focusSettings == null){
					return s_focusSettings;
				}
				return m_focusSettings; 
			}
			set { 
				if( value != m_focusSettings){
					m_focusSettings = value;
					NotifyPropertyChanged("focusSettings");
				}
			}  
		}
	


		private const string s_focusPosition = @"Position";
		private string m_focusPosition=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='focusPosition']/@value")]
		public string focusPosition {
			get { 
				if( m_focusPosition == null){
					return s_focusPosition;
				}
				return m_focusPosition; 
			}
			set { 
				if( value != m_focusPosition){
					m_focusPosition = value;
					NotifyPropertyChanged("focusPosition");
				}
			}  
		}
	


		private const string s_status = @"State";
		private string m_status=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='status']/@value")]
		public string status {
			get { 
				if( m_status == null){
					return s_status;
				}
				return m_status; 
			}
			set { 
				if( value != m_status){
					m_status = value;
					NotifyPropertyChanged("status");
				}
			}  
		}
	


		private const string s_statusSuccess = @"OK";
		private string m_statusSuccess=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='statusSuccess']/@value")]
		public string statusSuccess {
			get { 
				if( m_statusSuccess == null){
					return s_statusSuccess;
				}
				return m_statusSuccess; 
			}
			set { 
				if( value != m_statusSuccess){
					m_statusSuccess = value;
					NotifyPropertyChanged("statusSuccess");
				}
			}  
		}
	


		private const string s_statusWaiting = @"Waiting...";
		private string m_statusWaiting=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='statusWaiting']/@value")]
		public string statusWaiting {
			get { 
				if( m_statusWaiting == null){
					return s_statusWaiting;
				}
				return m_statusWaiting; 
			}
			set { 
				if( value != m_statusWaiting){
					m_statusWaiting = value;
					NotifyPropertyChanged("statusWaiting");
				}
			}  
		}
	


		private const string s_auto = @"Auto";
		private string m_auto=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='auto']/@value")]
		public string auto {
			get { 
				if( m_auto == null){
					return s_auto;
				}
				return m_auto; 
			}
			set { 
				if( value != m_auto){
					m_auto = value;
					NotifyPropertyChanged("auto");
				}
			}  
		}
	


		private const string s_min = @"min";
		private string m_min=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='min']/@value")]
		public string min {
			get { 
				if( m_min == null){
					return s_min;
				}
				return m_min; 
			}
			set { 
				if( value != m_min){
					m_min = value;
					NotifyPropertyChanged("min");
				}
			}  
		}
	


		private const string s_max = @"max";
		private string m_max=null;
		[XPath(@"/localized-strings/module[@name='LocalImaging' and @namespace='odm.ui']/descendant::string[@name='max']/@value")]
		public string max {
			get { 
				if( m_max == null){
					return s_max;
				}
				return m_max; 
			}
			set { 
				if( value != m_max){
					m_max = value;
					NotifyPropertyChanged("max");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalMetadata: LocalizedStringsBase<LocalMetadata>{
		


		private const string s_title = @"Metadata";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_empty = @"No metadata available";
		private string m_empty=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='empty']/@value")]
		public string empty {
			get { 
				if( m_empty == null){
					return s_empty;
				}
				return m_empty; 
			}
			set { 
				if( value != m_empty){
					m_empty = value;
					NotifyPropertyChanged("empty");
				}
			}  
		}
	


		private const string s_details = @"Metadata details";
		private string m_details=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='details']/@value")]
		public string details {
			get { 
				if( m_details == null){
					return s_details;
				}
				return m_details; 
			}
			set { 
				if( value != m_details){
					m_details = value;
					NotifyPropertyChanged("details");
				}
			}  
		}
	


		private const string s_config = @"Filters";
		private string m_config=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='config']/@value")]
		public string config {
			get { 
				if( m_config == null){
					return s_config;
				}
				return m_config; 
			}
			set { 
				if( value != m_config){
					m_config = value;
					NotifyPropertyChanged("config");
				}
			}  
		}
	


		private const string s_includeAnalitycs = @"Include analitycs";
		private string m_includeAnalitycs=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='includeAnalitycs']/@value")]
		public string includeAnalitycs {
			get { 
				if( m_includeAnalitycs == null){
					return s_includeAnalitycs;
				}
				return m_includeAnalitycs; 
			}
			set { 
				if( value != m_includeAnalitycs){
					m_includeAnalitycs = value;
					NotifyPropertyChanged("includeAnalitycs");
				}
			}  
		}
	


		private const string s_includePtzPosition = @"Include PTZ position";
		private string m_includePtzPosition=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='includePtzPosition']/@value")]
		public string includePtzPosition {
			get { 
				if( m_includePtzPosition == null){
					return s_includePtzPosition;
				}
				return m_includePtzPosition; 
			}
			set { 
				if( value != m_includePtzPosition){
					m_includePtzPosition = value;
					NotifyPropertyChanged("includePtzPosition");
				}
			}  
		}
	


		private const string s_includePtzStatus = @"Include PTZ status";
		private string m_includePtzStatus=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='includePtzStatus']/@value")]
		public string includePtzStatus {
			get { 
				if( m_includePtzStatus == null){
					return s_includePtzStatus;
				}
				return m_includePtzStatus; 
			}
			set { 
				if( value != m_includePtzStatus){
					m_includePtzStatus = value;
					NotifyPropertyChanged("includePtzStatus");
				}
			}  
		}
	


		private const string s_includeEvents = @"Include events";
		private string m_includeEvents=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='includeEvents']/@value")]
		public string includeEvents {
			get { 
				if( m_includeEvents == null){
					return s_includeEvents;
				}
				return m_includeEvents; 
			}
			set { 
				if( value != m_includeEvents){
					m_includeEvents = value;
					NotifyPropertyChanged("includeEvents");
				}
			}  
		}
	


		private const string s_filter = @"Filters:";
		private string m_filter=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='filter']/@value")]
		public string filter {
			get { 
				if( m_filter == null){
					return s_filter;
				}
				return m_filter; 
			}
			set { 
				if( value != m_filter){
					m_filter = value;
					NotifyPropertyChanged("filter");
				}
			}  
		}
	


		private const string s_expressionSettings = @"Filter expression settings:";
		private string m_expressionSettings=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='expressionSettings']/@value")]
		public string expressionSettings {
			get { 
				if( m_expressionSettings == null){
					return s_expressionSettings;
				}
				return m_expressionSettings; 
			}
			set { 
				if( value != m_expressionSettings){
					m_expressionSettings = value;
					NotifyPropertyChanged("expressionSettings");
				}
			}  
		}
	


		private const string s_expression = @"Expression";
		private string m_expression=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='expression']/@value")]
		public string expression {
			get { 
				if( m_expression == null){
					return s_expression;
				}
				return m_expression; 
			}
			set { 
				if( value != m_expression){
					m_expression = value;
					NotifyPropertyChanged("expression");
				}
			}  
		}
	


		private const string s_expressionType = @"Expression type";
		private string m_expressionType=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='expressionType']/@value")]
		public string expressionType {
			get { 
				if( m_expressionType == null){
					return s_expressionType;
				}
				return m_expressionType; 
			}
			set { 
				if( value != m_expressionType){
					m_expressionType = value;
					NotifyPropertyChanged("expressionType");
				}
			}  
		}
	


		private const string s_expressionDialect = @"Expression dialect";
		private string m_expressionDialect=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='expressionDialect']/@value")]
		public string expressionDialect {
			get { 
				if( m_expressionDialect == null){
					return s_expressionDialect;
				}
				return m_expressionDialect; 
			}
			set { 
				if( value != m_expressionDialect){
					m_expressionDialect = value;
					NotifyPropertyChanged("expressionDialect");
				}
			}  
		}
	


		private const string s_additionalSet = @"More details:";
		private string m_additionalSet=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='additionalSet']/@value")]
		public string additionalSet {
			get { 
				if( m_additionalSet == null){
					return s_additionalSet;
				}
				return m_additionalSet; 
			}
			set { 
				if( value != m_additionalSet){
					m_additionalSet = value;
					NotifyPropertyChanged("additionalSet");
				}
			}  
		}
	


		private const string s_prefixList = @"Prefix list";
		private string m_prefixList=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='prefixList']/@value")]
		public string prefixList {
			get { 
				if( m_prefixList == null){
					return s_prefixList;
				}
				return m_prefixList; 
			}
			set { 
				if( value != m_prefixList){
					m_prefixList = value;
					NotifyPropertyChanged("prefixList");
				}
			}  
		}
	


		private const string s_topicSets = @"TopicSet";
		private string m_topicSets=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='topicSets']/@value")]
		public string topicSets {
			get { 
				if( m_topicSets == null){
					return s_topicSets;
				}
				return m_topicSets; 
			}
			set { 
				if( value != m_topicSets){
					m_topicSets = value;
					NotifyPropertyChanged("topicSets");
				}
			}  
		}
	


		private const string s_addFilter = @"Add filter";
		private string m_addFilter=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='addFilter']/@value")]
		public string addFilter {
			get { 
				if( m_addFilter == null){
					return s_addFilter;
				}
				return m_addFilter; 
			}
			set { 
				if( value != m_addFilter){
					m_addFilter = value;
					NotifyPropertyChanged("addFilter");
				}
			}  
		}
	


		private const string s_collect = @"Collect data";
		private string m_collect=null;
		[XPath(@"/localized-strings/module[@name='LocalMetadata' and @namespace='odm.ui']/descendant::string[@name='collect']/@value")]
		public string collect {
			get { 
				if( m_collect == null){
					return s_collect;
				}
				return m_collect; 
			}
			set { 
				if( value != m_collect){
					m_collect = value;
					NotifyPropertyChanged("collect");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalPTZ: LocalizedStringsBase<LocalPTZ>{
		


		private const string s_presets = @"Presets:";
		private string m_presets=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='presets']/@value")]
		public string presets {
			get { 
				if( m_presets == null){
					return s_presets;
				}
				return m_presets; 
			}
			set { 
				if( value != m_presets){
					m_presets = value;
					NotifyPropertyChanged("presets");
				}
			}  
		}
	


		private const string s_settings = @"Settings:";
		private string m_settings=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='settings']/@value")]
		public string settings {
			get { 
				if( m_settings == null){
					return s_settings;
				}
				return m_settings; 
			}
			set { 
				if( value != m_settings){
					m_settings = value;
					NotifyPropertyChanged("settings");
				}
			}  
		}
	


		private const string s_quicksets = @"Quick sets:";
		private string m_quicksets=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='quicksets']/@value")]
		public string quicksets {
			get { 
				if( m_quicksets == null){
					return s_quicksets;
				}
				return m_quicksets; 
			}
			set { 
				if( value != m_quicksets){
					m_quicksets = value;
					NotifyPropertyChanged("quicksets");
				}
			}  
		}
	


		private const string s_zoom = @"Relative Zoom:";
		private string m_zoom=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='zoom']/@value")]
		public string zoom {
			get { 
				if( m_zoom == null){
					return s_zoom;
				}
				return m_zoom; 
			}
			set { 
				if( value != m_zoom){
					m_zoom = value;
					NotifyPropertyChanged("zoom");
				}
			}  
		}
	


		private const string s_absoluteZoom = @"Absolute Zoom:";
		private string m_absoluteZoom=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='absoluteZoom']/@value")]
		public string absoluteZoom {
			get { 
				if( m_absoluteZoom == null){
					return s_absoluteZoom;
				}
				return m_absoluteZoom; 
			}
			set { 
				if( value != m_absoluteZoom){
					m_absoluteZoom = value;
					NotifyPropertyChanged("absoluteZoom");
				}
			}  
		}
	


		private const string s_relativemove = @"Relative move:";
		private string m_relativemove=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='relativemove']/@value")]
		public string relativemove {
			get { 
				if( m_relativemove == null){
					return s_relativemove;
				}
				return m_relativemove; 
			}
			set { 
				if( value != m_relativemove){
					m_relativemove = value;
					NotifyPropertyChanged("relativemove");
				}
			}  
		}
	


		private const string s_absolute = @"Absolute move:";
		private string m_absolute=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='absolute']/@value")]
		public string absolute {
			get { 
				if( m_absolute == null){
					return s_absolute;
				}
				return m_absolute; 
			}
			set { 
				if( value != m_absolute){
					m_absolute = value;
					NotifyPropertyChanged("absolute");
				}
			}  
		}
	


		private const string s_select = @"Select";
		private string m_select=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='select']/@value")]
		public string select {
			get { 
				if( m_select == null){
					return s_select;
				}
				return m_select; 
			}
			set { 
				if( value != m_select){
					m_select = value;
					NotifyPropertyChanged("select");
				}
			}  
		}
	


		private const string s_delete = @"Delete";
		private string m_delete=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='delete']/@value")]
		public string delete {
			get { 
				if( m_delete == null){
					return s_delete;
				}
				return m_delete; 
			}
			set { 
				if( value != m_delete){
					m_delete = value;
					NotifyPropertyChanged("delete");
				}
			}  
		}
	


		private const string s_apply = @"Apply";
		private string m_apply=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='apply']/@value")]
		public string apply {
			get { 
				if( m_apply == null){
					return s_apply;
				}
				return m_apply; 
			}
			set { 
				if( value != m_apply){
					m_apply = value;
					NotifyPropertyChanged("apply");
				}
			}  
		}
	


		private const string s_go_to = @"Goto";
		private string m_go_to=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='go_to']/@value")]
		public string go_to {
			get { 
				if( m_go_to == null){
					return s_go_to;
				}
				return m_go_to; 
			}
			set { 
				if( value != m_go_to){
					m_go_to = value;
					NotifyPropertyChanged("go_to");
				}
			}  
		}
	


		private const string s_sethome = @"Set Home position";
		private string m_sethome=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='sethome']/@value")]
		public string sethome {
			get { 
				if( m_sethome == null){
					return s_sethome;
				}
				return m_sethome; 
			}
			set { 
				if( value != m_sethome){
					m_sethome = value;
					NotifyPropertyChanged("sethome");
				}
			}  
		}
	


		private const string s_setpreset = @"Set Preset";
		private string m_setpreset=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='setpreset']/@value")]
		public string setpreset {
			get { 
				if( m_setpreset == null){
					return s_setpreset;
				}
				return m_setpreset; 
			}
			set { 
				if( value != m_setpreset){
					m_setpreset = value;
					NotifyPropertyChanged("setpreset");
				}
			}  
		}
	


		private const string s_panspeed = @"Pan speed:";
		private string m_panspeed=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='panspeed']/@value")]
		public string panspeed {
			get { 
				if( m_panspeed == null){
					return s_panspeed;
				}
				return m_panspeed; 
			}
			set { 
				if( value != m_panspeed){
					m_panspeed = value;
					NotifyPropertyChanged("panspeed");
				}
			}  
		}
	


		private const string s_tiltspeed = @"Tilt speed:";
		private string m_tiltspeed=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='tiltspeed']/@value")]
		public string tiltspeed {
			get { 
				if( m_tiltspeed == null){
					return s_tiltspeed;
				}
				return m_tiltspeed; 
			}
			set { 
				if( value != m_tiltspeed){
					m_tiltspeed = value;
					NotifyPropertyChanged("tiltspeed");
				}
			}  
		}
	


		private const string s_zoomspeed = @"Zoom speed:";
		private string m_zoomspeed=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='zoomspeed']/@value")]
		public string zoomspeed {
			get { 
				if( m_zoomspeed == null){
					return s_zoomspeed;
				}
				return m_zoomspeed; 
			}
			set { 
				if( value != m_zoomspeed){
					m_zoomspeed = value;
					NotifyPropertyChanged("zoomspeed");
				}
			}  
		}
	


		private const string s_selectnode = @"Select Node:";
		private string m_selectnode=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='selectnode']/@value")]
		public string selectnode {
			get { 
				if( m_selectnode == null){
					return s_selectnode;
				}
				return m_selectnode; 
			}
			set { 
				if( value != m_selectnode){
					m_selectnode = value;
					NotifyPropertyChanged("selectnode");
				}
			}  
		}
	


		private const string s_setlimits = @"Set up limits:";
		private string m_setlimits=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='setlimits']/@value")]
		public string setlimits {
			get { 
				if( m_setlimits == null){
					return s_setlimits;
				}
				return m_setlimits; 
			}
			set { 
				if( value != m_setlimits){
					m_setlimits = value;
					NotifyPropertyChanged("setlimits");
				}
			}  
		}
	


		private const string s_tiltmin = @"Tilt min:";
		private string m_tiltmin=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='tiltmin']/@value")]
		public string tiltmin {
			get { 
				if( m_tiltmin == null){
					return s_tiltmin;
				}
				return m_tiltmin; 
			}
			set { 
				if( value != m_tiltmin){
					m_tiltmin = value;
					NotifyPropertyChanged("tiltmin");
				}
			}  
		}
	


		private const string s_tiltmax = @"Tilt max:";
		private string m_tiltmax=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='tiltmax']/@value")]
		public string tiltmax {
			get { 
				if( m_tiltmax == null){
					return s_tiltmax;
				}
				return m_tiltmax; 
			}
			set { 
				if( value != m_tiltmax){
					m_tiltmax = value;
					NotifyPropertyChanged("tiltmax");
				}
			}  
		}
	


		private const string s_panmin = @"Pan min:";
		private string m_panmin=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='panmin']/@value")]
		public string panmin {
			get { 
				if( m_panmin == null){
					return s_panmin;
				}
				return m_panmin; 
			}
			set { 
				if( value != m_panmin){
					m_panmin = value;
					NotifyPropertyChanged("panmin");
				}
			}  
		}
	


		private const string s_panmax = @"Pan max:";
		private string m_panmax=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='panmax']/@value")]
		public string panmax {
			get { 
				if( m_panmax == null){
					return s_panmax;
				}
				return m_panmax; 
			}
			set { 
				if( value != m_panmax){
					m_panmax = value;
					NotifyPropertyChanged("panmax");
				}
			}  
		}
	


		private const string s_zoommin = @"Zoom min:";
		private string m_zoommin=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='zoommin']/@value")]
		public string zoommin {
			get { 
				if( m_zoommin == null){
					return s_zoommin;
				}
				return m_zoommin; 
			}
			set { 
				if( value != m_zoommin){
					m_zoommin = value;
					NotifyPropertyChanged("zoommin");
				}
			}  
		}
	


		private const string s_zoommax = @"Zoom max:";
		private string m_zoommax=null;
		[XPath(@"/localized-strings/module[@name='LocalPTZ' and @namespace='odm.ui']/descendant::string[@name='zoommax']/@value")]
		public string zoommax {
			get { 
				if( m_zoommax == null){
					return s_zoommax;
				}
				return m_zoommax; 
			}
			set { 
				if( value != m_zoommax){
					m_zoommax = value;
					NotifyPropertyChanged("zoommax");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalVideoSettings: LocalizedStringsBase<LocalVideoSettings>{
		


		private const string s_title = @"Video streaming";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoSettings' and @namespace='odm.ui']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_resolution = @"Encoder and resolution(pixels)";
		private string m_resolution=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoSettings' and @namespace='odm.ui']/descendant::string[@name='resolution']/@value")]
		public string resolution {
			get { 
				if( m_resolution == null){
					return s_resolution;
				}
				return m_resolution; 
			}
			set { 
				if( value != m_resolution){
					m_resolution = value;
					NotifyPropertyChanged("resolution");
				}
			}  
		}
	


		private const string s_frameRate = @"Frame rate, fps";
		private string m_frameRate=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoSettings' and @namespace='odm.ui']/descendant::string[@name='frameRate']/@value")]
		public string frameRate {
			get { 
				if( m_frameRate == null){
					return s_frameRate;
				}
				return m_frameRate; 
			}
			set { 
				if( value != m_frameRate){
					m_frameRate = value;
					NotifyPropertyChanged("frameRate");
				}
			}  
		}
	


		private const string s_encodingInterval = @"Encoding interval";
		private string m_encodingInterval=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoSettings' and @namespace='odm.ui']/descendant::string[@name='encodingInterval']/@value")]
		public string encodingInterval {
			get { 
				if( m_encodingInterval == null){
					return s_encodingInterval;
				}
				return m_encodingInterval; 
			}
			set { 
				if( value != m_encodingInterval){
					m_encodingInterval = value;
					NotifyPropertyChanged("encodingInterval");
				}
			}  
		}
	


		private const string s_encoder = @"Encoder";
		private string m_encoder=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoSettings' and @namespace='odm.ui']/descendant::string[@name='encoder']/@value")]
		public string encoder {
			get { 
				if( m_encoder == null){
					return s_encoder;
				}
				return m_encoder; 
			}
			set { 
				if( value != m_encoder){
					m_encoder = value;
					NotifyPropertyChanged("encoder");
				}
			}  
		}
	


		private const string s_bitrate = @"Bitrate limit, kbps";
		private string m_bitrate=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoSettings' and @namespace='odm.ui']/descendant::string[@name='bitrate']/@value")]
		public string bitrate {
			get { 
				if( m_bitrate == null){
					return s_bitrate;
				}
				return m_bitrate; 
			}
			set { 
				if( value != m_bitrate){
					m_bitrate = value;
					NotifyPropertyChanged("bitrate");
				}
			}  
		}
	


		private const string s_prioriy = @"Priority";
		private string m_prioriy=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoSettings' and @namespace='odm.ui']/descendant::string[@name='prioriy']/@value")]
		public string prioriy {
			get { 
				if( m_prioriy == null){
					return s_prioriy;
				}
				return m_prioriy; 
			}
			set { 
				if( value != m_prioriy){
					m_prioriy = value;
					NotifyPropertyChanged("prioriy");
				}
			}  
		}
	


		private const string s_quality = @"Quality";
		private string m_quality=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoSettings' and @namespace='odm.ui']/descendant::string[@name='quality']/@value")]
		public string quality {
			get { 
				if( m_quality == null){
					return s_quality;
				}
				return m_quality; 
			}
			set { 
				if( value != m_quality){
					m_quality = value;
					NotifyPropertyChanged("quality");
				}
			}  
		}
	


		private const string s_govLength = @"GOV length";
		private string m_govLength=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoSettings' and @namespace='odm.ui']/descendant::string[@name='govLength']/@value")]
		public string govLength {
			get { 
				if( m_govLength == null){
					return s_govLength;
				}
				return m_govLength; 
			}
			set { 
				if( value != m_govLength){
					m_govLength = value;
					NotifyPropertyChanged("govLength");
				}
			}  
		}
	


		private const string s_metadata = @"Metadata stream On/Off";
		private string m_metadata=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoSettings' and @namespace='odm.ui']/descendant::string[@name='metadata']/@value")]
		public string metadata {
			get { 
				if( m_metadata == null){
					return s_metadata;
				}
				return m_metadata; 
			}
			set { 
				if( value != m_metadata){
					m_metadata = value;
					NotifyPropertyChanged("metadata");
				}
			}  
		}
	


		private const string s_channelName = @"Channel name";
		private string m_channelName=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoSettings' and @namespace='odm.ui']/descendant::string[@name='channelName']/@value")]
		public string channelName {
			get { 
				if( m_channelName == null){
					return s_channelName;
				}
				return m_channelName; 
			}
			set { 
				if( value != m_channelName){
					m_channelName = value;
					NotifyPropertyChanged("channelName");
				}
			}  
		}
	


		private const string s_errorEncoder = @"Model.encoder has invalid value";
		private string m_errorEncoder=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoSettings' and @namespace='odm.ui']/descendant::string[@name='errorEncoder']/@value")]
		public string errorEncoder {
			get { 
				if( m_errorEncoder == null){
					return s_errorEncoder;
				}
				return m_errorEncoder; 
			}
			set { 
				if( value != m_errorEncoder){
					m_errorEncoder = value;
					NotifyPropertyChanged("errorEncoder");
				}
			}  
		}
	


		private const string s_errorSupportResolution = @"Selected encoder doesn't support selected resolution";
		private string m_errorSupportResolution=null;
		[XPath(@"/localized-strings/module[@name='LocalVideoSettings' and @namespace='odm.ui']/descendant::string[@name='errorSupportResolution']/@value")]
		public string errorSupportResolution {
			get { 
				if( m_errorSupportResolution == null){
					return s_errorSupportResolution;
				}
				return m_errorSupportResolution; 
			}
			set { 
				if( value != m_errorSupportResolution){
					m_errorSupportResolution = value;
					NotifyPropertyChanged("errorSupportResolution");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalTimeZone: LocalizedStringsBase<LocalTimeZone>{
		


		private const string s_captionUtc = @"(UTC)";
		private string m_captionUtc=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='captionUtc']/@value")]
		public string captionUtc {
			get { 
				if( m_captionUtc == null){
					return s_captionUtc;
				}
				return m_captionUtc; 
			}
			set { 
				if( value != m_captionUtc){
					m_captionUtc = value;
					NotifyPropertyChanged("captionUtc");
				}
			}  
		}
	


		private const string s_captionLocal = @"(Local)";
		private string m_captionLocal=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='captionLocal']/@value")]
		public string captionLocal {
			get { 
				if( m_captionLocal == null){
					return s_captionLocal;
				}
				return m_captionLocal; 
			}
			set { 
				if( value != m_captionLocal){
					m_captionLocal = value;
					NotifyPropertyChanged("captionLocal");
				}
			}  
		}
	


		private const string s_title = @"Time settings";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_currentTime = @"Current time";
		private string m_currentTime=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='currentTime']/@value")]
		public string currentTime {
			get { 
				if( m_currentTime == null){
					return s_currentTime;
				}
				return m_currentTime; 
			}
			set { 
				if( value != m_currentTime){
					m_currentTime = value;
					NotifyPropertyChanged("currentTime");
				}
			}  
		}
	


		private const string s_timeZone = @"Time zone:";
		private string m_timeZone=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='timeZone']/@value")]
		public string timeZone {
			get { 
				if( m_timeZone == null){
					return s_timeZone;
				}
				return m_timeZone; 
			}
			set { 
				if( value != m_timeZone){
					m_timeZone = value;
					NotifyPropertyChanged("timeZone");
				}
			}  
		}
	


		private const string s_autoAdjustString = @"Automatically adjust for daylight saving time changes.";
		private string m_autoAdjustString=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='autoAdjustString']/@value")]
		public string autoAdjustString {
			get { 
				if( m_autoAdjustString == null){
					return s_autoAdjustString;
				}
				return m_autoAdjustString; 
			}
			set { 
				if( value != m_autoAdjustString){
					m_autoAdjustString = value;
					NotifyPropertyChanged("autoAdjustString");
				}
			}  
		}
	


		private const string s_synchronizeWithComp = @"Synchronize with computer time";
		private string m_synchronizeWithComp=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='synchronizeWithComp']/@value")]
		public string synchronizeWithComp {
			get { 
				if( m_synchronizeWithComp == null){
					return s_synchronizeWithComp;
				}
				return m_synchronizeWithComp; 
			}
			set { 
				if( value != m_synchronizeWithComp){
					m_synchronizeWithComp = value;
					NotifyPropertyChanged("synchronizeWithComp");
				}
			}  
		}
	


		private const string s_date = @"Date:";
		private string m_date=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='date']/@value")]
		public string date {
			get { 
				if( m_date == null){
					return s_date;
				}
				return m_date; 
			}
			set { 
				if( value != m_date){
					m_date = value;
					NotifyPropertyChanged("date");
				}
			}  
		}
	


		private const string s_time = @"Time:";
		private string m_time=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='time']/@value")]
		public string time {
			get { 
				if( m_time == null){
					return s_time;
				}
				return m_time; 
			}
			set { 
				if( value != m_time){
					m_time = value;
					NotifyPropertyChanged("time");
				}
			}  
		}
	


		private const string s_synchronizeWithNtp = @"Synchronize with NTP server";
		private string m_synchronizeWithNtp=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='synchronizeWithNtp']/@value")]
		public string synchronizeWithNtp {
			get { 
				if( m_synchronizeWithNtp == null){
					return s_synchronizeWithNtp;
				}
				return m_synchronizeWithNtp; 
			}
			set { 
				if( value != m_synchronizeWithNtp){
					m_synchronizeWithNtp = value;
					NotifyPropertyChanged("synchronizeWithNtp");
				}
			}  
		}
	


		private const string s_NTPserver = @"NTP server:";
		private string m_NTPserver=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='NTPserver']/@value")]
		public string NTPserver {
			get { 
				if( m_NTPserver == null){
					return s_NTPserver;
				}
				return m_NTPserver; 
			}
			set { 
				if( value != m_NTPserver){
					m_NTPserver = value;
					NotifyPropertyChanged("NTPserver");
				}
			}  
		}
	


		private const string s_manually = @"Set manually";
		private string m_manually=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='manually']/@value")]
		public string manually {
			get { 
				if( m_manually == null){
					return s_manually;
				}
				return m_manually; 
			}
			set { 
				if( value != m_manually){
					m_manually = value;
					NotifyPropertyChanged("manually");
				}
			}  
		}
	


		private const string s_timeMode = @"Time mode:";
		private string m_timeMode=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='timeMode']/@value")]
		public string timeMode {
			get { 
				if( m_timeMode == null){
					return s_timeMode;
				}
				return m_timeMode; 
			}
			set { 
				if( value != m_timeMode){
					m_timeMode = value;
					NotifyPropertyChanged("timeMode");
				}
			}  
		}
	


		private const string s_ntpServerSetupTitle = @"NTP server setup";
		private string m_ntpServerSetupTitle=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='ntpServerSetupTitle']/@value")]
		public string ntpServerSetupTitle {
			get { 
				if( m_ntpServerSetupTitle == null){
					return s_ntpServerSetupTitle;
				}
				return m_ntpServerSetupTitle; 
			}
			set { 
				if( value != m_ntpServerSetupTitle){
					m_ntpServerSetupTitle = value;
					NotifyPropertyChanged("ntpServerSetupTitle");
				}
			}  
		}
	


		private const string s_ntpServerSetupSet = @"Set";
		private string m_ntpServerSetupSet=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='ntpServerSetupSet']/@value")]
		public string ntpServerSetupSet {
			get { 
				if( m_ntpServerSetupSet == null){
					return s_ntpServerSetupSet;
				}
				return m_ntpServerSetupSet; 
			}
			set { 
				if( value != m_ntpServerSetupSet){
					m_ntpServerSetupSet = value;
					NotifyPropertyChanged("ntpServerSetupSet");
				}
			}  
		}
	


		private const string s_warning = @"Warning: the time zone of the device is not the same as the time zone of the PC";
		private string m_warning=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='warning']/@value")]
		public string warning {
			get { 
				if( m_warning == null){
					return s_warning;
				}
				return m_warning; 
			}
			set { 
				if( value != m_warning){
					m_warning = value;
					NotifyPropertyChanged("warning");
				}
			}  
		}
	


		private const string s_ntpSetupInfo = @"Please go to Network settings link to set up NTP servers";
		private string m_ntpSetupInfo=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='ntpSetupInfo']/@value")]
		public string ntpSetupInfo {
			get { 
				if( m_ntpSetupInfo == null){
					return s_ntpSetupInfo;
				}
				return m_ntpSetupInfo; 
			}
			set { 
				if( value != m_ntpSetupInfo){
					m_ntpSetupInfo = value;
					NotifyPropertyChanged("ntpSetupInfo");
				}
			}  
		}
	


		private const string s_fromDHCP = @"From DHCP";
		private string m_fromDHCP=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='fromDHCP']/@value")]
		public string fromDHCP {
			get { 
				if( m_fromDHCP == null){
					return s_fromDHCP;
				}
				return m_fromDHCP; 
			}
			set { 
				if( value != m_fromDHCP){
					m_fromDHCP = value;
					NotifyPropertyChanged("fromDHCP");
				}
			}  
		}
	


		private const string s_newDateTime = @"New time:";
		private string m_newDateTime=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='newDateTime']/@value")]
		public string newDateTime {
			get { 
				if( m_newDateTime == null){
					return s_newDateTime;
				}
				return m_newDateTime; 
			}
			set { 
				if( value != m_newDateTime){
					m_newDateTime = value;
					NotifyPropertyChanged("newDateTime");
				}
			}  
		}
	


		private const string s_applySuccess = @"Changes have been applied successfully. Please notice that it may affect security aspects and device will be inaccessible in current session.";
		private string m_applySuccess=null;
		[XPath(@"/localized-strings/module[@name='LocalTimeZone' and @namespace='odm.ui']/descendant::string[@name='applySuccess']/@value")]
		public string applySuccess {
			get { 
				if( m_applySuccess == null){
					return s_applySuccess;
				}
				return m_applySuccess; 
			}
			set { 
				if( value != m_applySuccess){
					m_applySuccess = value;
					NotifyPropertyChanged("applySuccess");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalSnapshot: LocalizedStringsBase<LocalSnapshot>{
		


		private const string s_loading = @"Loading ...";
		private string m_loading=null;
		[XPath(@"/localized-strings/module[@name='LocalSnapshot' and @namespace='odm.ui']/descendant::string[@name='loading']/@value")]
		public string loading {
			get { 
				if( m_loading == null){
					return s_loading;
				}
				return m_loading; 
			}
			set { 
				if( value != m_loading){
					m_loading = value;
					NotifyPropertyChanged("loading");
				}
			}  
		}
	


		private const string s_imagecorrupt = @"Snapshot image corrupted";
		private string m_imagecorrupt=null;
		[XPath(@"/localized-strings/module[@name='LocalSnapshot' and @namespace='odm.ui']/descendant::string[@name='imagecorrupt']/@value")]
		public string imagecorrupt {
			get { 
				if( m_imagecorrupt == null){
					return s_imagecorrupt;
				}
				return m_imagecorrupt; 
			}
			set { 
				if( value != m_imagecorrupt){
					m_imagecorrupt = value;
					NotifyPropertyChanged("imagecorrupt");
				}
			}  
		}
	


		private const string s_imageloadingerror = @"Snapshot loading error";
		private string m_imageloadingerror=null;
		[XPath(@"/localized-strings/module[@name='LocalSnapshot' and @namespace='odm.ui']/descendant::string[@name='imageloadingerror']/@value")]
		public string imageloadingerror {
			get { 
				if( m_imageloadingerror == null){
					return s_imageloadingerror;
				}
				return m_imageloadingerror; 
			}
			set { 
				if( value != m_imageloadingerror){
					m_imageloadingerror = value;
					NotifyPropertyChanged("imageloadingerror");
				}
			}  
		}
	


		private const string s_disabled = @"Shapshot disabled by user";
		private string m_disabled=null;
		[XPath(@"/localized-strings/module[@name='LocalSnapshot' and @namespace='odm.ui']/descendant::string[@name='disabled']/@value")]
		public string disabled {
			get { 
				if( m_disabled == null){
					return s_disabled;
				}
				return m_disabled; 
			}
			set { 
				if( value != m_disabled){
					m_disabled = value;
					NotifyPropertyChanged("disabled");
				}
			}  
		}
	


		private const string s_snapshot = @"Snapshot";
		private string m_snapshot=null;
		[XPath(@"/localized-strings/module[@name='LocalSnapshot' and @namespace='odm.ui']/descendant::string[@name='snapshot']/@value")]
		public string snapshot {
			get { 
				if( m_snapshot == null){
					return s_snapshot;
				}
				return m_snapshot; 
			}
			set { 
				if( value != m_snapshot){
					m_snapshot = value;
					NotifyPropertyChanged("snapshot");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalBackgroundTasks: LocalizedStringsBase<LocalBackgroundTasks>{
		


		private const string s_cancellAllCaption = @"Cancel all running tasks";
		private string m_cancellAllCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalBackgroundTasks' and @namespace='odm.ui']/descendant::string[@name='cancellAllCaption']/@value")]
		public string cancellAllCaption {
			get { 
				if( m_cancellAllCaption == null){
					return s_cancellAllCaption;
				}
				return m_cancellAllCaption; 
			}
			set { 
				if( value != m_cancellAllCaption){
					m_cancellAllCaption = value;
					NotifyPropertyChanged("cancellAllCaption");
				}
			}  
		}
	


		private const string s_removeFinishedCaption = @"Remove all finished tasks ";
		private string m_removeFinishedCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalBackgroundTasks' and @namespace='odm.ui']/descendant::string[@name='removeFinishedCaption']/@value")]
		public string removeFinishedCaption {
			get { 
				if( m_removeFinishedCaption == null){
					return s_removeFinishedCaption;
				}
				return m_removeFinishedCaption; 
			}
			set { 
				if( value != m_removeFinishedCaption){
					m_removeFinishedCaption = value;
					NotifyPropertyChanged("removeFinishedCaption");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalAppSettings: LocalizedStringsBase<LocalAppSettings>{
		


		private const string s_webbrowser = @"Open web in external browser";
		private string m_webbrowser=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='webbrowser']/@value")]
		public string webbrowser {
			get { 
				if( m_webbrowser == null){
					return s_webbrowser;
				}
				return m_webbrowser; 
			}
			set { 
				if( value != m_webbrowser){
					m_webbrowser = value;
					NotifyPropertyChanged("webbrowser");
				}
			}  
		}
	


		private const string s_videotransport = @"Video streaming transport";
		private string m_videotransport=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='videotransport']/@value")]
		public string videotransport {
			get { 
				if( m_videotransport == null){
					return s_videotransport;
				}
				return m_videotransport; 
			}
			set { 
				if( value != m_videotransport){
					m_videotransport = value;
					NotifyPropertyChanged("videotransport");
				}
			}  
		}
	


		private const string s_eventOnlyPullPoint = @"Only PullPoint";
		private string m_eventOnlyPullPoint=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='eventOnlyPullPoint']/@value")]
		public string eventOnlyPullPoint {
			get { 
				if( m_eventOnlyPullPoint == null){
					return s_eventOnlyPullPoint;
				}
				return m_eventOnlyPullPoint; 
			}
			set { 
				if( value != m_eventOnlyPullPoint){
					m_eventOnlyPullPoint = value;
					NotifyPropertyChanged("eventOnlyPullPoint");
				}
			}  
		}
	


		private const string s_eventOnlyBase = @"Only Base Subscription";
		private string m_eventOnlyBase=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='eventOnlyBase']/@value")]
		public string eventOnlyBase {
			get { 
				if( m_eventOnlyBase == null){
					return s_eventOnlyBase;
				}
				return m_eventOnlyBase; 
			}
			set { 
				if( value != m_eventOnlyBase){
					m_eventOnlyBase = value;
					NotifyPropertyChanged("eventOnlyBase");
				}
			}  
		}
	


		private const string s_eventTryPullPoint = @"PullPoint if available";
		private string m_eventTryPullPoint=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='eventTryPullPoint']/@value")]
		public string eventTryPullPoint {
			get { 
				if( m_eventTryPullPoint == null){
					return s_eventTryPullPoint;
				}
				return m_eventTryPullPoint; 
			}
			set { 
				if( value != m_eventTryPullPoint){
					m_eventTryPullPoint = value;
					NotifyPropertyChanged("eventTryPullPoint");
				}
			}  
		}
	


		private const string s_eventTypeCaption = @"Event subscription type";
		private string m_eventTypeCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='eventTypeCaption']/@value")]
		public string eventTypeCaption {
			get { 
				if( m_eventTypeCaption == null){
					return s_eventTypeCaption;
				}
				return m_eventTypeCaption; 
			}
			set { 
				if( value != m_eventTypeCaption){
					m_eventTypeCaption = value;
					NotifyPropertyChanged("eventTypeCaption");
				}
			}  
		}
	


		private const string s_basePortCaption = @"Base Subscription port number";
		private string m_basePortCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='basePortCaption']/@value")]
		public string basePortCaption {
			get { 
				if( m_basePortCaption == null){
					return s_basePortCaption;
				}
				return m_basePortCaption; 
			}
			set { 
				if( value != m_basePortCaption){
					m_basePortCaption = value;
					NotifyPropertyChanged("basePortCaption");
				}
			}  
		}
	


		private const string s_collectEventsCaption = @"Save events to disk ";
		private string m_collectEventsCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='collectEventsCaption']/@value")]
		public string collectEventsCaption {
			get { 
				if( m_collectEventsCaption == null){
					return s_collectEventsCaption;
				}
				return m_collectEventsCaption; 
			}
			set { 
				if( value != m_collectEventsCaption){
					m_collectEventsCaption = value;
					NotifyPropertyChanged("collectEventsCaption");
				}
			}  
		}
	


		private const string s_collectMetaCaption = @"Save metadata to disk ";
		private string m_collectMetaCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='collectMetaCaption']/@value")]
		public string collectMetaCaption {
			get { 
				if( m_collectMetaCaption == null){
					return s_collectMetaCaption;
				}
				return m_collectMetaCaption; 
			}
			set { 
				if( value != m_collectMetaCaption){
					m_collectMetaCaption = value;
					NotifyPropertyChanged("collectMetaCaption");
				}
			}  
		}
	


		private const string s_enableCustomAnalyticsCaption = @"Enable plugins ";
		private string m_enableCustomAnalyticsCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='enableCustomAnalyticsCaption']/@value")]
		public string enableCustomAnalyticsCaption {
			get { 
				if( m_enableCustomAnalyticsCaption == null){
					return s_enableCustomAnalyticsCaption;
				}
				return m_enableCustomAnalyticsCaption; 
			}
			set { 
				if( value != m_enableCustomAnalyticsCaption){
					m_enableCustomAnalyticsCaption = value;
					NotifyPropertyChanged("enableCustomAnalyticsCaption");
				}
			}  
		}
	


		private const string s_enableEventCaption = @"Enable events subscription ";
		private string m_enableEventCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='enableEventCaption']/@value")]
		public string enableEventCaption {
			get { 
				if( m_enableEventCaption == null){
					return s_enableEventCaption;
				}
				return m_enableEventCaption; 
			}
			set { 
				if( value != m_enableEventCaption){
					m_enableEventCaption = value;
					NotifyPropertyChanged("enableEventCaption");
				}
			}  
		}
	


		private const string s_enableGraphicAnnotationCaption = @"Enable graphic annotation ";
		private string m_enableGraphicAnnotationCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='enableGraphicAnnotationCaption']/@value")]
		public string enableGraphicAnnotationCaption {
			get { 
				if( m_enableGraphicAnnotationCaption == null){
					return s_enableGraphicAnnotationCaption;
				}
				return m_enableGraphicAnnotationCaption; 
			}
			set { 
				if( value != m_enableGraphicAnnotationCaption){
					m_enableGraphicAnnotationCaption = value;
					NotifyPropertyChanged("enableGraphicAnnotationCaption");
				}
			}  
		}
	


		private const string s_enableSnapshotCaption = @"Enable snapshots ";
		private string m_enableSnapshotCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='enableSnapshotCaption']/@value")]
		public string enableSnapshotCaption {
			get { 
				if( m_enableSnapshotCaption == null){
					return s_enableSnapshotCaption;
				}
				return m_enableSnapshotCaption; 
			}
			set { 
				if( value != m_enableSnapshotCaption){
					m_enableSnapshotCaption = value;
					NotifyPropertyChanged("enableSnapshotCaption");
				}
			}  
		}
	


		private const string s_langCaption = @"Language ";
		private string m_langCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='langCaption']/@value")]
		public string langCaption {
			get { 
				if( m_langCaption == null){
					return s_langCaption;
				}
				return m_langCaption; 
			}
			set { 
				if( value != m_langCaption){
					m_langCaption = value;
					NotifyPropertyChanged("langCaption");
				}
			}  
		}
	


		private const string s_uiCaption = @"User interface settings ";
		private string m_uiCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='uiCaption']/@value")]
		public string uiCaption {
			get { 
				if( m_uiCaption == null){
					return s_uiCaption;
				}
				return m_uiCaption; 
			}
			set { 
				if( value != m_uiCaption){
					m_uiCaption = value;
					NotifyPropertyChanged("uiCaption");
				}
			}  
		}
	


		private const string s_eventCaption = @"Events settings";
		private string m_eventCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='eventCaption']/@value")]
		public string eventCaption {
			get { 
				if( m_eventCaption == null){
					return s_eventCaption;
				}
				return m_eventCaption; 
			}
			set { 
				if( value != m_eventCaption){
					m_eventCaption = value;
					NotifyPropertyChanged("eventCaption");
				}
			}  
		}
	


		private const string s_communicationCaption = @"Device communication settings ";
		private string m_communicationCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='communicationCaption']/@value")]
		public string communicationCaption {
			get { 
				if( m_communicationCaption == null){
					return s_communicationCaption;
				}
				return m_communicationCaption; 
			}
			set { 
				if( value != m_communicationCaption){
					m_communicationCaption = value;
					NotifyPropertyChanged("communicationCaption");
				}
			}  
		}
	


		private const string s_videoRenderingFpsCaption = @"Video rendering fps ";
		private string m_videoRenderingFpsCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='videoRenderingFpsCaption']/@value")]
		public string videoRenderingFpsCaption {
			get { 
				if( m_videoRenderingFpsCaption == null){
					return s_videoRenderingFpsCaption;
				}
				return m_videoRenderingFpsCaption; 
			}
			set { 
				if( value != m_videoRenderingFpsCaption){
					m_videoRenderingFpsCaption = value;
					NotifyPropertyChanged("videoRenderingFpsCaption");
				}
			}  
		}
	


		private const string s_showVideoPlaybackStatisticsCaption = @"Show video playback statistics ";
		private string m_showVideoPlaybackStatisticsCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='showVideoPlaybackStatisticsCaption']/@value")]
		public string showVideoPlaybackStatisticsCaption {
			get { 
				if( m_showVideoPlaybackStatisticsCaption == null){
					return s_showVideoPlaybackStatisticsCaption;
				}
				return m_showVideoPlaybackStatisticsCaption; 
			}
			set { 
				if( value != m_showVideoPlaybackStatisticsCaption){
					m_showVideoPlaybackStatisticsCaption = value;
					NotifyPropertyChanged("showVideoPlaybackStatisticsCaption");
				}
			}  
		}
	


		private const string s_enableOnlyDefModeCaption = @"Use extended filter editor ";
		private string m_enableOnlyDefModeCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAppSettings' and @namespace='odm.ui']/descendant::string[@name='enableOnlyDefModeCaption']/@value")]
		public string enableOnlyDefModeCaption {
			get { 
				if( m_enableOnlyDefModeCaption == null){
					return s_enableOnlyDefModeCaption;
				}
				return m_enableOnlyDefModeCaption; 
			}
			set { 
				if( value != m_enableOnlyDefModeCaption){
					m_enableOnlyDefModeCaption = value;
					NotifyPropertyChanged("enableOnlyDefModeCaption");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalAccount: LocalizedStringsBase<LocalAccount>{
		


		private const string s_loginCaption = @"Name";
		private string m_loginCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAccount' and @namespace='odm.ui']/descendant::string[@name='loginCaption']/@value")]
		public string loginCaption {
			get { 
				if( m_loginCaption == null){
					return s_loginCaption;
				}
				return m_loginCaption; 
			}
			set { 
				if( value != m_loginCaption){
					m_loginCaption = value;
					NotifyPropertyChanged("loginCaption");
				}
			}  
		}
	


		private const string s_passwordCaption = @"Password";
		private string m_passwordCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalAccount' and @namespace='odm.ui']/descendant::string[@name='passwordCaption']/@value")]
		public string passwordCaption {
			get { 
				if( m_passwordCaption == null){
					return s_passwordCaption;
				}
				return m_passwordCaption; 
			}
			set { 
				if( value != m_passwordCaption){
					m_passwordCaption = value;
					NotifyPropertyChanged("passwordCaption");
				}
			}  
		}
	


		private const string s_loginButton = @"Log in";
		private string m_loginButton=null;
		[XPath(@"/localized-strings/module[@name='LocalAccount' and @namespace='odm.ui']/descendant::string[@name='loginButton']/@value")]
		public string loginButton {
			get { 
				if( m_loginButton == null){
					return s_loginButton;
				}
				return m_loginButton; 
			}
			set { 
				if( value != m_loginButton){
					m_loginButton = value;
					NotifyPropertyChanged("loginButton");
				}
			}  
		}
	


		private const string s_logoutButton = @"Log out";
		private string m_logoutButton=null;
		[XPath(@"/localized-strings/module[@name='LocalAccount' and @namespace='odm.ui']/descendant::string[@name='logoutButton']/@value")]
		public string logoutButton {
			get { 
				if( m_logoutButton == null){
					return s_logoutButton;
				}
				return m_logoutButton; 
			}
			set { 
				if( value != m_logoutButton){
					m_logoutButton = value;
					NotifyPropertyChanged("logoutButton");
				}
			}  
		}
	


		private const string s_remember = @"Remember";
		private string m_remember=null;
		[XPath(@"/localized-strings/module[@name='LocalAccount' and @namespace='odm.ui']/descendant::string[@name='remember']/@value")]
		public string remember {
			get { 
				if( m_remember == null){
					return s_remember;
				}
				return m_remember; 
			}
			set { 
				if( value != m_remember){
					m_remember = value;
					NotifyPropertyChanged("remember");
				}
			}  
		}
	


		private const string s_loggedAs = @"You logged in as";
		private string m_loggedAs=null;
		[XPath(@"/localized-strings/module[@name='LocalAccount' and @namespace='odm.ui']/descendant::string[@name='loggedAs']/@value")]
		public string loggedAs {
			get { 
				if( m_loggedAs == null){
					return s_loggedAs;
				}
				return m_loggedAs; 
			}
			set { 
				if( value != m_loggedAs){
					m_loggedAs = value;
					NotifyPropertyChanged("loggedAs");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalTitles: LocalizedStringsBase<LocalTitles>{
		


		private const string s_webPage = @"Web page";
		private string m_webPage=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='webPage']/@value")]
		public string webPage {
			get { 
				if( m_webPage == null){
					return s_webPage;
				}
				return m_webPage; 
			}
			set { 
				if( value != m_webPage){
					m_webPage = value;
					NotifyPropertyChanged("webPage");
				}
			}  
		}
	


		private const string s_manualAdd = @"Add device";
		private string m_manualAdd=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='manualAdd']/@value")]
		public string manualAdd {
			get { 
				if( m_manualAdd == null){
					return s_manualAdd;
				}
				return m_manualAdd; 
			}
			set { 
				if( value != m_manualAdd){
					m_manualAdd = value;
					NotifyPropertyChanged("manualAdd");
				}
			}  
		}
	


		private const string s_manualEdit = @"Edit URI";
		private string m_manualEdit=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='manualEdit']/@value")]
		public string manualEdit {
			get { 
				if( m_manualEdit == null){
					return s_manualEdit;
				}
				return m_manualEdit; 
			}
			set { 
				if( value != m_manualEdit){
					m_manualEdit = value;
					NotifyPropertyChanged("manualEdit");
				}
			}  
		}
	


		private const string s_uiTest = @"UI Test";
		private string m_uiTest=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='uiTest']/@value")]
		public string uiTest {
			get { 
				if( m_uiTest == null){
					return s_uiTest;
				}
				return m_uiTest; 
			}
			set { 
				if( value != m_uiTest){
					m_uiTest = value;
					NotifyPropertyChanged("uiTest");
				}
			}  
		}
	


		private const string s_batchUpgrade = @"Batch firmware upgrade";
		private string m_batchUpgrade=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='batchUpgrade']/@value")]
		public string batchUpgrade {
			get { 
				if( m_batchUpgrade == null){
					return s_batchUpgrade;
				}
				return m_batchUpgrade; 
			}
			set { 
				if( value != m_batchUpgrade){
					m_batchUpgrade = value;
					NotifyPropertyChanged("batchUpgrade");
				}
			}  
		}
	


		private const string s_batchRestore = @"Batch settings restore";
		private string m_batchRestore=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='batchRestore']/@value")]
		public string batchRestore {
			get { 
				if( m_batchRestore == null){
					return s_batchRestore;
				}
				return m_batchRestore; 
			}
			set { 
				if( value != m_batchRestore){
					m_batchRestore = value;
					NotifyPropertyChanged("batchRestore");
				}
			}  
		}
	


		private const string s_devicesList = @"Device list";
		private string m_devicesList=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='devicesList']/@value")]
		public string devicesList {
			get { 
				if( m_devicesList == null){
					return s_devicesList;
				}
				return m_devicesList; 
			}
			set { 
				if( value != m_devicesList){
					m_devicesList = value;
					NotifyPropertyChanged("devicesList");
				}
			}  
		}
	


		private const string s_backgroundTasks = @"Background tasks";
		private string m_backgroundTasks=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='backgroundTasks']/@value")]
		public string backgroundTasks {
			get { 
				if( m_backgroundTasks == null){
					return s_backgroundTasks;
				}
				return m_backgroundTasks; 
			}
			set { 
				if( value != m_backgroundTasks){
					m_backgroundTasks = value;
					NotifyPropertyChanged("backgroundTasks");
				}
			}  
		}
	


		private const string s_identificationAndStatus = @"Identification";
		private string m_identificationAndStatus=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='identificationAndStatus']/@value")]
		public string identificationAndStatus {
			get { 
				if( m_identificationAndStatus == null){
					return s_identificationAndStatus;
				}
				return m_identificationAndStatus; 
			}
			set { 
				if( value != m_identificationAndStatus){
					m_identificationAndStatus = value;
					NotifyPropertyChanged("identificationAndStatus");
				}
			}  
		}
	


		private const string s_receivers = @"Receivers";
		private string m_receivers=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='receivers']/@value")]
		public string receivers {
			get { 
				if( m_receivers == null){
					return s_receivers;
				}
				return m_receivers; 
			}
			set { 
				if( value != m_receivers){
					m_receivers = value;
					NotifyPropertyChanged("receivers");
				}
			}  
		}
	


		private const string s_actions = @"Actions";
		private string m_actions=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='actions']/@value")]
		public string actions {
			get { 
				if( m_actions == null){
					return s_actions;
				}
				return m_actions; 
			}
			set { 
				if( value != m_actions){
					m_actions = value;
					NotifyPropertyChanged("actions");
				}
			}  
		}
	


		private const string s_triggers = @"Triggers";
		private string m_triggers=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='triggers']/@value")]
		public string triggers {
			get { 
				if( m_triggers == null){
					return s_triggers;
				}
				return m_triggers; 
			}
			set { 
				if( value != m_triggers){
					m_triggers = value;
					NotifyPropertyChanged("triggers");
				}
			}  
		}
	


		private const string s_usermanager = @"User management";
		private string m_usermanager=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='usermanager']/@value")]
		public string usermanager {
			get { 
				if( m_usermanager == null){
					return s_usermanager;
				}
				return m_usermanager; 
			}
			set { 
				if( value != m_usermanager){
					m_usermanager = value;
					NotifyPropertyChanged("usermanager");
				}
			}  
		}
	


		private const string s_accountmanager = @"Account management";
		private string m_accountmanager=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='accountmanager']/@value")]
		public string accountmanager {
			get { 
				if( m_accountmanager == null){
					return s_accountmanager;
				}
				return m_accountmanager; 
			}
			set { 
				if( value != m_accountmanager){
					m_accountmanager = value;
					NotifyPropertyChanged("accountmanager");
				}
			}  
		}
	


		private const string s_appsettings = @"Application settings";
		private string m_appsettings=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='appsettings']/@value")]
		public string appsettings {
			get { 
				if( m_appsettings == null){
					return s_appsettings;
				}
				return m_appsettings; 
			}
			set { 
				if( value != m_appsettings){
					m_appsettings = value;
					NotifyPropertyChanged("appsettings");
				}
			}  
		}
	


		private const string s_about = @"About";
		private string m_about=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='about']/@value")]
		public string about {
			get { 
				if( m_about == null){
					return s_about;
				}
				return m_about; 
			}
			set { 
				if( value != m_about){
					m_about = value;
					NotifyPropertyChanged("about");
				}
			}  
		}
	


		private const string s_sequrity = @"Certificates";
		private string m_sequrity=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='sequrity']/@value")]
		public string sequrity {
			get { 
				if( m_sequrity == null){
					return s_sequrity;
				}
				return m_sequrity; 
			}
			set { 
				if( value != m_sequrity){
					m_sequrity = value;
					NotifyPropertyChanged("sequrity");
				}
			}  
		}
	


		private const string s_timesettings = @"Time settings";
		private string m_timesettings=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='timesettings']/@value")]
		public string timesettings {
			get { 
				if( m_timesettings == null){
					return s_timesettings;
				}
				return m_timesettings; 
			}
			set { 
				if( value != m_timesettings){
					m_timesettings = value;
					NotifyPropertyChanged("timesettings");
				}
			}  
		}
	


		private const string s_networkSettings = @"Network settings";
		private string m_networkSettings=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='networkSettings']/@value")]
		public string networkSettings {
			get { 
				if( m_networkSettings == null){
					return s_networkSettings;
				}
				return m_networkSettings; 
			}
			set { 
				if( value != m_networkSettings){
					m_networkSettings = value;
					NotifyPropertyChanged("networkSettings");
				}
			}  
		}
	


		private const string s_digitalIO = @"Relays";
		private string m_digitalIO=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='digitalIO']/@value")]
		public string digitalIO {
			get { 
				if( m_digitalIO == null){
					return s_digitalIO;
				}
				return m_digitalIO; 
			}
			set { 
				if( value != m_digitalIO){
					m_digitalIO = value;
					NotifyPropertyChanged("digitalIO");
				}
			}  
		}
	


		private const string s_maintenance = @"Maintenance";
		private string m_maintenance=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='maintenance']/@value")]
		public string maintenance {
			get { 
				if( m_maintenance == null){
					return s_maintenance;
				}
				return m_maintenance; 
			}
			set { 
				if( value != m_maintenance){
					m_maintenance = value;
					NotifyPropertyChanged("maintenance");
				}
			}  
		}
	


		private const string s_systemLog = @"System log";
		private string m_systemLog=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='systemLog']/@value")]
		public string systemLog {
			get { 
				if( m_systemLog == null){
					return s_systemLog;
				}
				return m_systemLog; 
			}
			set { 
				if( value != m_systemLog){
					m_systemLog = value;
					NotifyPropertyChanged("systemLog");
				}
			}  
		}
	


		private const string s_onvifExplorer = @"ONVIF explorer";
		private string m_onvifExplorer=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='onvifExplorer']/@value")]
		public string onvifExplorer {
			get { 
				if( m_onvifExplorer == null){
					return s_onvifExplorer;
				}
				return m_onvifExplorer; 
			}
			set { 
				if( value != m_onvifExplorer){
					m_onvifExplorer = value;
					NotifyPropertyChanged("onvifExplorer");
				}
			}  
		}
	


		private const string s_commonEvents = @"Common events";
		private string m_commonEvents=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='commonEvents']/@value")]
		public string commonEvents {
			get { 
				if( m_commonEvents == null){
					return s_commonEvents;
				}
				return m_commonEvents; 
			}
			set { 
				if( value != m_commonEvents){
					m_commonEvents = value;
					NotifyPropertyChanged("commonEvents");
				}
			}  
		}
	


		private const string s_liveVideo = @"Live video";
		private string m_liveVideo=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='liveVideo']/@value")]
		public string liveVideo {
			get { 
				if( m_liveVideo == null){
					return s_liveVideo;
				}
				return m_liveVideo; 
			}
			set { 
				if( value != m_liveVideo){
					m_liveVideo = value;
					NotifyPropertyChanged("liveVideo");
				}
			}  
		}
	


		private const string s_sensorSettings = @"Imaging settings";
		private string m_sensorSettings=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='sensorSettings']/@value")]
		public string sensorSettings {
			get { 
				if( m_sensorSettings == null){
					return s_sensorSettings;
				}
				return m_sensorSettings; 
			}
			set { 
				if( value != m_sensorSettings){
					m_sensorSettings = value;
					NotifyPropertyChanged("sensorSettings");
				}
			}  
		}
	


		private const string s_events = @"Events";
		private string m_events=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='events']/@value")]
		public string events {
			get { 
				if( m_events == null){
					return s_events;
				}
				return m_events; 
			}
			set { 
				if( value != m_events){
					m_events = value;
					NotifyPropertyChanged("events");
				}
			}  
		}
	


		private const string s_metadata = @"Metadata";
		private string m_metadata=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='metadata']/@value")]
		public string metadata {
			get { 
				if( m_metadata == null){
					return s_metadata;
				}
				return m_metadata; 
			}
			set { 
				if( value != m_metadata){
					m_metadata = value;
					NotifyPropertyChanged("metadata");
				}
			}  
		}
	


		private const string s_depthCalibration = @"Depth calibration";
		private string m_depthCalibration=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='depthCalibration']/@value")]
		public string depthCalibration {
			get { 
				if( m_depthCalibration == null){
					return s_depthCalibration;
				}
				return m_depthCalibration; 
			}
			set { 
				if( value != m_depthCalibration){
					m_depthCalibration = value;
					NotifyPropertyChanged("depthCalibration");
				}
			}  
		}
	


		private const string s_videoStreaming = @"Video streaming";
		private string m_videoStreaming=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='videoStreaming']/@value")]
		public string videoStreaming {
			get { 
				if( m_videoStreaming == null){
					return s_videoStreaming;
				}
				return m_videoStreaming; 
			}
			set { 
				if( value != m_videoStreaming){
					m_videoStreaming = value;
					NotifyPropertyChanged("videoStreaming");
				}
			}  
		}
	


		private const string s_displayAnnotation = @"Annotation";
		private string m_displayAnnotation=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='displayAnnotation']/@value")]
		public string displayAnnotation {
			get { 
				if( m_displayAnnotation == null){
					return s_displayAnnotation;
				}
				return m_displayAnnotation; 
			}
			set { 
				if( value != m_displayAnnotation){
					m_displayAnnotation = value;
					NotifyPropertyChanged("displayAnnotation");
				}
			}  
		}
	


		private const string s_tamperingDetectors = @"Tampering detectors";
		private string m_tamperingDetectors=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='tamperingDetectors']/@value")]
		public string tamperingDetectors {
			get { 
				if( m_tamperingDetectors == null){
					return s_tamperingDetectors;
				}
				return m_tamperingDetectors; 
			}
			set { 
				if( value != m_tamperingDetectors){
					m_tamperingDetectors = value;
					NotifyPropertyChanged("tamperingDetectors");
				}
			}  
		}
	


		private const string s_objectTracker = @"Object tracker";
		private string m_objectTracker=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='objectTracker']/@value")]
		public string objectTracker {
			get { 
				if( m_objectTracker == null){
					return s_objectTracker;
				}
				return m_objectTracker; 
			}
			set { 
				if( value != m_objectTracker){
					m_objectTracker = value;
					NotifyPropertyChanged("objectTracker");
				}
			}  
		}
	


		private const string s_ruleEngine = @"Rules";
		private string m_ruleEngine=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='ruleEngine']/@value")]
		public string ruleEngine {
			get { 
				if( m_ruleEngine == null){
					return s_ruleEngine;
				}
				return m_ruleEngine; 
			}
			set { 
				if( value != m_ruleEngine){
					m_ruleEngine = value;
					NotifyPropertyChanged("ruleEngine");
				}
			}  
		}
	


		private const string s_cantishaker = @"Antishaker";
		private string m_cantishaker=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='cantishaker']/@value")]
		public string cantishaker {
			get { 
				if( m_cantishaker == null){
					return s_cantishaker;
				}
				return m_cantishaker; 
			}
			set { 
				if( value != m_cantishaker){
					m_cantishaker = value;
					NotifyPropertyChanged("cantishaker");
				}
			}  
		}
	


		private const string s_rotation = @"Rotation";
		private string m_rotation=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='rotation']/@value")]
		public string rotation {
			get { 
				if( m_rotation == null){
					return s_rotation;
				}
				return m_rotation; 
			}
			set { 
				if( value != m_rotation){
					m_rotation = value;
					NotifyPropertyChanged("rotation");
				}
			}  
		}
	


		private const string s_analogueOutput = @"Analogue output";
		private string m_analogueOutput=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='analogueOutput']/@value")]
		public string analogueOutput {
			get { 
				if( m_analogueOutput == null){
					return s_analogueOutput;
				}
				return m_analogueOutput; 
			}
			set { 
				if( value != m_analogueOutput){
					m_analogueOutput = value;
					NotifyPropertyChanged("analogueOutput");
				}
			}  
		}
	


		private const string s_profileEditor = @"Profiles";
		private string m_profileEditor=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='profileEditor']/@value")]
		public string profileEditor {
			get { 
				if( m_profileEditor == null){
					return s_profileEditor;
				}
				return m_profileEditor; 
			}
			set { 
				if( value != m_profileEditor){
					m_profileEditor = value;
					NotifyPropertyChanged("profileEditor");
				}
			}  
		}
	


		private const string s_modules = @"Analytics modules management";
		private string m_modules=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='modules']/@value")]
		public string modules {
			get { 
				if( m_modules == null){
					return s_modules;
				}
				return m_modules; 
			}
			set { 
				if( value != m_modules){
					m_modules = value;
					NotifyPropertyChanged("modules");
				}
			}  
		}
	


		private const string s_ptz = @"PTZ сontrol";
		private string m_ptz=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='ptz']/@value")]
		public string ptz {
			get { 
				if( m_ptz == null){
					return s_ptz;
				}
				return m_ptz; 
			}
			set { 
				if( value != m_ptz){
					m_ptz = value;
					NotifyPropertyChanged("ptz");
				}
			}  
		}
	


		private const string s_analytics = @"Analytics";
		private string m_analytics=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='analytics']/@value")]
		public string analytics {
			get { 
				if( m_analytics == null){
					return s_analytics;
				}
				return m_analytics; 
			}
			set { 
				if( value != m_analytics){
					m_analytics = value;
					NotifyPropertyChanged("analytics");
				}
			}  
		}
	


		private const string s_confAnalyticsModules = @"Configure analytics modules";
		private string m_confAnalyticsModules=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='confAnalyticsModules']/@value")]
		public string confAnalyticsModules {
			get { 
				if( m_confAnalyticsModules == null){
					return s_confAnalyticsModules;
				}
				return m_confAnalyticsModules; 
			}
			set { 
				if( value != m_confAnalyticsModules){
					m_confAnalyticsModules = value;
					NotifyPropertyChanged("confAnalyticsModules");
				}
			}  
		}
	


		private const string s_analyticsModuleCofig = @"Analytics module configuration";
		private string m_analyticsModuleCofig=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='analyticsModuleCofig']/@value")]
		public string analyticsModuleCofig {
			get { 
				if( m_analyticsModuleCofig == null){
					return s_analyticsModuleCofig;
				}
				return m_analyticsModuleCofig; 
			}
			set { 
				if( value != m_analyticsModuleCofig){
					m_analyticsModuleCofig = value;
					NotifyPropertyChanged("analyticsModuleCofig");
				}
			}  
		}
	


		private const string s_annotationModuleCofig = @"Annotation module configuration";
		private string m_annotationModuleCofig=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='annotationModuleCofig']/@value")]
		public string annotationModuleCofig {
			get { 
				if( m_annotationModuleCofig == null){
					return s_annotationModuleCofig;
				}
				return m_annotationModuleCofig; 
			}
			set { 
				if( value != m_annotationModuleCofig){
					m_annotationModuleCofig = value;
					NotifyPropertyChanged("annotationModuleCofig");
				}
			}  
		}
	


		private const string s_regionRuleCofig = @"Region rule config";
		private string m_regionRuleCofig=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='regionRuleCofig']/@value")]
		public string regionRuleCofig {
			get { 
				if( m_regionRuleCofig == null){
					return s_regionRuleCofig;
				}
				return m_regionRuleCofig; 
			}
			set { 
				if( value != m_regionRuleCofig){
					m_regionRuleCofig = value;
					NotifyPropertyChanged("regionRuleCofig");
				}
			}  
		}
	


		private const string s_wireRuleCofig = @"Trip wire rule config";
		private string m_wireRuleCofig=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='wireRuleCofig']/@value")]
		public string wireRuleCofig {
			get { 
				if( m_wireRuleCofig == null){
					return s_wireRuleCofig;
				}
				return m_wireRuleCofig; 
			}
			set { 
				if( value != m_wireRuleCofig){
					m_wireRuleCofig = value;
					NotifyPropertyChanged("wireRuleCofig");
				}
			}  
		}
	


		private const string s_configuration = @"Configuration";
		private string m_configuration=null;
		[XPath(@"/localized-strings/module[@name='LocalTitles' and @namespace='odm.ui']/descendant::string[@name='configuration']/@value")]
		public string configuration {
			get { 
				if( m_configuration == null){
					return s_configuration;
				}
				return m_configuration; 
			}
			set { 
				if( value != m_configuration){
					m_configuration = value;
					NotifyPropertyChanged("configuration");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalButtons: LocalizedStringsBase<LocalButtons>{
		


		private const string s_save = @"Save";
		private string m_save=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='save']/@value")]
		public string save {
			get { 
				if( m_save == null){
					return s_save;
				}
				return m_save; 
			}
			set { 
				if( value != m_save){
					m_save = value;
					NotifyPropertyChanged("save");
				}
			}  
		}
	


		private const string s_add = @"Add";
		private string m_add=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='add']/@value")]
		public string add {
			get { 
				if( m_add == null){
					return s_add;
				}
				return m_add; 
			}
			set { 
				if( value != m_add){
					m_add = value;
					NotifyPropertyChanged("add");
				}
			}  
		}
	


		private const string s_apply = @"Apply";
		private string m_apply=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='apply']/@value")]
		public string apply {
			get { 
				if( m_apply == null){
					return s_apply;
				}
				return m_apply; 
			}
			set { 
				if( value != m_apply){
					m_apply = value;
					NotifyPropertyChanged("apply");
				}
			}  
		}
	


		private const string s_continue1 = @"Continue";
		private string m_continue1=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='continue1']/@value")]
		public string continue1 {
			get { 
				if( m_continue1 == null){
					return s_continue1;
				}
				return m_continue1; 
			}
			set { 
				if( value != m_continue1){
					m_continue1 = value;
					NotifyPropertyChanged("continue1");
				}
			}  
		}
	


		private const string s_abort = @"Abort";
		private string m_abort=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='abort']/@value")]
		public string abort {
			get { 
				if( m_abort == null){
					return s_abort;
				}
				return m_abort; 
			}
			set { 
				if( value != m_abort){
					m_abort = value;
					NotifyPropertyChanged("abort");
				}
			}  
		}
	


		private const string s_finish = @"Finish";
		private string m_finish=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='finish']/@value")]
		public string finish {
			get { 
				if( m_finish == null){
					return s_finish;
				}
				return m_finish; 
			}
			set { 
				if( value != m_finish){
					m_finish = value;
					NotifyPropertyChanged("finish");
				}
			}  
		}
	


		private const string s_cancel = @"Cancel";
		private string m_cancel=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='cancel']/@value")]
		public string cancel {
			get { 
				if( m_cancel == null){
					return s_cancel;
				}
				return m_cancel; 
			}
			set { 
				if( value != m_cancel){
					m_cancel = value;
					NotifyPropertyChanged("cancel");
				}
			}  
		}
	


		private const string s_create = @"Create";
		private string m_create=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='create']/@value")]
		public string create {
			get { 
				if( m_create == null){
					return s_create;
				}
				return m_create; 
			}
			set { 
				if( value != m_create){
					m_create = value;
					NotifyPropertyChanged("create");
				}
			}  
		}
	


		private const string s_delete = @"Delete";
		private string m_delete=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='delete']/@value")]
		public string delete {
			get { 
				if( m_delete == null){
					return s_delete;
				}
				return m_delete; 
			}
			set { 
				if( value != m_delete){
					m_delete = value;
					NotifyPropertyChanged("delete");
				}
			}  
		}
	


		private const string s_modify = @"Modify";
		private string m_modify=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='modify']/@value")]
		public string modify {
			get { 
				if( m_modify == null){
					return s_modify;
				}
				return m_modify; 
			}
			set { 
				if( value != m_modify){
					m_modify = value;
					NotifyPropertyChanged("modify");
				}
			}  
		}
	


		private const string s_edit = @"Edit";
		private string m_edit=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='edit']/@value")]
		public string edit {
			get { 
				if( m_edit == null){
					return s_edit;
				}
				return m_edit; 
			}
			set { 
				if( value != m_edit){
					m_edit = value;
					NotifyPropertyChanged("edit");
				}
			}  
		}
	


		private const string s_select = @"Select";
		private string m_select=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='select']/@value")]
		public string select {
			get { 
				if( m_select == null){
					return s_select;
				}
				return m_select; 
			}
			set { 
				if( value != m_select){
					m_select = value;
					NotifyPropertyChanged("select");
				}
			}  
		}
	


		private const string s_close = @"Close";
		private string m_close=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='close']/@value")]
		public string close {
			get { 
				if( m_close == null){
					return s_close;
				}
				return m_close; 
			}
			set { 
				if( value != m_close){
					m_close = value;
					NotifyPropertyChanged("close");
				}
			}  
		}
	


		private const string s_pause = @"Pause";
		private string m_pause=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='pause']/@value")]
		public string pause {
			get { 
				if( m_pause == null){
					return s_pause;
				}
				return m_pause; 
			}
			set { 
				if( value != m_pause){
					m_pause = value;
					NotifyPropertyChanged("pause");
				}
			}  
		}
	


		private const string s_resume = @"Resume";
		private string m_resume=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='resume']/@value")]
		public string resume {
			get { 
				if( m_resume == null){
					return s_resume;
				}
				return m_resume; 
			}
			set { 
				if( value != m_resume){
					m_resume = value;
					NotifyPropertyChanged("resume");
				}
			}  
		}
	


		private const string s_details = @"Show details";
		private string m_details=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='details']/@value")]
		public string details {
			get { 
				if( m_details == null){
					return s_details;
				}
				return m_details; 
			}
			set { 
				if( value != m_details){
					m_details = value;
					NotifyPropertyChanged("details");
				}
			}  
		}
	


		private const string s_background = @"Background";
		private string m_background=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='background']/@value")]
		public string background {
			get { 
				if( m_background == null){
					return s_background;
				}
				return m_background; 
			}
			set { 
				if( value != m_background){
					m_background = value;
					NotifyPropertyChanged("background");
				}
			}  
		}
	


		private const string s_refresh = @"Refresh";
		private string m_refresh=null;
		[XPath(@"/localized-strings/module[@name='LocalButtons' and @namespace='odm.ui']/descendant::string[@name='refresh']/@value")]
		public string refresh {
			get { 
				if( m_refresh == null){
					return s_refresh;
				}
				return m_refresh; 
			}
			set { 
				if( value != m_refresh){
					m_refresh = value;
					NotifyPropertyChanged("refresh");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalDevice: LocalizedStringsBase<LocalDevice>{
		


		private const string s_currentAccount = @"Current account: ";
		private string m_currentAccount=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='currentAccount']/@value")]
		public string currentAccount {
			get { 
				if( m_currentAccount == null){
					return s_currentAccount;
				}
				return m_currentAccount; 
			}
			set { 
				if( value != m_currentAccount){
					m_currentAccount = value;
					NotifyPropertyChanged("currentAccount");
				}
			}  
		}
	


		private const string s_apply = @"Apply";
		private string m_apply=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='apply']/@value")]
		public string apply {
			get { 
				if( m_apply == null){
					return s_apply;
				}
				return m_apply; 
			}
			set { 
				if( value != m_apply){
					m_apply = value;
					NotifyPropertyChanged("apply");
				}
			}  
		}
	


		private const string s_accountManager = @"Account manager";
		private string m_accountManager=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='accountManager']/@value")]
		public string accountManager {
			get { 
				if( m_accountManager == null){
					return s_accountManager;
				}
				return m_accountManager; 
			}
			set { 
				if( value != m_accountManager){
					m_accountManager = value;
					NotifyPropertyChanged("accountManager");
				}
			}  
		}
	


		private const string s_title = @"Device configuration";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_languageEng = @"English";
		private string m_languageEng=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='languageEng']/@value")]
		public string languageEng {
			get { 
				if( m_languageEng == null){
					return s_languageEng;
				}
				return m_languageEng; 
			}
			set { 
				if( value != m_languageEng){
					m_languageEng = value;
					NotifyPropertyChanged("languageEng");
				}
			}  
		}
	


		private const string s_languageRus = @"Русский";
		private string m_languageRus=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='languageRus']/@value")]
		public string languageRus {
			get { 
				if( m_languageRus == null){
					return s_languageRus;
				}
				return m_languageRus; 
			}
			set { 
				if( value != m_languageRus){
					m_languageRus = value;
					NotifyPropertyChanged("languageRus");
				}
			}  
		}
	


		private const string s_loading = @"Loading ...";
		private string m_loading=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='loading']/@value")]
		public string loading {
			get { 
				if( m_loading == null){
					return s_loading;
				}
				return m_loading; 
			}
			set { 
				if( value != m_loading){
					m_loading = value;
					NotifyPropertyChanged("loading");
				}
			}  
		}
	


		private const string s_uploading = @"Uploading ...";
		private string m_uploading=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='uploading']/@value")]
		public string uploading {
			get { 
				if( m_uploading == null){
					return s_uploading;
				}
				return m_uploading; 
			}
			set { 
				if( value != m_uploading){
					m_uploading = value;
					NotifyPropertyChanged("uploading");
				}
			}  
		}
	


		private const string s_downloading = @"Downloading ...";
		private string m_downloading=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='downloading']/@value")]
		public string downloading {
			get { 
				if( m_downloading == null){
					return s_downloading;
				}
				return m_downloading; 
			}
			set { 
				if( value != m_downloading){
					m_downloading = value;
					NotifyPropertyChanged("downloading");
				}
			}  
		}
	


		private const string s_applying = @"Applying changes...";
		private string m_applying=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='applying']/@value")]
		public string applying {
			get { 
				if( m_applying == null){
					return s_applying;
				}
				return m_applying; 
			}
			set { 
				if( value != m_applying){
					m_applying = value;
					NotifyPropertyChanged("applying");
				}
			}  
		}
	


		private const string s_information = @"Information";
		private string m_information=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='information']/@value")]
		public string information {
			get { 
				if( m_information == null){
					return s_information;
				}
				return m_information; 
			}
			set { 
				if( value != m_information){
					m_information = value;
					NotifyPropertyChanged("information");
				}
			}  
		}
	


		private const string s_creating = @"Creating...";
		private string m_creating=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='creating']/@value")]
		public string creating {
			get { 
				if( m_creating == null){
					return s_creating;
				}
				return m_creating; 
			}
			set { 
				if( value != m_creating){
					m_creating = value;
					NotifyPropertyChanged("creating");
				}
			}  
		}
	


		private const string s_deleting = @"Deleting...";
		private string m_deleting=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='deleting']/@value")]
		public string deleting {
			get { 
				if( m_deleting == null){
					return s_deleting;
				}
				return m_deleting; 
			}
			set { 
				if( value != m_deleting){
					m_deleting = value;
					NotifyPropertyChanged("deleting");
				}
			}  
		}
	


		private const string s_configuring = @"Cofiguring...";
		private string m_configuring=null;
		[XPath(@"/localized-strings/module[@name='LocalDevice' and @namespace='odm.ui']/descendant::string[@name='configuring']/@value")]
		public string configuring {
			get { 
				if( m_configuring == null){
					return s_configuring;
				}
				return m_configuring; 
			}
			set { 
				if( value != m_configuring){
					m_configuring = value;
					NotifyPropertyChanged("configuring");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalDeviceList: LocalizedStringsBase<LocalDeviceList>{
		


		private const string s_firmware = @"Firmware";
		private string m_firmware=null;
		[XPath(@"/localized-strings/module[@name='LocalDeviceList' and @namespace='odm.ui']/descendant::string[@name='firmware']/@value")]
		public string firmware {
			get { 
				if( m_firmware == null){
					return s_firmware;
				}
				return m_firmware; 
			}
			set { 
				if( value != m_firmware){
					m_firmware = value;
					NotifyPropertyChanged("firmware");
				}
			}  
		}
	


		private const string s_location = @"Location";
		private string m_location=null;
		[XPath(@"/localized-strings/module[@name='LocalDeviceList' and @namespace='odm.ui']/descendant::string[@name='location']/@value")]
		public string location {
			get { 
				if( m_location == null){
					return s_location;
				}
				return m_location; 
			}
			set { 
				if( value != m_location){
					m_location = value;
					NotifyPropertyChanged("location");
				}
			}  
		}
	


		private const string s_address = @"Address";
		private string m_address=null;
		[XPath(@"/localized-strings/module[@name='LocalDeviceList' and @namespace='odm.ui']/descendant::string[@name='address']/@value")]
		public string address {
			get { 
				if( m_address == null){
					return s_address;
				}
				return m_address; 
			}
			set { 
				if( value != m_address){
					m_address = value;
					NotifyPropertyChanged("address");
				}
			}  
		}
	


		private const string s_refresh = @"Refresh";
		private string m_refresh=null;
		[XPath(@"/localized-strings/module[@name='LocalDeviceList' and @namespace='odm.ui']/descendant::string[@name='refresh']/@value")]
		public string refresh {
			get { 
				if( m_refresh == null){
					return s_refresh;
				}
				return m_refresh; 
			}
			set { 
				if( value != m_refresh){
					m_refresh = value;
					NotifyPropertyChanged("refresh");
				}
			}  
		}
	


		private const string s_manualadd = @"Add";
		private string m_manualadd=null;
		[XPath(@"/localized-strings/module[@name='LocalDeviceList' and @namespace='odm.ui']/descendant::string[@name='manualadd']/@value")]
		public string manualadd {
			get { 
				if( m_manualadd == null){
					return s_manualadd;
				}
				return m_manualadd; 
			}
			set { 
				if( value != m_manualadd){
					m_manualadd = value;
					NotifyPropertyChanged("manualadd");
				}
			}  
		}
	


		private const string s_Filter = @"Filter: ";
		private string m_Filter=null;
		[XPath(@"/localized-strings/module[@name='LocalDeviceList' and @namespace='odm.ui']/descendant::string[@name='Filter']/@value")]
		public string Filter {
			get { 
				if( m_Filter == null){
					return s_Filter;
				}
				return m_Filter; 
			}
			set { 
				if( value != m_Filter){
					m_Filter = value;
					NotifyPropertyChanged("Filter");
				}
			}  
		}
	


		private const string s_search = @"name, location or address";
		private string m_search=null;
		[XPath(@"/localized-strings/module[@name='LocalDeviceList' and @namespace='odm.ui']/descendant::string[@name='search']/@value")]
		public string search {
			get { 
				if( m_search == null){
					return s_search;
				}
				return m_search; 
			}
			set { 
				if( value != m_search){
					m_search = value;
					NotifyPropertyChanged("search");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalNetworkSettings: LocalizedStringsBase<LocalNetworkSettings>{
		


		private const string s_portsHttp = @"HTTP ports:";
		private string m_portsHttp=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='portsHttp']/@value")]
		public string portsHttp {
			get { 
				if( m_portsHttp == null){
					return s_portsHttp;
				}
				return m_portsHttp; 
			}
			set { 
				if( value != m_portsHttp){
					m_portsHttp = value;
					NotifyPropertyChanged("portsHttp");
				}
			}  
		}
	


		private const string s_portsHttps = @"HTTPS ports:";
		private string m_portsHttps=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='portsHttps']/@value")]
		public string portsHttps {
			get { 
				if( m_portsHttps == null){
					return s_portsHttps;
				}
				return m_portsHttps; 
			}
			set { 
				if( value != m_portsHttps){
					m_portsHttps = value;
					NotifyPropertyChanged("portsHttps");
				}
			}  
		}
	


		private const string s_portsRtsp = @"RTSP ports:";
		private string m_portsRtsp=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='portsRtsp']/@value")]
		public string portsRtsp {
			get { 
				if( m_portsRtsp == null){
					return s_portsRtsp;
				}
				return m_portsRtsp; 
			}
			set { 
				if( value != m_portsRtsp){
					m_portsRtsp = value;
					NotifyPropertyChanged("portsRtsp");
				}
			}  
		}
	


		private const string s_hostName = @"Host name:";
		private string m_hostName=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='hostName']/@value")]
		public string hostName {
			get { 
				if( m_hostName == null){
					return s_hostName;
				}
				return m_hostName; 
			}
			set { 
				if( value != m_hostName){
					m_hostName = value;
					NotifyPropertyChanged("hostName");
				}
			}  
		}
	


		private const string s_zeroCaption = @"Enable zero config:";
		private string m_zeroCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='zeroCaption']/@value")]
		public string zeroCaption {
			get { 
				if( m_zeroCaption == null){
					return s_zeroCaption;
				}
				return m_zeroCaption; 
			}
			set { 
				if( value != m_zeroCaption){
					m_zeroCaption = value;
					NotifyPropertyChanged("zeroCaption");
				}
			}  
		}
	


		private const string s_ipAddress = @"IP Address:";
		private string m_ipAddress=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='ipAddress']/@value")]
		public string ipAddress {
			get { 
				if( m_ipAddress == null){
					return s_ipAddress;
				}
				return m_ipAddress; 
			}
			set { 
				if( value != m_ipAddress){
					m_ipAddress = value;
					NotifyPropertyChanged("ipAddress");
				}
			}  
		}
	


		private const string s_ipMask = @"Subnet mask:";
		private string m_ipMask=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='ipMask']/@value")]
		public string ipMask {
			get { 
				if( m_ipMask == null){
					return s_ipMask;
				}
				return m_ipMask; 
			}
			set { 
				if( value != m_ipMask){
					m_ipMask = value;
					NotifyPropertyChanged("ipMask");
				}
			}  
		}
	


		private const string s_gateway = @"Default gateway:";
		private string m_gateway=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='gateway']/@value")]
		public string gateway {
			get { 
				if( m_gateway == null){
					return s_gateway;
				}
				return m_gateway; 
			}
			set { 
				if( value != m_gateway){
					m_gateway = value;
					NotifyPropertyChanged("gateway");
				}
			}  
		}
	


		private const string s_dnsFromDhcp = @"Obtain DNS from DHCP:";
		private string m_dnsFromDhcp=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='dnsFromDhcp']/@value")]
		public string dnsFromDhcp {
			get { 
				if( m_dnsFromDhcp == null){
					return s_dnsFromDhcp;
				}
				return m_dnsFromDhcp; 
			}
			set { 
				if( value != m_dnsFromDhcp){
					m_dnsFromDhcp = value;
					NotifyPropertyChanged("dnsFromDhcp");
				}
			}  
		}
	


		private const string s_dns = @"DNS:";
		private string m_dns=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='dns']/@value")]
		public string dns {
			get { 
				if( m_dns == null){
					return s_dns;
				}
				return m_dns; 
			}
			set { 
				if( value != m_dns){
					m_dns = value;
					NotifyPropertyChanged("dns");
				}
			}  
		}
	


		private const string s_ntp = @"NTP servers:";
		private string m_ntp=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='ntp']/@value")]
		public string ntp {
			get { 
				if( m_ntp == null){
					return s_ntp;
				}
				return m_ntp; 
			}
			set { 
				if( value != m_ntp){
					m_ntp = value;
					NotifyPropertyChanged("ntp");
				}
			}  
		}
	


		private const string s_ntpFromDhcp = @"Obtain NTP servers from DHCP:";
		private string m_ntpFromDhcp=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='ntpFromDhcp']/@value")]
		public string ntpFromDhcp {
			get { 
				if( m_ntpFromDhcp == null){
					return s_ntpFromDhcp;
				}
				return m_ntpFromDhcp; 
			}
			set { 
				if( value != m_ntpFromDhcp){
					m_ntpFromDhcp = value;
					NotifyPropertyChanged("ntpFromDhcp");
				}
			}  
		}
	


		private const string s_dhcp = @"DHCP:";
		private string m_dhcp=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='dhcp']/@value")]
		public string dhcp {
			get { 
				if( m_dhcp == null){
					return s_dhcp;
				}
				return m_dhcp; 
			}
			set { 
				if( value != m_dhcp){
					m_dhcp = value;
					NotifyPropertyChanged("dhcp");
				}
			}  
		}
	


		private const string s_discoveryMode = @"ONVIF discovery mode:";
		private string m_discoveryMode=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='discoveryMode']/@value")]
		public string discoveryMode {
			get { 
				if( m_discoveryMode == null){
					return s_discoveryMode;
				}
				return m_discoveryMode; 
			}
			set { 
				if( value != m_discoveryMode){
					m_discoveryMode = value;
					NotifyPropertyChanged("discoveryMode");
				}
			}  
		}
	


		private const string s_applyindNtp = @"Applying new ntp settings...";
		private string m_applyindNtp=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='applyindNtp']/@value")]
		public string applyindNtp {
			get { 
				if( m_applyindNtp == null){
					return s_applyindNtp;
				}
				return m_applyindNtp; 
			}
			set { 
				if( value != m_applyindNtp){
					m_applyindNtp = value;
					NotifyPropertyChanged("applyindNtp");
				}
			}  
		}
	


		private const string s_applyindDns = @"Applying new dns settings...";
		private string m_applyindDns=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='applyindDns']/@value")]
		public string applyindDns {
			get { 
				if( m_applyindDns == null){
					return s_applyindDns;
				}
				return m_applyindDns; 
			}
			set { 
				if( value != m_applyindDns){
					m_applyindDns = value;
					NotifyPropertyChanged("applyindDns");
				}
			}  
		}
	


		private const string s_applyindGateway = @"Applying new gateway settings...";
		private string m_applyindGateway=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='applyindGateway']/@value")]
		public string applyindGateway {
			get { 
				if( m_applyindGateway == null){
					return s_applyindGateway;
				}
				return m_applyindGateway; 
			}
			set { 
				if( value != m_applyindGateway){
					m_applyindGateway = value;
					NotifyPropertyChanged("applyindGateway");
				}
			}  
		}
	


		private const string s_invalidIpForGateway = @"Invalid ip-address for gateway";
		private string m_invalidIpForGateway=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='invalidIpForGateway']/@value")]
		public string invalidIpForGateway {
			get { 
				if( m_invalidIpForGateway == null){
					return s_invalidIpForGateway;
				}
				return m_invalidIpForGateway; 
			}
			set { 
				if( value != m_invalidIpForGateway){
					m_invalidIpForGateway = value;
					NotifyPropertyChanged("invalidIpForGateway");
				}
			}  
		}
	


		private const string s_applyindZeroConf = @"Applying new zero-configuration settings...";
		private string m_applyindZeroConf=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='applyindZeroConf']/@value")]
		public string applyindZeroConf {
			get { 
				if( m_applyindZeroConf == null){
					return s_applyindZeroConf;
				}
				return m_applyindZeroConf; 
			}
			set { 
				if( value != m_applyindZeroConf){
					m_applyindZeroConf = value;
					NotifyPropertyChanged("applyindZeroConf");
				}
			}  
		}
	


		private const string s_applyindHostName = @"Applying host name settings";
		private string m_applyindHostName=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='applyindHostName']/@value")]
		public string applyindHostName {
			get { 
				if( m_applyindHostName == null){
					return s_applyindHostName;
				}
				return m_applyindHostName; 
			}
			set { 
				if( value != m_applyindHostName){
					m_applyindHostName = value;
					NotifyPropertyChanged("applyindHostName");
				}
			}  
		}
	


		private const string s_applyindIp = @"Applying new ip settings...";
		private string m_applyindIp=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='applyindIp']/@value")]
		public string applyindIp {
			get { 
				if( m_applyindIp == null){
					return s_applyindIp;
				}
				return m_applyindIp; 
			}
			set { 
				if( value != m_applyindIp){
					m_applyindIp = value;
					NotifyPropertyChanged("applyindIp");
				}
			}  
		}
	


		private const string s_on = @"On";
		private string m_on=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='on']/@value")]
		public string on {
			get { 
				if( m_on == null){
					return s_on;
				}
				return m_on; 
			}
			set { 
				if( value != m_on){
					m_on = value;
					NotifyPropertyChanged("on");
				}
			}  
		}
	


		private const string s_off = @"Off";
		private string m_off=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='off']/@value")]
		public string off {
			get { 
				if( m_off == null){
					return s_off;
				}
				return m_off; 
			}
			set { 
				if( value != m_off){
					m_off = value;
					NotifyPropertyChanged("off");
				}
			}  
		}
	


		private const string s_enable = @"Enable";
		private string m_enable=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='enable']/@value")]
		public string enable {
			get { 
				if( m_enable == null){
					return s_enable;
				}
				return m_enable; 
			}
			set { 
				if( value != m_enable){
					m_enable = value;
					NotifyPropertyChanged("enable");
				}
			}  
		}
	


		private const string s_disable = @"Disable";
		private string m_disable=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='disable']/@value")]
		public string disable {
			get { 
				if( m_disable == null){
					return s_disable;
				}
				return m_disable; 
			}
			set { 
				if( value != m_disable){
					m_disable = value;
					NotifyPropertyChanged("disable");
				}
			}  
		}
	


		private const string s_fromDhcp = @"DHCP";
		private string m_fromDhcp=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='fromDhcp']/@value")]
		public string fromDhcp {
			get { 
				if( m_fromDhcp == null){
					return s_fromDhcp;
				}
				return m_fromDhcp; 
			}
			set { 
				if( value != m_fromDhcp){
					m_fromDhcp = value;
					NotifyPropertyChanged("fromDhcp");
				}
			}  
		}
	


		private const string s_manual = @"Manual";
		private string m_manual=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='manual']/@value")]
		public string manual {
			get { 
				if( m_manual == null){
					return s_manual;
				}
				return m_manual; 
			}
			set { 
				if( value != m_manual){
					m_manual = value;
					NotifyPropertyChanged("manual");
				}
			}  
		}
	


		private const string s_discoverable = @"Discoverable";
		private string m_discoverable=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='discoverable']/@value")]
		public string discoverable {
			get { 
				if( m_discoverable == null){
					return s_discoverable;
				}
				return m_discoverable; 
			}
			set { 
				if( value != m_discoverable){
					m_discoverable = value;
					NotifyPropertyChanged("discoverable");
				}
			}  
		}
	


		private const string s_nonDiscoverable = @"Non-discoverable";
		private string m_nonDiscoverable=null;
		[XPath(@"/localized-strings/module[@name='LocalNetworkSettings' and @namespace='odm.ui']/descendant::string[@name='nonDiscoverable']/@value")]
		public string nonDiscoverable {
			get { 
				if( m_nonDiscoverable == null){
					return s_nonDiscoverable;
				}
				return m_nonDiscoverable; 
			}
			set { 
				if( value != m_nonDiscoverable){
					m_nonDiscoverable = value;
					NotifyPropertyChanged("nonDiscoverable");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalApproAnalytics: LocalizedStringsBase<LocalApproAnalytics>{
		


		private const string s_title = @"Appro motion detector";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='LocalApproAnalytics' and @namespace='odm.ui']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_isEnabled = @"Is enabled";
		private string m_isEnabled=null;
		[XPath(@"/localized-strings/module[@name='LocalApproAnalytics' and @namespace='odm.ui']/descendant::string[@name='isEnabled']/@value")]
		public string isEnabled {
			get { 
				if( m_isEnabled == null){
					return s_isEnabled;
				}
				return m_isEnabled; 
			}
			set { 
				if( value != m_isEnabled){
					m_isEnabled = value;
					NotifyPropertyChanged("isEnabled");
				}
			}  
		}
	


		private const string s_sensitivity = @"Sensitivity value";
		private string m_sensitivity=null;
		[XPath(@"/localized-strings/module[@name='LocalApproAnalytics' and @namespace='odm.ui']/descendant::string[@name='sensitivity']/@value")]
		public string sensitivity {
			get { 
				if( m_sensitivity == null){
					return s_sensitivity;
				}
				return m_sensitivity; 
			}
			set { 
				if( value != m_sensitivity){
					m_sensitivity = value;
					NotifyPropertyChanged("sensitivity");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalUserManagement: LocalizedStringsBase<LocalUserManagement>{
		


		private const string s_usersCaption = @"Users:";
		private string m_usersCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='usersCaption']/@value")]
		public string usersCaption {
			get { 
				if( m_usersCaption == null){
					return s_usersCaption;
				}
				return m_usersCaption; 
			}
			set { 
				if( value != m_usersCaption){
					m_usersCaption = value;
					NotifyPropertyChanged("usersCaption");
				}
			}  
		}
	


		private const string s_policiesCaption = @"Policies:";
		private string m_policiesCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='policiesCaption']/@value")]
		public string policiesCaption {
			get { 
				if( m_policiesCaption == null){
					return s_policiesCaption;
				}
				return m_policiesCaption; 
			}
			set { 
				if( value != m_policiesCaption){
					m_policiesCaption = value;
					NotifyPropertyChanged("policiesCaption");
				}
			}  
		}
	


		private const string s_createUserButton = @"Create";
		private string m_createUserButton=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='createUserButton']/@value")]
		public string createUserButton {
			get { 
				if( m_createUserButton == null){
					return s_createUserButton;
				}
				return m_createUserButton; 
			}
			set { 
				if( value != m_createUserButton){
					m_createUserButton = value;
					NotifyPropertyChanged("createUserButton");
				}
			}  
		}
	


		private const string s_modifyUserButton = @"Modify";
		private string m_modifyUserButton=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='modifyUserButton']/@value")]
		public string modifyUserButton {
			get { 
				if( m_modifyUserButton == null){
					return s_modifyUserButton;
				}
				return m_modifyUserButton; 
			}
			set { 
				if( value != m_modifyUserButton){
					m_modifyUserButton = value;
					NotifyPropertyChanged("modifyUserButton");
				}
			}  
		}
	


		private const string s_deleteUserButton = @"Delete";
		private string m_deleteUserButton=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='deleteUserButton']/@value")]
		public string deleteUserButton {
			get { 
				if( m_deleteUserButton == null){
					return s_deleteUserButton;
				}
				return m_deleteUserButton; 
			}
			set { 
				if( value != m_deleteUserButton){
					m_deleteUserButton = value;
					NotifyPropertyChanged("deleteUserButton");
				}
			}  
		}
	


		private const string s_editPoliciesButton = @"Edit";
		private string m_editPoliciesButton=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='editPoliciesButton']/@value")]
		public string editPoliciesButton {
			get { 
				if( m_editPoliciesButton == null){
					return s_editPoliciesButton;
				}
				return m_editPoliciesButton; 
			}
			set { 
				if( value != m_editPoliciesButton){
					m_editPoliciesButton = value;
					NotifyPropertyChanged("editPoliciesButton");
				}
			}  
		}
	


		private const string s_downloadPoliciesButton = @"Backup";
		private string m_downloadPoliciesButton=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='downloadPoliciesButton']/@value")]
		public string downloadPoliciesButton {
			get { 
				if( m_downloadPoliciesButton == null){
					return s_downloadPoliciesButton;
				}
				return m_downloadPoliciesButton; 
			}
			set { 
				if( value != m_downloadPoliciesButton){
					m_downloadPoliciesButton = value;
					NotifyPropertyChanged("downloadPoliciesButton");
				}
			}  
		}
	


		private const string s_uploadPoliciesButton = @"Restore";
		private string m_uploadPoliciesButton=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='uploadPoliciesButton']/@value")]
		public string uploadPoliciesButton {
			get { 
				if( m_uploadPoliciesButton == null){
					return s_uploadPoliciesButton;
				}
				return m_uploadPoliciesButton; 
			}
			set { 
				if( value != m_uploadPoliciesButton){
					m_uploadPoliciesButton = value;
					NotifyPropertyChanged("uploadPoliciesButton");
				}
			}  
		}
	


		private const string s_nameCaption = @"Name: ";
		private string m_nameCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='nameCaption']/@value")]
		public string nameCaption {
			get { 
				if( m_nameCaption == null){
					return s_nameCaption;
				}
				return m_nameCaption; 
			}
			set { 
				if( value != m_nameCaption){
					m_nameCaption = value;
					NotifyPropertyChanged("nameCaption");
				}
			}  
		}
	


		private const string s_passwordCaption = @"Password: ";
		private string m_passwordCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='passwordCaption']/@value")]
		public string passwordCaption {
			get { 
				if( m_passwordCaption == null){
					return s_passwordCaption;
				}
				return m_passwordCaption; 
			}
			set { 
				if( value != m_passwordCaption){
					m_passwordCaption = value;
					NotifyPropertyChanged("passwordCaption");
				}
			}  
		}
	


		private const string s_repeatPasswordCaption = @"Repeat password: ";
		private string m_repeatPasswordCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='repeatPasswordCaption']/@value")]
		public string repeatPasswordCaption {
			get { 
				if( m_repeatPasswordCaption == null){
					return s_repeatPasswordCaption;
				}
				return m_repeatPasswordCaption; 
			}
			set { 
				if( value != m_repeatPasswordCaption){
					m_repeatPasswordCaption = value;
					NotifyPropertyChanged("repeatPasswordCaption");
				}
			}  
		}
	


		private const string s_roleCaption = @"Role: ";
		private string m_roleCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='roleCaption']/@value")]
		public string roleCaption {
			get { 
				if( m_roleCaption == null){
					return s_roleCaption;
				}
				return m_roleCaption; 
			}
			set { 
				if( value != m_roleCaption){
					m_roleCaption = value;
					NotifyPropertyChanged("roleCaption");
				}
			}  
		}
	


		private const string s_createSuccess = @"User has been created successfully. Please notice that it may affect security aspects and device will be inaccessible in current session.";
		private string m_createSuccess=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='createSuccess']/@value")]
		public string createSuccess {
			get { 
				if( m_createSuccess == null){
					return s_createSuccess;
				}
				return m_createSuccess; 
			}
			set { 
				if( value != m_createSuccess){
					m_createSuccess = value;
					NotifyPropertyChanged("createSuccess");
				}
			}  
		}
	


		private const string s_changeSuccess = @"Changes have been applied successfully. Please notice that it may affect security aspects and device will be inaccessible in current session.";
		private string m_changeSuccess=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='changeSuccess']/@value")]
		public string changeSuccess {
			get { 
				if( m_changeSuccess == null){
					return s_changeSuccess;
				}
				return m_changeSuccess; 
			}
			set { 
				if( value != m_changeSuccess){
					m_changeSuccess = value;
					NotifyPropertyChanged("changeSuccess");
				}
			}  
		}
	


		private const string s_deleteSuccess = @"User has been deleted successfully. Please notice that it may affect security aspects and device will be inaccessible in current session.";
		private string m_deleteSuccess=null;
		[XPath(@"/localized-strings/module[@name='LocalUserManagement' and @namespace='odm.ui']/descendant::string[@name='deleteSuccess']/@value")]
		public string deleteSuccess {
			get { 
				if( m_deleteSuccess == null){
					return s_deleteSuccess;
				}
				return m_deleteSuccess; 
			}
			set { 
				if( value != m_deleteSuccess){
					m_deleteSuccess = value;
					NotifyPropertyChanged("deleteSuccess");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalEvents: LocalizedStringsBase<LocalEvents>{
		


		private const string s_colArrivalTime = @"Arrival time";
		private string m_colArrivalTime=null;
		[XPath(@"/localized-strings/module[@name='LocalEvents' and @namespace='odm.ui']/descendant::string[@name='colArrivalTime']/@value")]
		public string colArrivalTime {
			get { 
				if( m_colArrivalTime == null){
					return s_colArrivalTime;
				}
				return m_colArrivalTime; 
			}
			set { 
				if( value != m_colArrivalTime){
					m_colArrivalTime = value;
					NotifyPropertyChanged("colArrivalTime");
				}
			}  
		}
	


		private const string s_colTopic = @"Topic";
		private string m_colTopic=null;
		[XPath(@"/localized-strings/module[@name='LocalEvents' and @namespace='odm.ui']/descendant::string[@name='colTopic']/@value")]
		public string colTopic {
			get { 
				if( m_colTopic == null){
					return s_colTopic;
				}
				return m_colTopic; 
			}
			set { 
				if( value != m_colTopic){
					m_colTopic = value;
					NotifyPropertyChanged("colTopic");
				}
			}  
		}
	


		private const string s_colId = @"ID";
		private string m_colId=null;
		[XPath(@"/localized-strings/module[@name='LocalEvents' and @namespace='odm.ui']/descendant::string[@name='colId']/@value")]
		public string colId {
			get { 
				if( m_colId == null){
					return s_colId;
				}
				return m_colId; 
			}
			set { 
				if( value != m_colId){
					m_colId = value;
					NotifyPropertyChanged("colId");
				}
			}  
		}
	


		private const string s_colProperty = @"Operation";
		private string m_colProperty=null;
		[XPath(@"/localized-strings/module[@name='LocalEvents' and @namespace='odm.ui']/descendant::string[@name='colProperty']/@value")]
		public string colProperty {
			get { 
				if( m_colProperty == null){
					return s_colProperty;
				}
				return m_colProperty; 
			}
			set { 
				if( value != m_colProperty){
					m_colProperty = value;
					NotifyPropertyChanged("colProperty");
				}
			}  
		}
	


		private const string s_colSource = @"Source";
		private string m_colSource=null;
		[XPath(@"/localized-strings/module[@name='LocalEvents' and @namespace='odm.ui']/descendant::string[@name='colSource']/@value")]
		public string colSource {
			get { 
				if( m_colSource == null){
					return s_colSource;
				}
				return m_colSource; 
			}
			set { 
				if( value != m_colSource){
					m_colSource = value;
					NotifyPropertyChanged("colSource");
				}
			}  
		}
	


		private const string s_colKey = @"Key";
		private string m_colKey=null;
		[XPath(@"/localized-strings/module[@name='LocalEvents' and @namespace='odm.ui']/descendant::string[@name='colKey']/@value")]
		public string colKey {
			get { 
				if( m_colKey == null){
					return s_colKey;
				}
				return m_colKey; 
			}
			set { 
				if( value != m_colKey){
					m_colKey = value;
					NotifyPropertyChanged("colKey");
				}
			}  
		}
	


		private const string s_colData = @"Data";
		private string m_colData=null;
		[XPath(@"/localized-strings/module[@name='LocalEvents' and @namespace='odm.ui']/descendant::string[@name='colData']/@value")]
		public string colData {
			get { 
				if( m_colData == null){
					return s_colData;
				}
				return m_colData; 
			}
			set { 
				if( value != m_colData){
					m_colData = value;
					NotifyPropertyChanged("colData");
				}
			}  
		}
	


		private const string s_colMessage = @"Message";
		private string m_colMessage=null;
		[XPath(@"/localized-strings/module[@name='LocalEvents' and @namespace='odm.ui']/descendant::string[@name='colMessage']/@value")]
		public string colMessage {
			get { 
				if( m_colMessage == null){
					return s_colMessage;
				}
				return m_colMessage; 
			}
			set { 
				if( value != m_colMessage){
					m_colMessage = value;
					NotifyPropertyChanged("colMessage");
				}
			}  
		}
	


		private const string s_colDetails = @"Details";
		private string m_colDetails=null;
		[XPath(@"/localized-strings/module[@name='LocalEvents' and @namespace='odm.ui']/descendant::string[@name='colDetails']/@value")]
		public string colDetails {
			get { 
				if( m_colDetails == null){
					return s_colDetails;
				}
				return m_colDetails; 
			}
			set { 
				if( value != m_colDetails){
					m_colDetails = value;
					NotifyPropertyChanged("colDetails");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalDisplayAnnotation: LocalizedStringsBase<LocalDisplayAnnotation>{
		


		private const string s_enableMovingRects = @"Annotate moving rects";
		private string m_enableMovingRects=null;
		[XPath(@"/localized-strings/module[@name='LocalDisplayAnnotation' and @namespace='odm.ui']/descendant::string[@name='enableMovingRects']/@value")]
		public string enableMovingRects {
			get { 
				if( m_enableMovingRects == null){
					return s_enableMovingRects;
				}
				return m_enableMovingRects; 
			}
			set { 
				if( value != m_enableMovingRects){
					m_enableMovingRects = value;
					NotifyPropertyChanged("enableMovingRects");
				}
			}  
		}
	


		private const string s_enableSpeed = @"Annotate speed";
		private string m_enableSpeed=null;
		[XPath(@"/localized-strings/module[@name='LocalDisplayAnnotation' and @namespace='odm.ui']/descendant::string[@name='enableSpeed']/@value")]
		public string enableSpeed {
			get { 
				if( m_enableSpeed == null){
					return s_enableSpeed;
				}
				return m_enableSpeed; 
			}
			set { 
				if( value != m_enableSpeed){
					m_enableSpeed = value;
					NotifyPropertyChanged("enableSpeed");
				}
			}  
		}
	


		private const string s_enableTimeStamp = @"Annotate time stamp";
		private string m_enableTimeStamp=null;
		[XPath(@"/localized-strings/module[@name='LocalDisplayAnnotation' and @namespace='odm.ui']/descendant::string[@name='enableTimeStamp']/@value")]
		public string enableTimeStamp {
			get { 
				if( m_enableTimeStamp == null){
					return s_enableTimeStamp;
				}
				return m_enableTimeStamp; 
			}
			set { 
				if( value != m_enableTimeStamp){
					m_enableTimeStamp = value;
					NotifyPropertyChanged("enableTimeStamp");
				}
			}  
		}
	


		private const string s_enableSystemInformation = @"Annotate system information";
		private string m_enableSystemInformation=null;
		[XPath(@"/localized-strings/module[@name='LocalDisplayAnnotation' and @namespace='odm.ui']/descendant::string[@name='enableSystemInformation']/@value")]
		public string enableSystemInformation {
			get { 
				if( m_enableSystemInformation == null){
					return s_enableSystemInformation;
				}
				return m_enableSystemInformation; 
			}
			set { 
				if( value != m_enableSystemInformation){
					m_enableSystemInformation = value;
					NotifyPropertyChanged("enableSystemInformation");
				}
			}  
		}
	


		private const string s_enableChannelName = @"Annotate channel name";
		private string m_enableChannelName=null;
		[XPath(@"/localized-strings/module[@name='LocalDisplayAnnotation' and @namespace='odm.ui']/descendant::string[@name='enableChannelName']/@value")]
		public string enableChannelName {
			get { 
				if( m_enableChannelName == null){
					return s_enableChannelName;
				}
				return m_enableChannelName; 
			}
			set { 
				if( value != m_enableChannelName){
					m_enableChannelName = value;
					NotifyPropertyChanged("enableChannelName");
				}
			}  
		}
	


		private const string s_enableTracking = @"Annotate tracking";
		private string m_enableTracking=null;
		[XPath(@"/localized-strings/module[@name='LocalDisplayAnnotation' and @namespace='odm.ui']/descendant::string[@name='enableTracking']/@value")]
		public string enableTracking {
			get { 
				if( m_enableTracking == null){
					return s_enableTracking;
				}
				return m_enableTracking; 
			}
			set { 
				if( value != m_enableTracking){
					m_enableTracking = value;
					NotifyPropertyChanged("enableTracking");
				}
			}  
		}
	


		private const string s_enableUserRegion = @"Annotate user region";
		private string m_enableUserRegion=null;
		[XPath(@"/localized-strings/module[@name='LocalDisplayAnnotation' and @namespace='odm.ui']/descendant::string[@name='enableUserRegion']/@value")]
		public string enableUserRegion {
			get { 
				if( m_enableUserRegion == null){
					return s_enableUserRegion;
				}
				return m_enableUserRegion; 
			}
			set { 
				if( value != m_enableUserRegion){
					m_enableUserRegion = value;
					NotifyPropertyChanged("enableUserRegion");
				}
			}  
		}
	


		private const string s_enableRules = @"Annotate rules";
		private string m_enableRules=null;
		[XPath(@"/localized-strings/module[@name='LocalDisplayAnnotation' and @namespace='odm.ui']/descendant::string[@name='enableRules']/@value")]
		public string enableRules {
			get { 
				if( m_enableRules == null){
					return s_enableRules;
				}
				return m_enableRules; 
			}
			set { 
				if( value != m_enableRules){
					m_enableRules = value;
					NotifyPropertyChanged("enableRules");
				}
			}  
		}
	


		private const string s_enableCalibrationResults = @"Annotate calibration results";
		private string m_enableCalibrationResults=null;
		[XPath(@"/localized-strings/module[@name='LocalDisplayAnnotation' and @namespace='odm.ui']/descendant::string[@name='enableCalibrationResults']/@value")]
		public string enableCalibrationResults {
			get { 
				if( m_enableCalibrationResults == null){
					return s_enableCalibrationResults;
				}
				return m_enableCalibrationResults; 
			}
			set { 
				if( value != m_enableCalibrationResults){
					m_enableCalibrationResults = value;
					NotifyPropertyChanged("enableCalibrationResults");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalMaintenance: LocalizedStringsBase<LocalMaintenance>{
		


		private const string s_loadbuckup = @"Load backup file";
		private string m_loadbuckup=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='loadbuckup']/@value")]
		public string loadbuckup {
			get { 
				if( m_loadbuckup == null){
					return s_loadbuckup;
				}
				return m_loadbuckup; 
			}
			set { 
				if( value != m_loadbuckup){
					m_loadbuckup = value;
					NotifyPropertyChanged("loadbuckup");
				}
			}  
		}
	


		private const string s_savebuckup = @"Save backup file";
		private string m_savebuckup=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='savebuckup']/@value")]
		public string savebuckup {
			get { 
				if( m_savebuckup == null){
					return s_savebuckup;
				}
				return m_savebuckup; 
			}
			set { 
				if( value != m_savebuckup){
					m_savebuckup = value;
					NotifyPropertyChanged("savebuckup");
				}
			}  
		}
	


		private const string s_selectfirmware = @"Select firmware file to upgrade";
		private string m_selectfirmware=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='selectfirmware']/@value")]
		public string selectfirmware {
			get { 
				if( m_selectfirmware == null){
					return s_selectfirmware;
				}
				return m_selectfirmware; 
			}
			set { 
				if( value != m_selectfirmware){
					m_selectfirmware = value;
					NotifyPropertyChanged("selectfirmware");
				}
			}  
		}
	


		private const string s_configurationCaption = @"Configuration";
		private string m_configurationCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='configurationCaption']/@value")]
		public string configurationCaption {
			get { 
				if( m_configurationCaption == null){
					return s_configurationCaption;
				}
				return m_configurationCaption; 
			}
			set { 
				if( value != m_configurationCaption){
					m_configurationCaption = value;
					NotifyPropertyChanged("configurationCaption");
				}
			}  
		}
	


		private const string s_diagnosticsCaption = @"Diagnostics and support";
		private string m_diagnosticsCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='diagnosticsCaption']/@value")]
		public string diagnosticsCaption {
			get { 
				if( m_diagnosticsCaption == null){
					return s_diagnosticsCaption;
				}
				return m_diagnosticsCaption; 
			}
			set { 
				if( value != m_diagnosticsCaption){
					m_diagnosticsCaption = value;
					NotifyPropertyChanged("diagnosticsCaption");
				}
			}  
		}
	


		private const string s_hardResetCaption = @"Hard factory reset";
		private string m_hardResetCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='hardResetCaption']/@value")]
		public string hardResetCaption {
			get { 
				if( m_hardResetCaption == null){
					return s_hardResetCaption;
				}
				return m_hardResetCaption; 
			}
			set { 
				if( value != m_hardResetCaption){
					m_hardResetCaption = value;
					NotifyPropertyChanged("hardResetCaption");
				}
			}  
		}
	


		private const string s_resetCaption = @"Reboot device";
		private string m_resetCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='resetCaption']/@value")]
		public string resetCaption {
			get { 
				if( m_resetCaption == null){
					return s_resetCaption;
				}
				return m_resetCaption; 
			}
			set { 
				if( value != m_resetCaption){
					m_resetCaption = value;
					NotifyPropertyChanged("resetCaption");
				}
			}  
		}
	


		private const string s_softResetCaption = @"Soft factory reset";
		private string m_softResetCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='softResetCaption']/@value")]
		public string softResetCaption {
			get { 
				if( m_softResetCaption == null){
					return s_softResetCaption;
				}
				return m_softResetCaption; 
			}
			set { 
				if( value != m_softResetCaption){
					m_softResetCaption = value;
					NotifyPropertyChanged("softResetCaption");
				}
			}  
		}
	


		private const string s_upgradeCaption = @"Firmware";
		private string m_upgradeCaption=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='upgradeCaption']/@value")]
		public string upgradeCaption {
			get { 
				if( m_upgradeCaption == null){
					return s_upgradeCaption;
				}
				return m_upgradeCaption; 
			}
			set { 
				if( value != m_upgradeCaption){
					m_upgradeCaption = value;
					NotifyPropertyChanged("upgradeCaption");
				}
			}  
		}
	


		private const string s_unsupported = @"Unsupported";
		private string m_unsupported=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='unsupported']/@value")]
		public string unsupported {
			get { 
				if( m_unsupported == null){
					return s_unsupported;
				}
				return m_unsupported; 
			}
			set { 
				if( value != m_unsupported){
					m_unsupported = value;
					NotifyPropertyChanged("unsupported");
				}
			}  
		}
	


		private const string s_btnBackup = @"Backup";
		private string m_btnBackup=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='btnBackup']/@value")]
		public string btnBackup {
			get { 
				if( m_btnBackup == null){
					return s_btnBackup;
				}
				return m_btnBackup; 
			}
			set { 
				if( value != m_btnBackup){
					m_btnBackup = value;
					NotifyPropertyChanged("btnBackup");
				}
			}  
		}
	


		private const string s_btnRestore = @"Restore";
		private string m_btnRestore=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='btnRestore']/@value")]
		public string btnRestore {
			get { 
				if( m_btnRestore == null){
					return s_btnRestore;
				}
				return m_btnRestore; 
			}
			set { 
				if( value != m_btnRestore){
					m_btnRestore = value;
					NotifyPropertyChanged("btnRestore");
				}
			}  
		}
	


		private const string s_btnSoftReset = @"Soft reset";
		private string m_btnSoftReset=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='btnSoftReset']/@value")]
		public string btnSoftReset {
			get { 
				if( m_btnSoftReset == null){
					return s_btnSoftReset;
				}
				return m_btnSoftReset; 
			}
			set { 
				if( value != m_btnSoftReset){
					m_btnSoftReset = value;
					NotifyPropertyChanged("btnSoftReset");
				}
			}  
		}
	


		private const string s_btnHardReset = @"Hard reset";
		private string m_btnHardReset=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='btnHardReset']/@value")]
		public string btnHardReset {
			get { 
				if( m_btnHardReset == null){
					return s_btnHardReset;
				}
				return m_btnHardReset; 
			}
			set { 
				if( value != m_btnHardReset){
					m_btnHardReset = value;
					NotifyPropertyChanged("btnHardReset");
				}
			}  
		}
	


		private const string s_btnSoftResetTooltip = @"All parameters are set to their factory default values, except basic network settings like IP address, subnet and gateway or DHCP settings";
		private string m_btnSoftResetTooltip=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='btnSoftResetTooltip']/@value")]
		public string btnSoftResetTooltip {
			get { 
				if( m_btnSoftResetTooltip == null){
					return s_btnSoftResetTooltip;
				}
				return m_btnSoftResetTooltip; 
			}
			set { 
				if( value != m_btnSoftResetTooltip){
					m_btnSoftResetTooltip = value;
					NotifyPropertyChanged("btnSoftResetTooltip");
				}
			}  
		}
	


		private const string s_btnHardResetTooltip = @"All parameters are set to their factory default values";
		private string m_btnHardResetTooltip=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='btnHardResetTooltip']/@value")]
		public string btnHardResetTooltip {
			get { 
				if( m_btnHardResetTooltip == null){
					return s_btnHardResetTooltip;
				}
				return m_btnHardResetTooltip; 
			}
			set { 
				if( value != m_btnHardResetTooltip){
					m_btnHardResetTooltip = value;
					NotifyPropertyChanged("btnHardResetTooltip");
				}
			}  
		}
	


		private const string s_factorySoftSuccess = @"Factory default settings except basic network settings like IP address, subnet and gateway or DHCP settings have been applied successfully. Device is being rebooted. Please wait while it appears in the device list.";
		private string m_factorySoftSuccess=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='factorySoftSuccess']/@value")]
		public string factorySoftSuccess {
			get { 
				if( m_factorySoftSuccess == null){
					return s_factorySoftSuccess;
				}
				return m_factorySoftSuccess; 
			}
			set { 
				if( value != m_factorySoftSuccess){
					m_factorySoftSuccess = value;
					NotifyPropertyChanged("factorySoftSuccess");
				}
			}  
		}
	


		private const string s_factoryHardSuccess = @"Factory default settings have been applied successfully. Device is being rebooted. Please wait while it appears in the device list.";
		private string m_factoryHardSuccess=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='factoryHardSuccess']/@value")]
		public string factoryHardSuccess {
			get { 
				if( m_factoryHardSuccess == null){
					return s_factoryHardSuccess;
				}
				return m_factoryHardSuccess; 
			}
			set { 
				if( value != m_factoryHardSuccess){
					m_factoryHardSuccess = value;
					NotifyPropertyChanged("factoryHardSuccess");
				}
			}  
		}
	


		private const string s_rebootSuccess = @"Device is being rebooted. Please wait while it appears in the device list.";
		private string m_rebootSuccess=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='rebootSuccess']/@value")]
		public string rebootSuccess {
			get { 
				if( m_rebootSuccess == null){
					return s_rebootSuccess;
				}
				return m_rebootSuccess; 
			}
			set { 
				if( value != m_rebootSuccess){
					m_rebootSuccess = value;
					NotifyPropertyChanged("rebootSuccess");
				}
			}  
		}
	


		private const string s_waitWhileAppear = @" Please wait while the device appears in the device list.";
		private string m_waitWhileAppear=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='waitWhileAppear']/@value")]
		public string waitWhileAppear {
			get { 
				if( m_waitWhileAppear == null){
					return s_waitWhileAppear;
				}
				return m_waitWhileAppear; 
			}
			set { 
				if( value != m_waitWhileAppear){
					m_waitWhileAppear = value;
					NotifyPropertyChanged("waitWhileAppear");
				}
			}  
		}
	


		private const string s_resetting = @"Resetting...";
		private string m_resetting=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='resetting']/@value")]
		public string resetting {
			get { 
				if( m_resetting == null){
					return s_resetting;
				}
				return m_resetting; 
			}
			set { 
				if( value != m_resetting){
					m_resetting = value;
					NotifyPropertyChanged("resetting");
				}
			}  
		}
	


		private const string s_rebooting = @"Rebooting...";
		private string m_rebooting=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='rebooting']/@value")]
		public string rebooting {
			get { 
				if( m_rebooting == null){
					return s_rebooting;
				}
				return m_rebooting; 
			}
			set { 
				if( value != m_rebooting){
					m_rebooting = value;
					NotifyPropertyChanged("rebooting");
				}
			}  
		}
	


		private const string s_btnReboot = @"Reboot";
		private string m_btnReboot=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='btnReboot']/@value")]
		public string btnReboot {
			get { 
				if( m_btnReboot == null){
					return s_btnReboot;
				}
				return m_btnReboot; 
			}
			set { 
				if( value != m_btnReboot){
					m_btnReboot = value;
					NotifyPropertyChanged("btnReboot");
				}
			}  
		}
	


		private const string s_btnUpgrate = @"Upgrade";
		private string m_btnUpgrate=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='btnUpgrate']/@value")]
		public string btnUpgrate {
			get { 
				if( m_btnUpgrate == null){
					return s_btnUpgrate;
				}
				return m_btnUpgrate; 
			}
			set { 
				if( value != m_btnUpgrate){
					m_btnUpgrate = value;
					NotifyPropertyChanged("btnUpgrate");
				}
			}  
		}
	


		private const string s_uploadingFirmware = @"Firmware is uploading. Please wait..";
		private string m_uploadingFirmware=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='uploadingFirmware']/@value")]
		public string uploadingFirmware {
			get { 
				if( m_uploadingFirmware == null){
					return s_uploadingFirmware;
				}
				return m_uploadingFirmware; 
			}
			set { 
				if( value != m_uploadingFirmware){
					m_uploadingFirmware = value;
					NotifyPropertyChanged("uploadingFirmware");
				}
			}  
		}
	


		private const string s_upgradingFirmware = @"Upgrading firmware...";
		private string m_upgradingFirmware=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='upgradingFirmware']/@value")]
		public string upgradingFirmware {
			get { 
				if( m_upgradingFirmware == null){
					return s_upgradingFirmware;
				}
				return m_upgradingFirmware; 
			}
			set { 
				if( value != m_upgradingFirmware){
					m_upgradingFirmware = value;
					NotifyPropertyChanged("upgradingFirmware");
				}
			}  
		}
	


		private const string s_titleupgradingFirmware = @"Upgrading firmware";
		private string m_titleupgradingFirmware=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='titleupgradingFirmware']/@value")]
		public string titleupgradingFirmware {
			get { 
				if( m_titleupgradingFirmware == null){
					return s_titleupgradingFirmware;
				}
				return m_titleupgradingFirmware; 
			}
			set { 
				if( value != m_titleupgradingFirmware){
					m_titleupgradingFirmware = value;
					NotifyPropertyChanged("titleupgradingFirmware");
				}
			}  
		}
	


		private const string s_autoclose = @"automatically close when finished";
		private string m_autoclose=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='autoclose']/@value")]
		public string autoclose {
			get { 
				if( m_autoclose == null){
					return s_autoclose;
				}
				return m_autoclose; 
			}
			set { 
				if( value != m_autoclose){
					m_autoclose = value;
					NotifyPropertyChanged("autoclose");
				}
			}  
		}
	


		private const string s_doingBackup = @"Doing backup ...";
		private string m_doingBackup=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='doingBackup']/@value")]
		public string doingBackup {
			get { 
				if( m_doingBackup == null){
					return s_doingBackup;
				}
				return m_doingBackup; 
			}
			set { 
				if( value != m_doingBackup){
					m_doingBackup = value;
					NotifyPropertyChanged("doingBackup");
				}
			}  
		}
	


		private const string s_restoreSuccess = @"Device has been restored successfully. Please wait when it will appear in device list.";
		private string m_restoreSuccess=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='restoreSuccess']/@value")]
		public string restoreSuccess {
			get { 
				if( m_restoreSuccess == null){
					return s_restoreSuccess;
				}
				return m_restoreSuccess; 
			}
			set { 
				if( value != m_restoreSuccess){
					m_restoreSuccess = value;
					NotifyPropertyChanged("restoreSuccess");
				}
			}  
		}
	


		private const string s_upgradeCompleteSuccess = @"Upgrade completed successfully";
		private string m_upgradeCompleteSuccess=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='upgradeCompleteSuccess']/@value")]
		public string upgradeCompleteSuccess {
			get { 
				if( m_upgradeCompleteSuccess == null){
					return s_upgradeCompleteSuccess;
				}
				return m_upgradeCompleteSuccess; 
			}
			set { 
				if( value != m_upgradeCompleteSuccess){
					m_upgradeCompleteSuccess = value;
					NotifyPropertyChanged("upgradeCompleteSuccess");
				}
			}  
		}
	


		private const string s_backupCompleteSuccess = @"Upgrade completed successfully";
		private string m_backupCompleteSuccess=null;
		[XPath(@"/localized-strings/module[@name='LocalMaintenance' and @namespace='odm.ui']/descendant::string[@name='backupCompleteSuccess']/@value")]
		public string backupCompleteSuccess {
			get { 
				if( m_backupCompleteSuccess == null){
					return s_backupCompleteSuccess;
				}
				return m_backupCompleteSuccess; 
			}
			set { 
				if( value != m_backupCompleteSuccess){
					m_backupCompleteSuccess = value;
					NotifyPropertyChanged("backupCompleteSuccess");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalProfile: LocalizedStringsBase<LocalProfile>{
		


		private const string s_captionVecfg = @"Video Encoder Configuration";
		private string m_captionVecfg=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='captionVecfg']/@value")]
		public string captionVecfg {
			get { 
				if( m_captionVecfg == null){
					return s_captionVecfg;
				}
				return m_captionVecfg; 
			}
			set { 
				if( value != m_captionVecfg){
					m_captionVecfg = value;
					NotifyPropertyChanged("captionVecfg");
				}
			}  
		}
	


		private const string s_captionAecfg = @"Audio Encoder Configuration";
		private string m_captionAecfg=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='captionAecfg']/@value")]
		public string captionAecfg {
			get { 
				if( m_captionAecfg == null){
					return s_captionAecfg;
				}
				return m_captionAecfg; 
			}
			set { 
				if( value != m_captionAecfg){
					m_captionAecfg = value;
					NotifyPropertyChanged("captionAecfg");
				}
			}  
		}
	


		private const string s_captionVacfg = @"Video Analytic Configuration";
		private string m_captionVacfg=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='captionVacfg']/@value")]
		public string captionVacfg {
			get { 
				if( m_captionVacfg == null){
					return s_captionVacfg;
				}
				return m_captionVacfg; 
			}
			set { 
				if( value != m_captionVacfg){
					m_captionVacfg = value;
					NotifyPropertyChanged("captionVacfg");
				}
			}  
		}
	


		private const string s_captionPtzcfg = @"PTZ Configuration";
		private string m_captionPtzcfg=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='captionPtzcfg']/@value")]
		public string captionPtzcfg {
			get { 
				if( m_captionPtzcfg == null){
					return s_captionPtzcfg;
				}
				return m_captionPtzcfg; 
			}
			set { 
				if( value != m_captionPtzcfg){
					m_captionPtzcfg = value;
					NotifyPropertyChanged("captionPtzcfg");
				}
			}  
		}
	


		private const string s_captionMetacfg = @"Metadata Configuration";
		private string m_captionMetacfg=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='captionMetacfg']/@value")]
		public string captionMetacfg {
			get { 
				if( m_captionMetacfg == null){
					return s_captionMetacfg;
				}
				return m_captionMetacfg; 
			}
			set { 
				if( value != m_captionMetacfg){
					m_captionMetacfg = value;
					NotifyPropertyChanged("captionMetacfg");
				}
			}  
		}
	


		private const string s_captionVideoSourceConfig = @"Video Source Configuration";
		private string m_captionVideoSourceConfig=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='captionVideoSourceConfig']/@value")]
		public string captionVideoSourceConfig {
			get { 
				if( m_captionVideoSourceConfig == null){
					return s_captionVideoSourceConfig;
				}
				return m_captionVideoSourceConfig; 
			}
			set { 
				if( value != m_captionVideoSourceConfig){
					m_captionVideoSourceConfig = value;
					NotifyPropertyChanged("captionVideoSourceConfig");
				}
			}  
		}
	


		private const string s_captionAscfg = @"Audio Source Configuration";
		private string m_captionAscfg=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='captionAscfg']/@value")]
		public string captionAscfg {
			get { 
				if( m_captionAscfg == null){
					return s_captionAscfg;
				}
				return m_captionAscfg; 
			}
			set { 
				if( value != m_captionAscfg){
					m_captionAscfg = value;
					NotifyPropertyChanged("captionAscfg");
				}
			}  
		}
	


		private const string s_captionProfileName = @"Profile name:";
		private string m_captionProfileName=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='captionProfileName']/@value")]
		public string captionProfileName {
			get { 
				if( m_captionProfileName == null){
					return s_captionProfileName;
				}
				return m_captionProfileName; 
			}
			set { 
				if( value != m_captionProfileName){
					m_captionProfileName = value;
					NotifyPropertyChanged("captionProfileName");
				}
			}  
		}
	


		private const string s_creatingProfile = @"Creating profile...";
		private string m_creatingProfile=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='creatingProfile']/@value")]
		public string creatingProfile {
			get { 
				if( m_creatingProfile == null){
					return s_creatingProfile;
				}
				return m_creatingProfile; 
			}
			set { 
				if( value != m_creatingProfile){
					m_creatingProfile = value;
					NotifyPropertyChanged("creatingProfile");
				}
			}  
		}
	


		private const string s_modifiedSuccess = @"The profile has been modified successfully. Channel will be reloaded.";
		private string m_modifiedSuccess=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='modifiedSuccess']/@value")]
		public string modifiedSuccess {
			get { 
				if( m_modifiedSuccess == null){
					return s_modifiedSuccess;
				}
				return m_modifiedSuccess; 
			}
			set { 
				if( value != m_modifiedSuccess){
					m_modifiedSuccess = value;
					NotifyPropertyChanged("modifiedSuccess");
				}
			}  
		}
	


		private const string s_modifiedFail = @"Failed to modify profile";
		private string m_modifiedFail=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='modifiedFail']/@value")]
		public string modifiedFail {
			get { 
				if( m_modifiedFail == null){
					return s_modifiedFail;
				}
				return m_modifiedFail; 
			}
			set { 
				if( value != m_modifiedFail){
					m_modifiedFail = value;
					NotifyPropertyChanged("modifiedFail");
				}
			}  
		}
	


		private const string s_selectFail = @"Failed to select profile";
		private string m_selectFail=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='selectFail']/@value")]
		public string selectFail {
			get { 
				if( m_selectFail == null){
					return s_selectFail;
				}
				return m_selectFail; 
			}
			set { 
				if( value != m_selectFail){
					m_selectFail = value;
					NotifyPropertyChanged("selectFail");
				}
			}  
		}
	


		private const string s_deleteFail = @"Failed to delete profile";
		private string m_deleteFail=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='deleteFail']/@value")]
		public string deleteFail {
			get { 
				if( m_deleteFail == null){
					return s_deleteFail;
				}
				return m_deleteFail; 
			}
			set { 
				if( value != m_deleteFail){
					m_deleteFail = value;
					NotifyPropertyChanged("deleteFail");
				}
			}  
		}
	


		private const string s_deleting = @"Deleting profile...";
		private string m_deleting=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='deleting']/@value")]
		public string deleting {
			get { 
				if( m_deleting == null){
					return s_deleting;
				}
				return m_deleting; 
			}
			set { 
				if( value != m_deleting){
					m_deleting = value;
					NotifyPropertyChanged("deleting");
				}
			}  
		}
	


		private const string s_deletingSuccess = @"The profile has been deleted successfully. Channel will be reloaded.";
		private string m_deletingSuccess=null;
		[XPath(@"/localized-strings/module[@name='LocalProfile' and @namespace='odm.ui']/descendant::string[@name='deletingSuccess']/@value")]
		public string deletingSuccess {
			get { 
				if( m_deletingSuccess == null){
					return s_deletingSuccess;
				}
				return m_deletingSuccess; 
			}
			set { 
				if( value != m_deletingSuccess){
					m_deletingSuccess = value;
					NotifyPropertyChanged("deletingSuccess");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalBatchTasks: LocalizedStringsBase<LocalBatchTasks>{
		


		private const string s_batchUpgrade = @"Batch upgrade";
		private string m_batchUpgrade=null;
		[XPath(@"/localized-strings/module[@name='LocalBatchTasks' and @namespace='odm.ui']/descendant::string[@name='batchUpgrade']/@value")]
		public string batchUpgrade {
			get { 
				if( m_batchUpgrade == null){
					return s_batchUpgrade;
				}
				return m_batchUpgrade; 
			}
			set { 
				if( value != m_batchUpgrade){
					m_batchUpgrade = value;
					NotifyPropertyChanged("batchUpgrade");
				}
			}  
		}
	


		private const string s_batchRestore = @"Batch restore";
		private string m_batchRestore=null;
		[XPath(@"/localized-strings/module[@name='LocalBatchTasks' and @namespace='odm.ui']/descendant::string[@name='batchRestore']/@value")]
		public string batchRestore {
			get { 
				if( m_batchRestore == null){
					return s_batchRestore;
				}
				return m_batchRestore; 
			}
			set { 
				if( value != m_batchRestore){
					m_batchRestore = value;
					NotifyPropertyChanged("batchRestore");
				}
			}  
		}
	


		private const string s_filters = @"Filters: ";
		private string m_filters=null;
		[XPath(@"/localized-strings/module[@name='LocalBatchTasks' and @namespace='odm.ui']/descendant::string[@name='filters']/@value")]
		public string filters {
			get { 
				if( m_filters == null){
					return s_filters;
				}
				return m_filters; 
			}
			set { 
				if( value != m_filters){
					m_filters = value;
					NotifyPropertyChanged("filters");
				}
			}  
		}
	


		private const string s_firmware = @"Firmware: ";
		private string m_firmware=null;
		[XPath(@"/localized-strings/module[@name='LocalBatchTasks' and @namespace='odm.ui']/descendant::string[@name='firmware']/@value")]
		public string firmware {
			get { 
				if( m_firmware == null){
					return s_firmware;
				}
				return m_firmware; 
			}
			set { 
				if( value != m_firmware){
					m_firmware = value;
					NotifyPropertyChanged("firmware");
				}
			}  
		}
	


		private const string s_name = @"Name: ";
		private string m_name=null;
		[XPath(@"/localized-strings/module[@name='LocalBatchTasks' and @namespace='odm.ui']/descendant::string[@name='name']/@value")]
		public string name {
			get { 
				if( m_name == null){
					return s_name;
				}
				return m_name; 
			}
			set { 
				if( value != m_name){
					m_name = value;
					NotifyPropertyChanged("name");
				}
			}  
		}
	


		private const string s_manufacturer = @"Manufacturer: ";
		private string m_manufacturer=null;
		[XPath(@"/localized-strings/module[@name='LocalBatchTasks' and @namespace='odm.ui']/descendant::string[@name='manufacturer']/@value")]
		public string manufacturer {
			get { 
				if( m_manufacturer == null){
					return s_manufacturer;
				}
				return m_manufacturer; 
			}
			set { 
				if( value != m_manufacturer){
					m_manufacturer = value;
					NotifyPropertyChanged("manufacturer");
				}
			}  
		}
	


		private const string s_model = @"Model: ";
		private string m_model=null;
		[XPath(@"/localized-strings/module[@name='LocalBatchTasks' and @namespace='odm.ui']/descendant::string[@name='model']/@value")]
		public string model {
			get { 
				if( m_model == null){
					return s_model;
				}
				return m_model; 
			}
			set { 
				if( value != m_model){
					m_model = value;
					NotifyPropertyChanged("model");
				}
			}  
		}
	


		private const string s_address = @"Address: ";
		private string m_address=null;
		[XPath(@"/localized-strings/module[@name='LocalBatchTasks' and @namespace='odm.ui']/descendant::string[@name='address']/@value")]
		public string address {
			get { 
				if( m_address == null){
					return s_address;
				}
				return m_address; 
			}
			set { 
				if( value != m_address){
					m_address = value;
					NotifyPropertyChanged("address");
				}
			}  
		}
	
	}

}
	

namespace odm.ui {
	public partial class LocalSequrity: LocalizedStringsBase<LocalSequrity>{
		


		private const string s_details = @"Details:";
		private string m_details=null;
		[XPath(@"/localized-strings/module[@name='LocalSequrity' and @namespace='odm.ui']/descendant::string[@name='details']/@value")]
		public string details {
			get { 
				if( m_details == null){
					return s_details;
				}
				return m_details; 
			}
			set { 
				if( value != m_details){
					m_details = value;
					NotifyPropertyChanged("details");
				}
			}  
		}
	


		private const string s_enterName = @"Enter certificate name:";
		private string m_enterName=null;
		[XPath(@"/localized-strings/module[@name='LocalSequrity' and @namespace='odm.ui']/descendant::string[@name='enterName']/@value")]
		public string enterName {
			get { 
				if( m_enterName == null){
					return s_enterName;
				}
				return m_enterName; 
			}
			set { 
				if( value != m_enterName){
					m_enterName = value;
					NotifyPropertyChanged("enterName");
				}
			}  
		}
	


		private const string s_selectCertificateHeader = @"Select certificate file";
		private string m_selectCertificateHeader=null;
		[XPath(@"/localized-strings/module[@name='LocalSequrity' and @namespace='odm.ui']/descendant::string[@name='selectCertificateHeader']/@value")]
		public string selectCertificateHeader {
			get { 
				if( m_selectCertificateHeader == null){
					return s_selectCertificateHeader;
				}
				return m_selectCertificateHeader; 
			}
			set { 
				if( value != m_selectCertificateHeader){
					m_selectCertificateHeader = value;
					NotifyPropertyChanged("selectCertificateHeader");
				}
			}  
		}
	


		private const string s_setStatus = @"Set status";
		private string m_setStatus=null;
		[XPath(@"/localized-strings/module[@name='LocalSequrity' and @namespace='odm.ui']/descendant::string[@name='setStatus']/@value")]
		public string setStatus {
			get { 
				if( m_setStatus == null){
					return s_setStatus;
				}
				return m_setStatus; 
			}
			set { 
				if( value != m_setStatus){
					m_setStatus = value;
					NotifyPropertyChanged("setStatus");
				}
			}  
		}
	


		private const string s_uploadCertificate = @"Upload Certificate";
		private string m_uploadCertificate=null;
		[XPath(@"/localized-strings/module[@name='LocalSequrity' and @namespace='odm.ui']/descendant::string[@name='uploadCertificate']/@value")]
		public string uploadCertificate {
			get { 
				if( m_uploadCertificate == null){
					return s_uploadCertificate;
				}
				return m_uploadCertificate; 
			}
			set { 
				if( value != m_uploadCertificate){
					m_uploadCertificate = value;
					NotifyPropertyChanged("uploadCertificate");
				}
			}  
		}
	


		private const string s_btnUpload = @"Upload ...";
		private string m_btnUpload=null;
		[XPath(@"/localized-strings/module[@name='LocalSequrity' and @namespace='odm.ui']/descendant::string[@name='btnUpload']/@value")]
		public string btnUpload {
			get { 
				if( m_btnUpload == null){
					return s_btnUpload;
				}
				return m_btnUpload; 
			}
			set { 
				if( value != m_btnUpload){
					m_btnUpload = value;
					NotifyPropertyChanged("btnUpload");
				}
			}  
		}
	


		private const string s_validity = @"Validity";
		private string m_validity=null;
		[XPath(@"/localized-strings/module[@name='LocalSequrity' and @namespace='odm.ui']/descendant::string[@name='validity']/@value")]
		public string validity {
			get { 
				if( m_validity == null){
					return s_validity;
				}
				return m_validity; 
			}
			set { 
				if( value != m_validity){
					m_validity = value;
					NotifyPropertyChanged("validity");
				}
			}  
		}
	


		private const string s_serialNumber = @"Serial number";
		private string m_serialNumber=null;
		[XPath(@"/localized-strings/module[@name='LocalSequrity' and @namespace='odm.ui']/descendant::string[@name='serialNumber']/@value")]
		public string serialNumber {
			get { 
				if( m_serialNumber == null){
					return s_serialNumber;
				}
				return m_serialNumber; 
			}
			set { 
				if( value != m_serialNumber){
					m_serialNumber = value;
					NotifyPropertyChanged("serialNumber");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class CommonApplicationStrings: LocalizedStringsBase<CommonApplicationStrings>{
		


		private const string s_On = @"On";
		private string m_On=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='On']/@value")]
		public string On {
			get { 
				if( m_On == null){
					return s_On;
				}
				return m_On; 
			}
			set { 
				if( value != m_On){
					m_On = value;
					NotifyPropertyChanged("On");
				}
			}  
		}
	


		private const string s_Off = @"Off";
		private string m_Off=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='Off']/@value")]
		public string Off {
			get { 
				if( m_Off == null){
					return s_Off;
				}
				return m_Off; 
			}
			set { 
				if( value != m_Off){
					m_Off = value;
					NotifyPropertyChanged("Off");
				}
			}  
		}
	


		private const string s_Yes = @"Yes";
		private string m_Yes=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='Yes']/@value")]
		public string Yes {
			get { 
				if( m_Yes == null){
					return s_Yes;
				}
				return m_Yes; 
			}
			set { 
				if( value != m_Yes){
					m_Yes = value;
					NotifyPropertyChanged("Yes");
				}
			}  
		}
	


		private const string s_No = @"No";
		private string m_No=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='No']/@value")]
		public string No {
			get { 
				if( m_No == null){
					return s_No;
				}
				return m_No; 
			}
			set { 
				if( value != m_No){
					m_No = value;
					NotifyPropertyChanged("No");
				}
			}  
		}
	


		private const string s_contactInfo = @"Contact Info";
		private string m_contactInfo=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='contactInfo']/@value")]
		public string contactInfo {
			get { 
				if( m_contactInfo == null){
					return s_contactInfo;
				}
				return m_contactInfo; 
			}
			set { 
				if( value != m_contactInfo){
					m_contactInfo = value;
					NotifyPropertyChanged("contactInfo");
				}
			}  
		}
	


		private const string s_details = @"Details :";
		private string m_details=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='details']/@value")]
		public string details {
			get { 
				if( m_details == null){
					return s_details;
				}
				return m_details; 
			}
			set { 
				if( value != m_details){
					m_details = value;
					NotifyPropertyChanged("details");
				}
			}  
		}
	


		private const string s_startExpanded = @"Start view expanded";
		private string m_startExpanded=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='startExpanded']/@value")]
		public string startExpanded {
			get { 
				if( m_startExpanded == null){
					return s_startExpanded;
				}
				return m_startExpanded; 
			}
			set { 
				if( value != m_startExpanded){
					m_startExpanded = value;
					NotifyPropertyChanged("startExpanded");
				}
			}  
		}
	


		private const string s_streaming = @"Streaming";
		private string m_streaming=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='streaming']/@value")]
		public string streaming {
			get { 
				if( m_streaming == null){
					return s_streaming;
				}
				return m_streaming; 
			}
			set { 
				if( value != m_streaming){
					m_streaming = value;
					NotifyPropertyChanged("streaming");
				}
			}  
		}
	


		private const string s_analytics = @"Analytics";
		private string m_analytics=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='analytics']/@value")]
		public string analytics {
			get { 
				if( m_analytics == null){
					return s_analytics;
				}
				return m_analytics; 
			}
			set { 
				if( value != m_analytics){
					m_analytics = value;
					NotifyPropertyChanged("analytics");
				}
			}  
		}
	


		private const string s_applicationName = @"ONVIF Device Manager";
		private string m_applicationName=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='applicationName']/@value")]
		public string applicationName {
			get { 
				if( m_applicationName == null){
					return s_applicationName;
				}
				return m_applicationName; 
			}
			set { 
				if( value != m_applicationName){
					m_applicationName = value;
					NotifyPropertyChanged("applicationName");
				}
			}  
		}
	


		private const string s_aboutTitle = @"About ONVIF Device Manager";
		private string m_aboutTitle=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='aboutTitle']/@value")]
		public string aboutTitle {
			get { 
				if( m_aboutTitle == null){
					return s_aboutTitle;
				}
				return m_aboutTitle; 
			}
			set { 
				if( value != m_aboutTitle){
					m_aboutTitle = value;
					NotifyPropertyChanged("aboutTitle");
				}
			}  
		}
	


		private const string s_aboutCommon = @"Copyright 2011 Synesis ©  ONVIF Device Manager is a free software distributed under the GNU General Public License.";
		private string m_aboutCommon=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='aboutCommon']/@value")]
		public string aboutCommon {
			get { 
				if( m_aboutCommon == null){
					return s_aboutCommon;
				}
				return m_aboutCommon; 
			}
			set { 
				if( value != m_aboutCommon){
					m_aboutCommon = value;
					NotifyPropertyChanged("aboutCommon");
				}
			}  
		}
	


		private const string s_aboutRus = @"LLC Synesis Russia, 119019, Moscow Gogolevskiy bulvard, dom 2/18/1, stroenie 1";
		private string m_aboutRus=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='aboutRus']/@value")]
		public string aboutRus {
			get { 
				if( m_aboutRus == null){
					return s_aboutRus;
				}
				return m_aboutRus; 
			}
			set { 
				if( value != m_aboutRus){
					m_aboutRus = value;
					NotifyPropertyChanged("aboutRus");
				}
			}  
		}
	


		private const string s_aboutBelarus = @"LLC Synesis Belarus, 220043, Minsk pr.-t Nezavisimosti, d. 95, zd. 12, kom. 316";
		private string m_aboutBelarus=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='aboutBelarus']/@value")]
		public string aboutBelarus {
			get { 
				if( m_aboutBelarus == null){
					return s_aboutBelarus;
				}
				return m_aboutBelarus; 
			}
			set { 
				if( value != m_aboutBelarus){
					m_aboutBelarus = value;
					NotifyPropertyChanged("aboutBelarus");
				}
			}  
		}
	


		private const string s_aboutBelarusPhone = @"+375 (17) 281-77-85";
		private string m_aboutBelarusPhone=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='aboutBelarusPhone']/@value")]
		public string aboutBelarusPhone {
			get { 
				if( m_aboutBelarusPhone == null){
					return s_aboutBelarusPhone;
				}
				return m_aboutBelarusPhone; 
			}
			set { 
				if( value != m_aboutBelarusPhone){
					m_aboutBelarusPhone = value;
					NotifyPropertyChanged("aboutBelarusPhone");
				}
			}  
		}
	


		private const string s_aboutRusPhone = @"+7 (495) 660-77-47";
		private string m_aboutRusPhone=null;
		[XPath(@"/localized-strings/module[@name='CommonApplicationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='aboutRusPhone']/@value")]
		public string aboutRusPhone {
			get { 
				if( m_aboutRusPhone == null){
					return s_aboutRusPhone;
				}
				return m_aboutRusPhone; 
			}
			set { 
				if( value != m_aboutRusPhone){
					m_aboutRusPhone = value;
					NotifyPropertyChanged("aboutRusPhone");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class DeviceControlStrings: LocalizedStringsBase<DeviceControlStrings>{
		


		private const string s_currentAccount = @"Current account: ";
		private string m_currentAccount=null;
		[XPath(@"/localized-strings/module[@name='DeviceControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='currentAccount']/@value")]
		public string currentAccount {
			get { 
				if( m_currentAccount == null){
					return s_currentAccount;
				}
				return m_currentAccount; 
			}
			set { 
				if( value != m_currentAccount){
					m_currentAccount = value;
					NotifyPropertyChanged("currentAccount");
				}
			}  
		}
	


		private const string s_apply = @"Apply";
		private string m_apply=null;
		[XPath(@"/localized-strings/module[@name='DeviceControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='apply']/@value")]
		public string apply {
			get { 
				if( m_apply == null){
					return s_apply;
				}
				return m_apply; 
			}
			set { 
				if( value != m_apply){
					m_apply = value;
					NotifyPropertyChanged("apply");
				}
			}  
		}
	


		private const string s_accountManager = @"Account manager";
		private string m_accountManager=null;
		[XPath(@"/localized-strings/module[@name='DeviceControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='accountManager']/@value")]
		public string accountManager {
			get { 
				if( m_accountManager == null){
					return s_accountManager;
				}
				return m_accountManager; 
			}
			set { 
				if( value != m_accountManager){
					m_accountManager = value;
					NotifyPropertyChanged("accountManager");
				}
			}  
		}
	


		private const string s_title = @"Device configuration";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='DeviceControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_languageEng = @"English";
		private string m_languageEng=null;
		[XPath(@"/localized-strings/module[@name='DeviceControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='languageEng']/@value")]
		public string languageEng {
			get { 
				if( m_languageEng == null){
					return s_languageEng;
				}
				return m_languageEng; 
			}
			set { 
				if( value != m_languageEng){
					m_languageEng = value;
					NotifyPropertyChanged("languageEng");
				}
			}  
		}
	


		private const string s_languageRus = @"Русский";
		private string m_languageRus=null;
		[XPath(@"/localized-strings/module[@name='DeviceControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='languageRus']/@value")]
		public string languageRus {
			get { 
				if( m_languageRus == null){
					return s_languageRus;
				}
				return m_languageRus; 
			}
			set { 
				if( value != m_languageRus){
					m_languageRus = value;
					NotifyPropertyChanged("languageRus");
				}
			}  
		}
	


		private const string s_languagetc = @"繁中";
		private string m_languagetc=null;
		[XPath(@"/localized-strings/module[@name='DeviceControlStrings' and @namespace='odm.ui.controls']/descendant::string[@name='languagetc']/@value")]
		public string languagetc {
			get { 
				if( m_languagetc == null){
					return s_languagetc;
				}
				return m_languagetc; 
			}
			set { 
				if( value != m_languagetc){
					m_languagetc = value;
					NotifyPropertyChanged("languagetc");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class SaveCancelStrings: LocalizedStringsBase<SaveCancelStrings>{
		


		private const string s_save = @"Apply";
		private string m_save=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='save']/@value")]
		public string save {
			get { 
				if( m_save == null){
					return s_save;
				}
				return m_save; 
			}
			set { 
				if( value != m_save){
					m_save = value;
					NotifyPropertyChanged("save");
				}
			}  
		}
	


		private const string s_apply = @"Apply";
		private string m_apply=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='apply']/@value")]
		public string apply {
			get { 
				if( m_apply == null){
					return s_apply;
				}
				return m_apply; 
			}
			set { 
				if( value != m_apply){
					m_apply = value;
					NotifyPropertyChanged("apply");
				}
			}  
		}
	


		private const string s_continue1 = @"Continue";
		private string m_continue1=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='continue1']/@value")]
		public string continue1 {
			get { 
				if( m_continue1 == null){
					return s_continue1;
				}
				return m_continue1; 
			}
			set { 
				if( value != m_continue1){
					m_continue1 = value;
					NotifyPropertyChanged("continue1");
				}
			}  
		}
	


		private const string s_abort = @"Abort";
		private string m_abort=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='abort']/@value")]
		public string abort {
			get { 
				if( m_abort == null){
					return s_abort;
				}
				return m_abort; 
			}
			set { 
				if( value != m_abort){
					m_abort = value;
					NotifyPropertyChanged("abort");
				}
			}  
		}
	


		private const string s_finish = @"Finish";
		private string m_finish=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='finish']/@value")]
		public string finish {
			get { 
				if( m_finish == null){
					return s_finish;
				}
				return m_finish; 
			}
			set { 
				if( value != m_finish){
					m_finish = value;
					NotifyPropertyChanged("finish");
				}
			}  
		}
	


		private const string s_cancel = @"Cancel";
		private string m_cancel=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='cancel']/@value")]
		public string cancel {
			get { 
				if( m_cancel == null){
					return s_cancel;
				}
				return m_cancel; 
			}
			set { 
				if( value != m_cancel){
					m_cancel = value;
					NotifyPropertyChanged("cancel");
				}
			}  
		}
	


		private const string s_create = @"Create";
		private string m_create=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='create']/@value")]
		public string create {
			get { 
				if( m_create == null){
					return s_create;
				}
				return m_create; 
			}
			set { 
				if( value != m_create){
					m_create = value;
					NotifyPropertyChanged("create");
				}
			}  
		}
	


		private const string s_delete = @"Delete";
		private string m_delete=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='delete']/@value")]
		public string delete {
			get { 
				if( m_delete == null){
					return s_delete;
				}
				return m_delete; 
			}
			set { 
				if( value != m_delete){
					m_delete = value;
					NotifyPropertyChanged("delete");
				}
			}  
		}
	


		private const string s_modify = @"Modify";
		private string m_modify=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='modify']/@value")]
		public string modify {
			get { 
				if( m_modify == null){
					return s_modify;
				}
				return m_modify; 
			}
			set { 
				if( value != m_modify){
					m_modify = value;
					NotifyPropertyChanged("modify");
				}
			}  
		}
	


		private const string s_select = @"Select";
		private string m_select=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='select']/@value")]
		public string select {
			get { 
				if( m_select == null){
					return s_select;
				}
				return m_select; 
			}
			set { 
				if( value != m_select){
					m_select = value;
					NotifyPropertyChanged("select");
				}
			}  
		}
	


		private const string s_close = @"Close";
		private string m_close=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='close']/@value")]
		public string close {
			get { 
				if( m_close == null){
					return s_close;
				}
				return m_close; 
			}
			set { 
				if( value != m_close){
					m_close = value;
					NotifyPropertyChanged("close");
				}
			}  
		}
	


		private const string s_pause = @"Pause";
		private string m_pause=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='pause']/@value")]
		public string pause {
			get { 
				if( m_pause == null){
					return s_pause;
				}
				return m_pause; 
			}
			set { 
				if( value != m_pause){
					m_pause = value;
					NotifyPropertyChanged("pause");
				}
			}  
		}
	


		private const string s_resume = @"Resume";
		private string m_resume=null;
		[XPath(@"/localized-strings/module[@name='SaveCancelStrings' and @namespace='odm.ui.controls']/descendant::string[@name='resume']/@value")]
		public string resume {
			get { 
				if( m_resume == null){
					return s_resume;
				}
				return m_resume; 
			}
			set { 
				if( value != m_resume){
					m_resume = value;
					NotifyPropertyChanged("resume");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class LinkButtonsStrings: LocalizedStringsBase<LinkButtonsStrings>{
		


		private const string s_identificationAndStatus = @"Identification";
		private string m_identificationAndStatus=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='identificationAndStatus']/@value")]
		public string identificationAndStatus {
			get { 
				if( m_identificationAndStatus == null){
					return s_identificationAndStatus;
				}
				return m_identificationAndStatus; 
			}
			set { 
				if( value != m_identificationAndStatus){
					m_identificationAndStatus = value;
					NotifyPropertyChanged("identificationAndStatus");
				}
			}  
		}
	


		private const string s_usermanager = @"User management";
		private string m_usermanager=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='usermanager']/@value")]
		public string usermanager {
			get { 
				if( m_usermanager == null){
					return s_usermanager;
				}
				return m_usermanager; 
			}
			set { 
				if( value != m_usermanager){
					m_usermanager = value;
					NotifyPropertyChanged("usermanager");
				}
			}  
		}
	


		private const string s_accountmanager = @"Account management";
		private string m_accountmanager=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='accountmanager']/@value")]
		public string accountmanager {
			get { 
				if( m_accountmanager == null){
					return s_accountmanager;
				}
				return m_accountmanager; 
			}
			set { 
				if( value != m_accountmanager){
					m_accountmanager = value;
					NotifyPropertyChanged("accountmanager");
				}
			}  
		}
	


		private const string s_properties = @"Properties";
		private string m_properties=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='properties']/@value")]
		public string properties {
			get { 
				if( m_properties == null){
					return s_properties;
				}
				return m_properties; 
			}
			set { 
				if( value != m_properties){
					m_properties = value;
					NotifyPropertyChanged("properties");
				}
			}  
		}
	


		private const string s_about = @"About";
		private string m_about=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='about']/@value")]
		public string about {
			get { 
				if( m_about == null){
					return s_about;
				}
				return m_about; 
			}
			set { 
				if( value != m_about){
					m_about = value;
					NotifyPropertyChanged("about");
				}
			}  
		}
	


		private const string s_sequrity = @"Certificates";
		private string m_sequrity=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sequrity']/@value")]
		public string sequrity {
			get { 
				if( m_sequrity == null){
					return s_sequrity;
				}
				return m_sequrity; 
			}
			set { 
				if( value != m_sequrity){
					m_sequrity = value;
					NotifyPropertyChanged("sequrity");
				}
			}  
		}
	


		private const string s_timesettings = @"Time settings";
		private string m_timesettings=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='timesettings']/@value")]
		public string timesettings {
			get { 
				if( m_timesettings == null){
					return s_timesettings;
				}
				return m_timesettings; 
			}
			set { 
				if( value != m_timesettings){
					m_timesettings = value;
					NotifyPropertyChanged("timesettings");
				}
			}  
		}
	


		private const string s_networkSettings = @"Network settings";
		private string m_networkSettings=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='networkSettings']/@value")]
		public string networkSettings {
			get { 
				if( m_networkSettings == null){
					return s_networkSettings;
				}
				return m_networkSettings; 
			}
			set { 
				if( value != m_networkSettings){
					m_networkSettings = value;
					NotifyPropertyChanged("networkSettings");
				}
			}  
		}
	


		private const string s_digitalIO = @"Relays";
		private string m_digitalIO=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='digitalIO']/@value")]
		public string digitalIO {
			get { 
				if( m_digitalIO == null){
					return s_digitalIO;
				}
				return m_digitalIO; 
			}
			set { 
				if( value != m_digitalIO){
					m_digitalIO = value;
					NotifyPropertyChanged("digitalIO");
				}
			}  
		}
	


		private const string s_maintenance = @"Maintenance";
		private string m_maintenance=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='maintenance']/@value")]
		public string maintenance {
			get { 
				if( m_maintenance == null){
					return s_maintenance;
				}
				return m_maintenance; 
			}
			set { 
				if( value != m_maintenance){
					m_maintenance = value;
					NotifyPropertyChanged("maintenance");
				}
			}  
		}
	


		private const string s_systemLog = @"System log";
		private string m_systemLog=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='systemLog']/@value")]
		public string systemLog {
			get { 
				if( m_systemLog == null){
					return s_systemLog;
				}
				return m_systemLog; 
			}
			set { 
				if( value != m_systemLog){
					m_systemLog = value;
					NotifyPropertyChanged("systemLog");
				}
			}  
		}
	


		private const string s_onvifExplorer = @"ONVIF explorer";
		private string m_onvifExplorer=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='onvifExplorer']/@value")]
		public string onvifExplorer {
			get { 
				if( m_onvifExplorer == null){
					return s_onvifExplorer;
				}
				return m_onvifExplorer; 
			}
			set { 
				if( value != m_onvifExplorer){
					m_onvifExplorer = value;
					NotifyPropertyChanged("onvifExplorer");
				}
			}  
		}
	


		private const string s_commonEvents = @"Common events";
		private string m_commonEvents=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='commonEvents']/@value")]
		public string commonEvents {
			get { 
				if( m_commonEvents == null){
					return s_commonEvents;
				}
				return m_commonEvents; 
			}
			set { 
				if( value != m_commonEvents){
					m_commonEvents = value;
					NotifyPropertyChanged("commonEvents");
				}
			}  
		}
	


		private const string s_liveVideo = @"Live video";
		private string m_liveVideo=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='liveVideo']/@value")]
		public string liveVideo {
			get { 
				if( m_liveVideo == null){
					return s_liveVideo;
				}
				return m_liveVideo; 
			}
			set { 
				if( value != m_liveVideo){
					m_liveVideo = value;
					NotifyPropertyChanged("liveVideo");
				}
			}  
		}
	


		private const string s_sensorSettings = @"Imaging settings";
		private string m_sensorSettings=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sensorSettings']/@value")]
		public string sensorSettings {
			get { 
				if( m_sensorSettings == null){
					return s_sensorSettings;
				}
				return m_sensorSettings; 
			}
			set { 
				if( value != m_sensorSettings){
					m_sensorSettings = value;
					NotifyPropertyChanged("sensorSettings");
				}
			}  
		}
	


		private const string s_events = @"Events";
		private string m_events=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='events']/@value")]
		public string events {
			get { 
				if( m_events == null){
					return s_events;
				}
				return m_events; 
			}
			set { 
				if( value != m_events){
					m_events = value;
					NotifyPropertyChanged("events");
				}
			}  
		}
	


		private const string s_metadata = @"Metadata";
		private string m_metadata=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='metadata']/@value")]
		public string metadata {
			get { 
				if( m_metadata == null){
					return s_metadata;
				}
				return m_metadata; 
			}
			set { 
				if( value != m_metadata){
					m_metadata = value;
					NotifyPropertyChanged("metadata");
				}
			}  
		}
	


		private const string s_depthCalibration = @"Depth calibration";
		private string m_depthCalibration=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='depthCalibration']/@value")]
		public string depthCalibration {
			get { 
				if( m_depthCalibration == null){
					return s_depthCalibration;
				}
				return m_depthCalibration; 
			}
			set { 
				if( value != m_depthCalibration){
					m_depthCalibration = value;
					NotifyPropertyChanged("depthCalibration");
				}
			}  
		}
	


		private const string s_videoStreaming = @"Video streaming";
		private string m_videoStreaming=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='videoStreaming']/@value")]
		public string videoStreaming {
			get { 
				if( m_videoStreaming == null){
					return s_videoStreaming;
				}
				return m_videoStreaming; 
			}
			set { 
				if( value != m_videoStreaming){
					m_videoStreaming = value;
					NotifyPropertyChanged("videoStreaming");
				}
			}  
		}
	


		private const string s_displayAnnotation = @"Annotation";
		private string m_displayAnnotation=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='displayAnnotation']/@value")]
		public string displayAnnotation {
			get { 
				if( m_displayAnnotation == null){
					return s_displayAnnotation;
				}
				return m_displayAnnotation; 
			}
			set { 
				if( value != m_displayAnnotation){
					m_displayAnnotation = value;
					NotifyPropertyChanged("displayAnnotation");
				}
			}  
		}
	


		private const string s_tamperingDetectors = @"Tampering detectors";
		private string m_tamperingDetectors=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='tamperingDetectors']/@value")]
		public string tamperingDetectors {
			get { 
				if( m_tamperingDetectors == null){
					return s_tamperingDetectors;
				}
				return m_tamperingDetectors; 
			}
			set { 
				if( value != m_tamperingDetectors){
					m_tamperingDetectors = value;
					NotifyPropertyChanged("tamperingDetectors");
				}
			}  
		}
	


		private const string s_objectTracker = @"Object tracker";
		private string m_objectTracker=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='objectTracker']/@value")]
		public string objectTracker {
			get { 
				if( m_objectTracker == null){
					return s_objectTracker;
				}
				return m_objectTracker; 
			}
			set { 
				if( value != m_objectTracker){
					m_objectTracker = value;
					NotifyPropertyChanged("objectTracker");
				}
			}  
		}
	


		private const string s_ruleEngine = @"Rules";
		private string m_ruleEngine=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ruleEngine']/@value")]
		public string ruleEngine {
			get { 
				if( m_ruleEngine == null){
					return s_ruleEngine;
				}
				return m_ruleEngine; 
			}
			set { 
				if( value != m_ruleEngine){
					m_ruleEngine = value;
					NotifyPropertyChanged("ruleEngine");
				}
			}  
		}
	


		private const string s_cantishaker = @"Antishaker";
		private string m_cantishaker=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='cantishaker']/@value")]
		public string cantishaker {
			get { 
				if( m_cantishaker == null){
					return s_cantishaker;
				}
				return m_cantishaker; 
			}
			set { 
				if( value != m_cantishaker){
					m_cantishaker = value;
					NotifyPropertyChanged("cantishaker");
				}
			}  
		}
	


		private const string s_rotation = @"Rotation";
		private string m_rotation=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rotation']/@value")]
		public string rotation {
			get { 
				if( m_rotation == null){
					return s_rotation;
				}
				return m_rotation; 
			}
			set { 
				if( value != m_rotation){
					m_rotation = value;
					NotifyPropertyChanged("rotation");
				}
			}  
		}
	


		private const string s_analogueOutput = @"Analogue output";
		private string m_analogueOutput=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='analogueOutput']/@value")]
		public string analogueOutput {
			get { 
				if( m_analogueOutput == null){
					return s_analogueOutput;
				}
				return m_analogueOutput; 
			}
			set { 
				if( value != m_analogueOutput){
					m_analogueOutput = value;
					NotifyPropertyChanged("analogueOutput");
				}
			}  
		}
	


		private const string s_profileEditor = @"Profiles";
		private string m_profileEditor=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='profileEditor']/@value")]
		public string profileEditor {
			get { 
				if( m_profileEditor == null){
					return s_profileEditor;
				}
				return m_profileEditor; 
			}
			set { 
				if( value != m_profileEditor){
					m_profileEditor = value;
					NotifyPropertyChanged("profileEditor");
				}
			}  
		}
	


		private const string s_modules = @"Analytics modules management";
		private string m_modules=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='modules']/@value")]
		public string modules {
			get { 
				if( m_modules == null){
					return s_modules;
				}
				return m_modules; 
			}
			set { 
				if( value != m_modules){
					m_modules = value;
					NotifyPropertyChanged("modules");
				}
			}  
		}
	


		private const string s_ptz = @"PTZ сontrol";
		private string m_ptz=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ptz']/@value")]
		public string ptz {
			get { 
				if( m_ptz == null){
					return s_ptz;
				}
				return m_ptz; 
			}
			set { 
				if( value != m_ptz){
					m_ptz = value;
					NotifyPropertyChanged("ptz");
				}
			}  
		}
	


		private const string s_analytics = @"Analytics";
		private string m_analytics=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='analytics']/@value")]
		public string analytics {
			get { 
				if( m_analytics == null){
					return s_analytics;
				}
				return m_analytics; 
			}
			set { 
				if( value != m_analytics){
					m_analytics = value;
					NotifyPropertyChanged("analytics");
				}
			}  
		}
	


		private const string s_confAnalyticsModules = @"Configure analytics modules";
		private string m_confAnalyticsModules=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='confAnalyticsModules']/@value")]
		public string confAnalyticsModules {
			get { 
				if( m_confAnalyticsModules == null){
					return s_confAnalyticsModules;
				}
				return m_confAnalyticsModules; 
			}
			set { 
				if( value != m_confAnalyticsModules){
					m_confAnalyticsModules = value;
					NotifyPropertyChanged("confAnalyticsModules");
				}
			}  
		}
	


		private const string s_analyticsModuleCofig = @"Analytics module config";
		private string m_analyticsModuleCofig=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='analyticsModuleCofig']/@value")]
		public string analyticsModuleCofig {
			get { 
				if( m_analyticsModuleCofig == null){
					return s_analyticsModuleCofig;
				}
				return m_analyticsModuleCofig; 
			}
			set { 
				if( value != m_analyticsModuleCofig){
					m_analyticsModuleCofig = value;
					NotifyPropertyChanged("analyticsModuleCofig");
				}
			}  
		}
	


		private const string s_annotationModuleCofig = @"Annotation module config";
		private string m_annotationModuleCofig=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='annotationModuleCofig']/@value")]
		public string annotationModuleCofig {
			get { 
				if( m_annotationModuleCofig == null){
					return s_annotationModuleCofig;
				}
				return m_annotationModuleCofig; 
			}
			set { 
				if( value != m_annotationModuleCofig){
					m_annotationModuleCofig = value;
					NotifyPropertyChanged("annotationModuleCofig");
				}
			}  
		}
	


		private const string s_regionRuleCofig = @"Region rule config";
		private string m_regionRuleCofig=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='regionRuleCofig']/@value")]
		public string regionRuleCofig {
			get { 
				if( m_regionRuleCofig == null){
					return s_regionRuleCofig;
				}
				return m_regionRuleCofig; 
			}
			set { 
				if( value != m_regionRuleCofig){
					m_regionRuleCofig = value;
					NotifyPropertyChanged("regionRuleCofig");
				}
			}  
		}
	


		private const string s_wireRuleCofig = @"Trip wire rule config";
		private string m_wireRuleCofig=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='wireRuleCofig']/@value")]
		public string wireRuleCofig {
			get { 
				if( m_wireRuleCofig == null){
					return s_wireRuleCofig;
				}
				return m_wireRuleCofig; 
			}
			set { 
				if( value != m_wireRuleCofig){
					m_wireRuleCofig = value;
					NotifyPropertyChanged("wireRuleCofig");
				}
			}  
		}
	


		private const string s_configuration = @"Configuration";
		private string m_configuration=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='configuration']/@value")]
		public string configuration {
			get { 
				if( m_configuration == null){
					return s_configuration;
				}
				return m_configuration; 
			}
			set { 
				if( value != m_configuration){
					m_configuration = value;
					NotifyPropertyChanged("configuration");
				}
			}  
		}
	


		private const string s_nvaControls = @"Controls";
		private string m_nvaControls=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='nvaControls']/@value")]
		public string nvaControls {
			get { 
				if( m_nvaControls == null){
					return s_nvaControls;
				}
				return m_nvaControls; 
			}
			set { 
				if( value != m_nvaControls){
					m_nvaControls = value;
					NotifyPropertyChanged("nvaControls");
				}
			}  
		}
	


		private const string s_nvaAnalytics = @"Analytics";
		private string m_nvaAnalytics=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='nvaAnalytics']/@value")]
		public string nvaAnalytics {
			get { 
				if( m_nvaAnalytics == null){
					return s_nvaAnalytics;
				}
				return m_nvaAnalytics; 
			}
			set { 
				if( value != m_nvaAnalytics){
					m_nvaAnalytics = value;
					NotifyPropertyChanged("nvaAnalytics");
				}
			}  
		}
	


		private const string s_nvaInputs = @"Inputs";
		private string m_nvaInputs=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='nvaInputs']/@value")]
		public string nvaInputs {
			get { 
				if( m_nvaInputs == null){
					return s_nvaInputs;
				}
				return m_nvaInputs; 
			}
			set { 
				if( value != m_nvaInputs){
					m_nvaInputs = value;
					NotifyPropertyChanged("nvaInputs");
				}
			}  
		}
	


		private const string s_nvaMetadata = @"Metadata";
		private string m_nvaMetadata=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='nvaMetadata']/@value")]
		public string nvaMetadata {
			get { 
				if( m_nvaMetadata == null){
					return s_nvaMetadata;
				}
				return m_nvaMetadata; 
			}
			set { 
				if( value != m_nvaMetadata){
					m_nvaMetadata = value;
					NotifyPropertyChanged("nvaMetadata");
				}
			}  
		}
	


		private const string s_nvaSettings = @"Settings";
		private string m_nvaSettings=null;
		[XPath(@"/localized-strings/module[@name='LinkButtonsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='nvaSettings']/@value")]
		public string nvaSettings {
			get { 
				if( m_nvaSettings == null){
					return s_nvaSettings;
				}
				return m_nvaSettings; 
			}
			set { 
				if( value != m_nvaSettings){
					m_nvaSettings = value;
					NotifyPropertyChanged("nvaSettings");
				}
			}  
		}
	
	}

}
	

namespace odm.controllers {
	public partial class InfoFormStrings: LocalizedStringsBase<InfoFormStrings>{
		


		private const string s_titleSave = @"Saving changes...";
		private string m_titleSave=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='titleSave']/@value")]
		public string titleSave {
			get { 
				if( m_titleSave == null){
					return s_titleSave;
				}
				return m_titleSave; 
			}
			set { 
				if( value != m_titleSave){
					m_titleSave = value;
					NotifyPropertyChanged("titleSave");
				}
			}  
		}
	


		private const string s_titleInfo = @"Information ...";
		private string m_titleInfo=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='titleInfo']/@value")]
		public string titleInfo {
			get { 
				if( m_titleInfo == null){
					return s_titleInfo;
				}
				return m_titleInfo; 
			}
			set { 
				if( value != m_titleInfo){
					m_titleInfo = value;
					NotifyPropertyChanged("titleInfo");
				}
			}  
		}
	


		private const string s_close = @"Close";
		private string m_close=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='close']/@value")]
		public string close {
			get { 
				if( m_close == null){
					return s_close;
				}
				return m_close; 
			}
			set { 
				if( value != m_close){
					m_close = value;
					NotifyPropertyChanged("close");
				}
			}  
		}
	


		private const string s_refresh = @"Refresh";
		private string m_refresh=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='refresh']/@value")]
		public string refresh {
			get { 
				if( m_refresh == null){
					return s_refresh;
				}
				return m_refresh; 
			}
			set { 
				if( value != m_refresh){
					m_refresh = value;
					NotifyPropertyChanged("refresh");
				}
			}  
		}
	


		private const string s_applyChangesTitle = @"Applying ...";
		private string m_applyChangesTitle=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='applyChangesTitle']/@value")]
		public string applyChangesTitle {
			get { 
				if( m_applyChangesTitle == null){
					return s_applyChangesTitle;
				}
				return m_applyChangesTitle; 
			}
			set { 
				if( value != m_applyChangesTitle){
					m_applyChangesTitle = value;
					NotifyPropertyChanged("applyChangesTitle");
				}
			}  
		}
	


		private const string s_loadingData = @"Loading ...";
		private string m_loadingData=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='loadingData']/@value")]
		public string loadingData {
			get { 
				if( m_loadingData == null){
					return s_loadingData;
				}
				return m_loadingData; 
			}
			set { 
				if( value != m_loadingData){
					m_loadingData = value;
					NotifyPropertyChanged("loadingData");
				}
			}  
		}
	


		private const string s_ifoTitle = @"Information ...";
		private string m_ifoTitle=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='ifoTitle']/@value")]
		public string ifoTitle {
			get { 
				if( m_ifoTitle == null){
					return s_ifoTitle;
				}
				return m_ifoTitle; 
			}
			set { 
				if( value != m_ifoTitle){
					m_ifoTitle = value;
					NotifyPropertyChanged("ifoTitle");
				}
			}  
		}
	


		private const string s_errorTitle = @"ERROR ...";
		private string m_errorTitle=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='errorTitle']/@value")]
		public string errorTitle {
			get { 
				if( m_errorTitle == null){
					return s_errorTitle;
				}
				return m_errorTitle; 
			}
			set { 
				if( value != m_errorTitle){
					m_errorTitle = value;
					NotifyPropertyChanged("errorTitle");
				}
			}  
		}
	


		private const string s_applyChanges = @"Please wait until changes will be applied";
		private string m_applyChanges=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='applyChanges']/@value")]
		public string applyChanges {
			get { 
				if( m_applyChanges == null){
					return s_applyChanges;
				}
				return m_applyChanges; 
			}
			set { 
				if( value != m_applyChanges){
					m_applyChanges = value;
					NotifyPropertyChanged("applyChanges");
				}
			}  
		}
	


		private const string s_needToReboot = @"Device need to be rebooted. Please refresh devices list.";
		private string m_needToReboot=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='needToReboot']/@value")]
		public string needToReboot {
			get { 
				if( m_needToReboot == null){
					return s_needToReboot;
				}
				return m_needToReboot; 
			}
			set { 
				if( value != m_needToReboot){
					m_needToReboot = value;
					NotifyPropertyChanged("needToReboot");
				}
			}  
		}
	


		private const string s_firmwareUpdated = @"Firmware update is complete. Please wait for your device to reboot.";
		private string m_firmwareUpdated=null;
		[XPath(@"/localized-strings/module[@name='InfoFormStrings' and @namespace='odm.controllers']/descendant::string[@name='firmwareUpdated']/@value")]
		public string firmwareUpdated {
			get { 
				if( m_firmwareUpdated == null){
					return s_firmwareUpdated;
				}
				return m_firmwareUpdated; 
			}
			set { 
				if( value != m_firmwareUpdated){
					m_firmwareUpdated = value;
					NotifyPropertyChanged("firmwareUpdated");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class EmptySelectionStrings: LocalizedStringsBase<EmptySelectionStrings>{
		


		private const string s_title = @"No connected devices.";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='EmptySelectionStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_text = @"Please check the device is properly connected, or contact support.";
		private string m_text=null;
		[XPath(@"/localized-strings/module[@name='EmptySelectionStrings' and @namespace='odm.ui.controls']/descendant::string[@name='text']/@value")]
		public string text {
			get { 
				if( m_text == null){
					return s_text;
				}
				return m_text; 
			}
			set { 
				if( value != m_text){
					m_text = value;
					NotifyPropertyChanged("text");
				}
			}  
		}
	


		private const string s_textContacts = @"";
		private string m_textContacts=null;
		[XPath(@"/localized-strings/module[@name='EmptySelectionStrings' and @namespace='odm.ui.controls']/descendant::string[@name='textContacts']/@value")]
		public string textContacts {
			get { 
				if( m_textContacts == null){
					return s_textContacts;
				}
				return m_textContacts; 
			}
			set { 
				if( value != m_textContacts){
					m_textContacts = value;
					NotifyPropertyChanged("textContacts");
				}
			}  
		}
	
	}

}
	

namespace odm {
	public partial class ExceptionStrings: LocalizedStringsBase<ExceptionStrings>{
		


		private const string s_sExceptionWSDiscoveryTitle = @"WSDiscovery error";
		private string m_sExceptionWSDiscoveryTitle=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sExceptionWSDiscoveryTitle']/@value")]
		public string sExceptionWSDiscoveryTitle {
			get { 
				if( m_sExceptionWSDiscoveryTitle == null){
					return s_sExceptionWSDiscoveryTitle;
				}
				return m_sExceptionWSDiscoveryTitle; 
			}
			set { 
				if( value != m_sExceptionWSDiscoveryTitle){
					m_sExceptionWSDiscoveryTitle = value;
					NotifyPropertyChanged("sExceptionWSDiscoveryTitle");
				}
			}  
		}
	


		private const string s_sErrorDevInfoNull = @"Error was during device configuration reading. Please refresh devices list";
		private string m_sErrorDevInfoNull=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorDevInfoNull']/@value")]
		public string sErrorDevInfoNull {
			get { 
				if( m_sErrorDevInfoNull == null){
					return s_sErrorDevInfoNull;
				}
				return m_sErrorDevInfoNull; 
			}
			set { 
				if( value != m_sErrorDevInfoNull){
					m_sErrorDevInfoNull = value;
					NotifyPropertyChanged("sErrorDevInfoNull");
				}
			}  
		}
	


		private const string s_sErrorDeviceName = @"none";
		private string m_sErrorDeviceName=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorDeviceName']/@value")]
		public string sErrorDeviceName {
			get { 
				if( m_sErrorDeviceName == null){
					return s_sErrorDeviceName;
				}
				return m_sErrorDeviceName; 
			}
			set { 
				if( value != m_sErrorDeviceName){
					m_sErrorDeviceName = value;
					NotifyPropertyChanged("sErrorDeviceName");
				}
			}  
		}
	


		private const string s_sErrorDeviceFirmware = @"none";
		private string m_sErrorDeviceFirmware=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorDeviceFirmware']/@value")]
		public string sErrorDeviceFirmware {
			get { 
				if( m_sErrorDeviceFirmware == null){
					return s_sErrorDeviceFirmware;
				}
				return m_sErrorDeviceFirmware; 
			}
			set { 
				if( value != m_sErrorDeviceFirmware){
					m_sErrorDeviceFirmware = value;
					NotifyPropertyChanged("sErrorDeviceFirmware");
				}
			}  
		}
	


		private const string s_sErrorSaveVideoStreaming = @"Error was during saving video streaming settings. Please refresh device.";
		private string m_sErrorSaveVideoStreaming=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorSaveVideoStreaming']/@value")]
		public string sErrorSaveVideoStreaming {
			get { 
				if( m_sErrorSaveVideoStreaming == null){
					return s_sErrorSaveVideoStreaming;
				}
				return m_sErrorSaveVideoStreaming; 
			}
			set { 
				if( value != m_sErrorSaveVideoStreaming){
					m_sErrorSaveVideoStreaming = value;
					NotifyPropertyChanged("sErrorSaveVideoStreaming");
				}
			}  
		}
	


		private const string s_sErrorSaveNetworkSettings = @"Error was during saving network settings. Please refresh device.";
		private string m_sErrorSaveNetworkSettings=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorSaveNetworkSettings']/@value")]
		public string sErrorSaveNetworkSettings {
			get { 
				if( m_sErrorSaveNetworkSettings == null){
					return s_sErrorSaveNetworkSettings;
				}
				return m_sErrorSaveNetworkSettings; 
			}
			set { 
				if( value != m_sErrorSaveNetworkSettings){
					m_sErrorSaveNetworkSettings = value;
					NotifyPropertyChanged("sErrorSaveNetworkSettings");
				}
			}  
		}
	


		private const string s_sErrorSaveDeviceNameSettings = @"Error was during saving device name. Please refresh device.";
		private string m_sErrorSaveDeviceNameSettings=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorSaveDeviceNameSettings']/@value")]
		public string sErrorSaveDeviceNameSettings {
			get { 
				if( m_sErrorSaveDeviceNameSettings == null){
					return s_sErrorSaveDeviceNameSettings;
				}
				return m_sErrorSaveDeviceNameSettings; 
			}
			set { 
				if( value != m_sErrorSaveDeviceNameSettings){
					m_sErrorSaveDeviceNameSettings = value;
					NotifyPropertyChanged("sErrorSaveDeviceNameSettings");
				}
			}  
		}
	


		private const string s_sErrorVlc = @"Media stream error";
		private string m_sErrorVlc=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorVlc']/@value")]
		public string sErrorVlc {
			get { 
				if( m_sErrorVlc == null){
					return s_sErrorVlc;
				}
				return m_sErrorVlc; 
			}
			set { 
				if( value != m_sErrorVlc){
					m_sErrorVlc = value;
					NotifyPropertyChanged("sErrorVlc");
				}
			}  
		}
	


		private const string s_sErrorVlcPlayer = @"Cann't play media stream.";
		private string m_sErrorVlcPlayer=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorVlcPlayer']/@value")]
		public string sErrorVlcPlayer {
			get { 
				if( m_sErrorVlcPlayer == null){
					return s_sErrorVlcPlayer;
				}
				return m_sErrorVlcPlayer; 
			}
			set { 
				if( value != m_sErrorVlcPlayer){
					m_sErrorVlcPlayer = value;
					NotifyPropertyChanged("sErrorVlcPlayer");
				}
			}  
		}
	


		private const string s_sErrorVlcMediaUriIsEmpty = @"Stream uri is emtpy";
		private string m_sErrorVlcMediaUriIsEmpty=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorVlcMediaUriIsEmpty']/@value")]
		public string sErrorVlcMediaUriIsEmpty {
			get { 
				if( m_sErrorVlcMediaUriIsEmpty == null){
					return s_sErrorVlcMediaUriIsEmpty;
				}
				return m_sErrorVlcMediaUriIsEmpty; 
			}
			set { 
				if( value != m_sErrorVlcMediaUriIsEmpty){
					m_sErrorVlcMediaUriIsEmpty = value;
					NotifyPropertyChanged("sErrorVlcMediaUriIsEmpty");
				}
			}  
		}
	


		private const string s_sErrorVlcMediaUriIsBad = @"Stream uri is unknown";
		private string m_sErrorVlcMediaUriIsBad=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorVlcMediaUriIsBad']/@value")]
		public string sErrorVlcMediaUriIsBad {
			get { 
				if( m_sErrorVlcMediaUriIsBad == null){
					return s_sErrorVlcMediaUriIsBad;
				}
				return m_sErrorVlcMediaUriIsBad; 
			}
			set { 
				if( value != m_sErrorVlcMediaUriIsBad){
					m_sErrorVlcMediaUriIsBad = value;
					NotifyPropertyChanged("sErrorVlcMediaUriIsBad");
				}
			}  
		}
	


		private const string s_sErrorNotAuthorized = @"Authorization error. Please select account with proper rights.";
		private string m_sErrorNotAuthorized=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorNotAuthorized']/@value")]
		public string sErrorNotAuthorized {
			get { 
				if( m_sErrorNotAuthorized == null){
					return s_sErrorNotAuthorized;
				}
				return m_sErrorNotAuthorized; 
			}
			set { 
				if( value != m_sErrorNotAuthorized){
					m_sErrorNotAuthorized = value;
					NotifyPropertyChanged("sErrorNotAuthorized");
				}
			}  
		}
	


		private const string s_sErrorNameNotUnique = @"Name '{0}' has been already taken.";
		private string m_sErrorNameNotUnique=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='sErrorNameNotUnique']/@value")]
		public string sErrorNameNotUnique {
			get { 
				if( m_sErrorNameNotUnique == null){
					return s_sErrorNameNotUnique;
				}
				return m_sErrorNameNotUnique; 
			}
			set { 
				if( value != m_sErrorNameNotUnique){
					m_sErrorNameNotUnique = value;
					NotifyPropertyChanged("sErrorNameNotUnique");
				}
			}  
		}
	


		private const string s_errBindName = @"Name value incorrect: ";
		private string m_errBindName=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindName']/@value")]
		public string errBindName {
			get { 
				if( m_errBindName == null){
					return s_errBindName;
				}
				return m_errBindName; 
			}
			set { 
				if( value != m_errBindName){
					m_errBindName = value;
					NotifyPropertyChanged("errBindName");
				}
			}  
		}
	


		private const string s_errBindFirmwareVer = @"Firmware value incorrect: ";
		private string m_errBindFirmwareVer=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindFirmwareVer']/@value")]
		public string errBindFirmwareVer {
			get { 
				if( m_errBindFirmwareVer == null){
					return s_errBindFirmwareVer;
				}
				return m_errBindFirmwareVer; 
			}
			set { 
				if( value != m_errBindFirmwareVer){
					m_errBindFirmwareVer = value;
					NotifyPropertyChanged("errBindFirmwareVer");
				}
			}  
		}
	


		private const string s_errBindDeviceID = @"Device Id value incorrect: ";
		private string m_errBindDeviceID=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindDeviceID']/@value")]
		public string errBindDeviceID {
			get { 
				if( m_errBindDeviceID == null){
					return s_errBindDeviceID;
				}
				return m_errBindDeviceID; 
			}
			set { 
				if( value != m_errBindDeviceID){
					m_errBindDeviceID = value;
					NotifyPropertyChanged("errBindDeviceID");
				}
			}  
		}
	


		private const string s_errBindHardwareVer = @"Hardware Ver. value incorrect: ";
		private string m_errBindHardwareVer=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindHardwareVer']/@value")]
		public string errBindHardwareVer {
			get { 
				if( m_errBindHardwareVer == null){
					return s_errBindHardwareVer;
				}
				return m_errBindHardwareVer; 
			}
			set { 
				if( value != m_errBindHardwareVer){
					m_errBindHardwareVer = value;
					NotifyPropertyChanged("errBindHardwareVer");
				}
			}  
		}
	


		private const string s_errBindNetworkIPAddress = @"Network IP Address value incorrect: ";
		private string m_errBindNetworkIPAddress=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindNetworkIPAddress']/@value")]
		public string errBindNetworkIPAddress {
			get { 
				if( m_errBindNetworkIPAddress == null){
					return s_errBindNetworkIPAddress;
				}
				return m_errBindNetworkIPAddress; 
			}
			set { 
				if( value != m_errBindNetworkIPAddress){
					m_errBindNetworkIPAddress = value;
					NotifyPropertyChanged("errBindNetworkIPAddress");
				}
			}  
		}
	


		private const string s_errBindMACAddress = @"MAC Address value incorrect: ";
		private string m_errBindMACAddress=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindMACAddress']/@value")]
		public string errBindMACAddress {
			get { 
				if( m_errBindMACAddress == null){
					return s_errBindMACAddress;
				}
				return m_errBindMACAddress; 
			}
			set { 
				if( value != m_errBindMACAddress){
					m_errBindMACAddress = value;
					NotifyPropertyChanged("errBindMACAddress");
				}
			}  
		}
	


		private const string s_errBinddateTime = @"DateTime value incorrect: ";
		private string m_errBinddateTime=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBinddateTime']/@value")]
		public string errBinddateTime {
			get { 
				if( m_errBinddateTime == null){
					return s_errBinddateTime;
				}
				return m_errBinddateTime; 
			}
			set { 
				if( value != m_errBinddateTime){
					m_errBinddateTime = value;
					NotifyPropertyChanged("errBinddateTime");
				}
			}  
		}
	


		private const string s_errBind2 = @"value incorrect: ";
		private string m_errBind2=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind2']/@value")]
		public string errBind2 {
			get { 
				if( m_errBind2 == null){
					return s_errBind2;
				}
				return m_errBind2; 
			}
			set { 
				if( value != m_errBind2){
					m_errBind2 = value;
					NotifyPropertyChanged("errBind2");
				}
			}  
		}
	


		private const string s_errBindNetworkSetMac = @"Mac address value incorrect: ";
		private string m_errBindNetworkSetMac=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindNetworkSetMac']/@value")]
		public string errBindNetworkSetMac {
			get { 
				if( m_errBindNetworkSetMac == null){
					return s_errBindNetworkSetMac;
				}
				return m_errBindNetworkSetMac; 
			}
			set { 
				if( value != m_errBindNetworkSetMac){
					m_errBindNetworkSetMac = value;
					NotifyPropertyChanged("errBindNetworkSetMac");
				}
			}  
		}
	


		private const string s_errBindStaticDns = @"Static dns value incorrect: ";
		private string m_errBindStaticDns=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindStaticDns']/@value")]
		public string errBindStaticDns {
			get { 
				if( m_errBindStaticDns == null){
					return s_errBindStaticDns;
				}
				return m_errBindStaticDns; 
			}
			set { 
				if( value != m_errBindStaticDns){
					m_errBindStaticDns = value;
					NotifyPropertyChanged("errBindStaticDns");
				}
			}  
		}
	


		private const string s_errBindStaticGateway = @"Static gateway value incorrect: ";
		private string m_errBindStaticGateway=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindStaticGateway']/@value")]
		public string errBindStaticGateway {
			get { 
				if( m_errBindStaticGateway == null){
					return s_errBindStaticGateway;
				}
				return m_errBindStaticGateway; 
			}
			set { 
				if( value != m_errBindStaticGateway){
					m_errBindStaticGateway = value;
					NotifyPropertyChanged("errBindStaticGateway");
				}
			}  
		}
	


		private const string s_errBindSubnetMask = @"Subnet mask value incorrect: ";
		private string m_errBindSubnetMask=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindSubnetMask']/@value")]
		public string errBindSubnetMask {
			get { 
				if( m_errBindSubnetMask == null){
					return s_errBindSubnetMask;
				}
				return m_errBindSubnetMask; 
			}
			set { 
				if( value != m_errBindSubnetMask){
					m_errBindSubnetMask = value;
					NotifyPropertyChanged("errBindSubnetMask");
				}
			}  
		}
	


		private const string s_errBindStaticIp = @"Static ip value incorrect: ";
		private string m_errBindStaticIp=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindStaticIp']/@value")]
		public string errBindStaticIp {
			get { 
				if( m_errBindStaticIp == null){
					return s_errBindStaticIp;
				}
				return m_errBindStaticIp; 
			}
			set { 
				if( value != m_errBindStaticIp){
					m_errBindStaticIp = value;
					NotifyPropertyChanged("errBindStaticIp");
				}
			}  
		}
	


		private const string s_errBindDhcp = @"Dhcp value incorrect: ";
		private string m_errBindDhcp=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindDhcp']/@value")]
		public string errBindDhcp {
			get { 
				if( m_errBindDhcp == null){
					return s_errBindDhcp;
				}
				return m_errBindDhcp; 
			}
			set { 
				if( value != m_errBindDhcp){
					m_errBindDhcp = value;
					NotifyPropertyChanged("errBindDhcp");
				}
			}  
		}
	


		private const string s_errBind4 = @"value incorrect: ";
		private string m_errBind4=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind4']/@value")]
		public string errBind4 {
			get { 
				if( m_errBind4 == null){
					return s_errBind4;
				}
				return m_errBind4; 
			}
			set { 
				if( value != m_errBind4){
					m_errBind4 = value;
					NotifyPropertyChanged("errBind4");
				}
			}  
		}
	


		private const string s_errBindCurrentFirmwareVersion = @"Current firmware version value incorrect: ";
		private string m_errBindCurrentFirmwareVersion=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindCurrentFirmwareVersion']/@value")]
		public string errBindCurrentFirmwareVersion {
			get { 
				if( m_errBindCurrentFirmwareVersion == null){
					return s_errBindCurrentFirmwareVersion;
				}
				return m_errBindCurrentFirmwareVersion; 
			}
			set { 
				if( value != m_errBindCurrentFirmwareVersion){
					m_errBindCurrentFirmwareVersion = value;
					NotifyPropertyChanged("errBindCurrentFirmwareVersion");
				}
			}  
		}
	


		private const string s_errBindFirmwareUpgradeSupported = @"Upgrade suported value Null";
		private string m_errBindFirmwareUpgradeSupported=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindFirmwareUpgradeSupported']/@value")]
		public string errBindFirmwareUpgradeSupported {
			get { 
				if( m_errBindFirmwareUpgradeSupported == null){
					return s_errBindFirmwareUpgradeSupported;
				}
				return m_errBindFirmwareUpgradeSupported; 
			}
			set { 
				if( value != m_errBindFirmwareUpgradeSupported){
					m_errBindFirmwareUpgradeSupported = value;
					NotifyPropertyChanged("errBindFirmwareUpgradeSupported");
				}
			}  
		}
	


		private const string s_errBind6 = @"value incorrect: ";
		private string m_errBind6=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind6']/@value")]
		public string errBind6 {
			get { 
				if( m_errBind6 == null){
					return s_errBind6;
				}
				return m_errBind6; 
			}
			set { 
				if( value != m_errBind6){
					m_errBind6 = value;
					NotifyPropertyChanged("errBind6");
				}
			}  
		}
	


		private const string s_errBindEventSnapShot = @"Snap shot incorrect";
		private string m_errBindEventSnapShot=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindEventSnapShot']/@value")]
		public string errBindEventSnapShot {
			get { 
				if( m_errBindEventSnapShot == null){
					return s_errBindEventSnapShot;
				}
				return m_errBindEventSnapShot; 
			}
			set { 
				if( value != m_errBindEventSnapShot){
					m_errBindEventSnapShot = value;
					NotifyPropertyChanged("errBindEventSnapShot");
				}
			}  
		}
	


		private const string s_errBindFocalLength = @"Focal length value incorrect: ";
		private string m_errBindFocalLength=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindFocalLength']/@value")]
		public string errBindFocalLength {
			get { 
				if( m_errBindFocalLength == null){
					return s_errBindFocalLength;
				}
				return m_errBindFocalLength; 
			}
			set { 
				if( value != m_errBindFocalLength){
					m_errBindFocalLength = value;
					NotifyPropertyChanged("errBindFocalLength");
				}
			}  
		}
	


		private const string s_errBindSensorPixelSize = @"Sensor pixel size value incorrect: ";
		private string m_errBindSensorPixelSize=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindSensorPixelSize']/@value")]
		public string errBindSensorPixelSize {
			get { 
				if( m_errBindSensorPixelSize == null){
					return s_errBindSensorPixelSize;
				}
				return m_errBindSensorPixelSize; 
			}
			set { 
				if( value != m_errBindSensorPixelSize){
					m_errBindSensorPixelSize = value;
					NotifyPropertyChanged("errBindSensorPixelSize");
				}
			}  
		}
	


		private const string s_errBindMatrixFormat = @"Matrix format value incorrect: ";
		private string m_errBindMatrixFormat=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindMatrixFormat']/@value")]
		public string errBindMatrixFormat {
			get { 
				if( m_errBindMatrixFormat == null){
					return s_errBindMatrixFormat;
				}
				return m_errBindMatrixFormat; 
			}
			set { 
				if( value != m_errBindMatrixFormat){
					m_errBindMatrixFormat = value;
					NotifyPropertyChanged("errBindMatrixFormat");
				}
			}  
		}
	


		private const string s_errBindVStrBitrateMinMax = @"Bitrate minimun/maximun value incorrect";
		private string m_errBindVStrBitrateMinMax=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrBitrateMinMax']/@value")]
		public string errBindVStrBitrateMinMax {
			get { 
				if( m_errBindVStrBitrateMinMax == null){
					return s_errBindVStrBitrateMinMax;
				}
				return m_errBindVStrBitrateMinMax; 
			}
			set { 
				if( value != m_errBindVStrBitrateMinMax){
					m_errBindVStrBitrateMinMax = value;
					NotifyPropertyChanged("errBindVStrBitrateMinMax");
				}
			}  
		}
	


		private const string s_errBindVStrBitrate = @"Bitrate value incorrect: ";
		private string m_errBindVStrBitrate=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrBitrate']/@value")]
		public string errBindVStrBitrate {
			get { 
				if( m_errBindVStrBitrate == null){
					return s_errBindVStrBitrate;
				}
				return m_errBindVStrBitrate; 
			}
			set { 
				if( value != m_errBindVStrBitrate){
					m_errBindVStrBitrate = value;
					NotifyPropertyChanged("errBindVStrBitrate");
				}
			}  
		}
	


		private const string s_errBindVStrCurrentEncoder = @"Encoder value incorrect: ";
		private string m_errBindVStrCurrentEncoder=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrCurrentEncoder']/@value")]
		public string errBindVStrCurrentEncoder {
			get { 
				if( m_errBindVStrCurrentEncoder == null){
					return s_errBindVStrCurrentEncoder;
				}
				return m_errBindVStrCurrentEncoder; 
			}
			set { 
				if( value != m_errBindVStrCurrentEncoder){
					m_errBindVStrCurrentEncoder = value;
					NotifyPropertyChanged("errBindVStrCurrentEncoder");
				}
			}  
		}
	


		private const string s_errBindVStrcurrentResolution = @"Resolution value incorrect: ";
		private string m_errBindVStrcurrentResolution=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrcurrentResolution']/@value")]
		public string errBindVStrcurrentResolution {
			get { 
				if( m_errBindVStrcurrentResolution == null){
					return s_errBindVStrcurrentResolution;
				}
				return m_errBindVStrcurrentResolution; 
			}
			set { 
				if( value != m_errBindVStrcurrentResolution){
					m_errBindVStrcurrentResolution = value;
					NotifyPropertyChanged("errBindVStrcurrentResolution");
				}
			}  
		}
	


		private const string s_errBindVStrMetadata = @"Metadata value incorrect: ";
		private string m_errBindVStrMetadata=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrMetadata']/@value")]
		public string errBindVStrMetadata {
			get { 
				if( m_errBindVStrMetadata == null){
					return s_errBindVStrMetadata;
				}
				return m_errBindVStrMetadata; 
			}
			set { 
				if( value != m_errBindVStrMetadata){
					m_errBindVStrMetadata = value;
					NotifyPropertyChanged("errBindVStrMetadata");
				}
			}  
		}
	


		private const string s_errBindVStrChannelName = @"Channel name value incorrect: ";
		private string m_errBindVStrChannelName=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrChannelName']/@value")]
		public string errBindVStrChannelName {
			get { 
				if( m_errBindVStrChannelName == null){
					return s_errBindVStrChannelName;
				}
				return m_errBindVStrChannelName; 
			}
			set { 
				if( value != m_errBindVStrChannelName){
					m_errBindVStrChannelName = value;
					NotifyPropertyChanged("errBindVStrChannelName");
				}
			}  
		}
	


		private const string s_errBindVStrFrameRate = @"Frame rate value incorrect: ";
		private string m_errBindVStrFrameRate=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrFrameRate']/@value")]
		public string errBindVStrFrameRate {
			get { 
				if( m_errBindVStrFrameRate == null){
					return s_errBindVStrFrameRate;
				}
				return m_errBindVStrFrameRate; 
			}
			set { 
				if( value != m_errBindVStrFrameRate){
					m_errBindVStrFrameRate = value;
					NotifyPropertyChanged("errBindVStrFrameRate");
				}
			}  
		}
	


		private const string s_errBindVStrFrameRateMinMax = @"Frame rate min/max value incorrect";
		private string m_errBindVStrFrameRateMinMax=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindVStrFrameRateMinMax']/@value")]
		public string errBindVStrFrameRateMinMax {
			get { 
				if( m_errBindVStrFrameRateMinMax == null){
					return s_errBindVStrFrameRateMinMax;
				}
				return m_errBindVStrFrameRateMinMax; 
			}
			set { 
				if( value != m_errBindVStrFrameRateMinMax){
					m_errBindVStrFrameRateMinMax = value;
					NotifyPropertyChanged("errBindVStrFrameRateMinMax");
				}
			}  
		}
	


		private const string s_errBindMovingRects = @"Moving rects value incorrect: ";
		private string m_errBindMovingRects=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindMovingRects']/@value")]
		public string errBindMovingRects {
			get { 
				if( m_errBindMovingRects == null){
					return s_errBindMovingRects;
				}
				return m_errBindMovingRects; 
			}
			set { 
				if( value != m_errBindMovingRects){
					m_errBindMovingRects = value;
					NotifyPropertyChanged("errBindMovingRects");
				}
			}  
		}
	


		private const string s_errBindTimeStamp = @"Time stamp value incorrect: ";
		private string m_errBindTimeStamp=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindTimeStamp']/@value")]
		public string errBindTimeStamp {
			get { 
				if( m_errBindTimeStamp == null){
					return s_errBindTimeStamp;
				}
				return m_errBindTimeStamp; 
			}
			set { 
				if( value != m_errBindTimeStamp){
					m_errBindTimeStamp = value;
					NotifyPropertyChanged("errBindTimeStamp");
				}
			}  
		}
	


		private const string s_errBindTracking = @"Tracking value incorrect: ";
		private string m_errBindTracking=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindTracking']/@value")]
		public string errBindTracking {
			get { 
				if( m_errBindTracking == null){
					return s_errBindTracking;
				}
				return m_errBindTracking; 
			}
			set { 
				if( value != m_errBindTracking){
					m_errBindTracking = value;
					NotifyPropertyChanged("errBindTracking");
				}
			}  
		}
	


		private const string s_errBindSpeed = @"Speed value incorrect: ";
		private string m_errBindSpeed=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindSpeed']/@value")]
		public string errBindSpeed {
			get { 
				if( m_errBindSpeed == null){
					return s_errBindSpeed;
				}
				return m_errBindSpeed; 
			}
			set { 
				if( value != m_errBindSpeed){
					m_errBindSpeed = value;
					NotifyPropertyChanged("errBindSpeed");
				}
			}  
		}
	


		private const string s_errBindUserRegion = @"User region value incorrect: ";
		private string m_errBindUserRegion=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindUserRegion']/@value")]
		public string errBindUserRegion {
			get { 
				if( m_errBindUserRegion == null){
					return s_errBindUserRegion;
				}
				return m_errBindUserRegion; 
			}
			set { 
				if( value != m_errBindUserRegion){
					m_errBindUserRegion = value;
					NotifyPropertyChanged("errBindUserRegion");
				}
			}  
		}
	


		private const string s_errBindChannelName = @"Channel name value incorrect: ";
		private string m_errBindChannelName=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindChannelName']/@value")]
		public string errBindChannelName {
			get { 
				if( m_errBindChannelName == null){
					return s_errBindChannelName;
				}
				return m_errBindChannelName; 
			}
			set { 
				if( value != m_errBindChannelName){
					m_errBindChannelName = value;
					NotifyPropertyChanged("errBindChannelName");
				}
			}  
		}
	


		private const string s_errBind11 = @"value incorrect: ";
		private string m_errBind11=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind11']/@value")]
		public string errBind11 {
			get { 
				if( m_errBind11 == null){
					return s_errBind11;
				}
				return m_errBind11; 
			}
			set { 
				if( value != m_errBind11){
					m_errBind11 = value;
					NotifyPropertyChanged("errBind11");
				}
			}  
		}
	


		private const string s_errBindContrastSensitivity = @"Contrast sensitivity value incorrect: ";
		private string m_errBindContrastSensitivity=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindContrastSensitivity']/@value")]
		public string errBindContrastSensitivity {
			get { 
				if( m_errBindContrastSensitivity == null){
					return s_errBindContrastSensitivity;
				}
				return m_errBindContrastSensitivity; 
			}
			set { 
				if( value != m_errBindContrastSensitivity){
					m_errBindContrastSensitivity = value;
					NotifyPropertyChanged("errBindContrastSensitivity");
				}
			}  
		}
	


		private const string s_errBindMinMaxObjectArea = @"Min object area Greater than Max object ares";
		private string m_errBindMinMaxObjectArea=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindMinMaxObjectArea']/@value")]
		public string errBindMinMaxObjectArea {
			get { 
				if( m_errBindMinMaxObjectArea == null){
					return s_errBindMinMaxObjectArea;
				}
				return m_errBindMinMaxObjectArea; 
			}
			set { 
				if( value != m_errBindMinMaxObjectArea){
					m_errBindMinMaxObjectArea = value;
					NotifyPropertyChanged("errBindMinMaxObjectArea");
				}
			}  
		}
	


		private const string s_errBindObjectArea = @"Object area value incorrect";
		private string m_errBindObjectArea=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindObjectArea']/@value")]
		public string errBindObjectArea {
			get { 
				if( m_errBindObjectArea == null){
					return s_errBindObjectArea;
				}
				return m_errBindObjectArea; 
			}
			set { 
				if( value != m_errBindObjectArea){
					m_errBindObjectArea = value;
					NotifyPropertyChanged("errBindObjectArea");
				}
			}  
		}
	


		private const string s_errBindMaxObjectSpeed = @"Max object speed value incorrect: ";
		private string m_errBindMaxObjectSpeed=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindMaxObjectSpeed']/@value")]
		public string errBindMaxObjectSpeed {
			get { 
				if( m_errBindMaxObjectSpeed == null){
					return s_errBindMaxObjectSpeed;
				}
				return m_errBindMaxObjectSpeed; 
			}
			set { 
				if( value != m_errBindMaxObjectSpeed){
					m_errBindMaxObjectSpeed = value;
					NotifyPropertyChanged("errBindMaxObjectSpeed");
				}
			}  
		}
	


		private const string s_errBindStabilizationTime = @"Stabilization time value incorrect: ";
		private string m_errBindStabilizationTime=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBindStabilizationTime']/@value")]
		public string errBindStabilizationTime {
			get { 
				if( m_errBindStabilizationTime == null){
					return s_errBindStabilizationTime;
				}
				return m_errBindStabilizationTime; 
			}
			set { 
				if( value != m_errBindStabilizationTime){
					m_errBindStabilizationTime = value;
					NotifyPropertyChanged("errBindStabilizationTime");
				}
			}  
		}
	


		private const string s_errBind13 = @"value incorrect: ";
		private string m_errBind13=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind13']/@value")]
		public string errBind13 {
			get { 
				if( m_errBind13 == null){
					return s_errBind13;
				}
				return m_errBind13; 
			}
			set { 
				if( value != m_errBind13){
					m_errBind13 = value;
					NotifyPropertyChanged("errBind13");
				}
			}  
		}
	


		private const string s_errBind14 = @"value incorrect: ";
		private string m_errBind14=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind14']/@value")]
		public string errBind14 {
			get { 
				if( m_errBind14 == null){
					return s_errBind14;
				}
				return m_errBind14; 
			}
			set { 
				if( value != m_errBind14){
					m_errBind14 = value;
					NotifyPropertyChanged("errBind14");
				}
			}  
		}
	


		private const string s_errBind15 = @"value incorrect: ";
		private string m_errBind15=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind15']/@value")]
		public string errBind15 {
			get { 
				if( m_errBind15 == null){
					return s_errBind15;
				}
				return m_errBind15; 
			}
			set { 
				if( value != m_errBind15){
					m_errBind15 = value;
					NotifyPropertyChanged("errBind15");
				}
			}  
		}
	


		private const string s_errBind16 = @"value incorrect: ";
		private string m_errBind16=null;
		[XPath(@"/localized-strings/module[@name='ExceptionStrings' and @namespace='odm']/descendant::string[@name='errBind16']/@value")]
		public string errBind16 {
			get { 
				if( m_errBind16 == null){
					return s_errBind16;
				}
				return m_errBind16; 
			}
			set { 
				if( value != m_errBind16){
					m_errBind16 = value;
					NotifyPropertyChanged("errBind16");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyOnvifExplorerStrings: LocalizedStringsBase<PropertyOnvifExplorerStrings>{
		


		private const string s_title = @"Onvif explorer";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyOnvifExplorerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_save = @"Save";
		private string m_save=null;
		[XPath(@"/localized-strings/module[@name='PropertyOnvifExplorerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='save']/@value")]
		public string save {
			get { 
				if( m_save == null){
					return s_save;
				}
				return m_save; 
			}
			set { 
				if( value != m_save){
					m_save = value;
					NotifyPropertyChanged("save");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyIdentificationStrings: LocalizedStringsBase<PropertyIdentificationStrings>{
		


		private const string s_title = @"Identification";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_name = @"Name";
		private string m_name=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='name']/@value")]
		public string name {
			get { 
				if( m_name == null){
					return s_name;
				}
				return m_name; 
			}
			set { 
				if( value != m_name){
					m_name = value;
					NotifyPropertyChanged("name");
				}
			}  
		}
	


		private const string s_location = @"Location";
		private string m_location=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='location']/@value")]
		public string location {
			get { 
				if( m_location == null){
					return s_location;
				}
				return m_location; 
			}
			set { 
				if( value != m_location){
					m_location = value;
					NotifyPropertyChanged("location");
				}
			}  
		}
	


		private const string s_curTime = @"Current time";
		private string m_curTime=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='curTime']/@value")]
		public string curTime {
			get { 
				if( m_curTime == null){
					return s_curTime;
				}
				return m_curTime; 
			}
			set { 
				if( value != m_curTime){
					m_curTime = value;
					NotifyPropertyChanged("curTime");
				}
			}  
		}
	


		private const string s_deviceID = @"Device ID";
		private string m_deviceID=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='deviceID']/@value")]
		public string deviceID {
			get { 
				if( m_deviceID == null){
					return s_deviceID;
				}
				return m_deviceID; 
			}
			set { 
				if( value != m_deviceID){
					m_deviceID = value;
					NotifyPropertyChanged("deviceID");
				}
			}  
		}
	


		private const string s_firmware = @"Firmware";
		private string m_firmware=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='firmware']/@value")]
		public string firmware {
			get { 
				if( m_firmware == null){
					return s_firmware;
				}
				return m_firmware; 
			}
			set { 
				if( value != m_firmware){
					m_firmware = value;
					NotifyPropertyChanged("firmware");
				}
			}  
		}
	


		private const string s_hardware = @"Hardware";
		private string m_hardware=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='hardware']/@value")]
		public string hardware {
			get { 
				if( m_hardware == null){
					return s_hardware;
				}
				return m_hardware; 
			}
			set { 
				if( value != m_hardware){
					m_hardware = value;
					NotifyPropertyChanged("hardware");
				}
			}  
		}
	


		private const string s_version = @"ONVIF version";
		private string m_version=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='version']/@value")]
		public string version {
			get { 
				if( m_version == null){
					return s_version;
				}
				return m_version; 
			}
			set { 
				if( value != m_version){
					m_version = value;
					NotifyPropertyChanged("version");
				}
			}  
		}
	


		private const string s_ipAddress = @"IP address";
		private string m_ipAddress=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ipAddress']/@value")]
		public string ipAddress {
			get { 
				if( m_ipAddress == null){
					return s_ipAddress;
				}
				return m_ipAddress; 
			}
			set { 
				if( value != m_ipAddress){
					m_ipAddress = value;
					NotifyPropertyChanged("ipAddress");
				}
			}  
		}
	


		private const string s_macAddress = @"MAC address";
		private string m_macAddress=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='macAddress']/@value")]
		public string macAddress {
			get { 
				if( m_macAddress == null){
					return s_macAddress;
				}
				return m_macAddress; 
			}
			set { 
				if( value != m_macAddress){
					m_macAddress = value;
					NotifyPropertyChanged("macAddress");
				}
			}  
		}
	


		private const string s_manufacturer = @"Manufacturer";
		private string m_manufacturer=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='manufacturer']/@value")]
		public string manufacturer {
			get { 
				if( m_manufacturer == null){
					return s_manufacturer;
				}
				return m_manufacturer; 
			}
			set { 
				if( value != m_manufacturer){
					m_manufacturer = value;
					NotifyPropertyChanged("manufacturer");
				}
			}  
		}
	


		private const string s_model = @"Model";
		private string m_model=null;
		[XPath(@"/localized-strings/module[@name='PropertyIdentificationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='model']/@value")]
		public string model {
			get { 
				if( m_model == null){
					return s_model;
				}
				return m_model; 
			}
			set { 
				if( value != m_model){
					m_model = value;
					NotifyPropertyChanged("model");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyTimeZoneStrings: LocalizedStringsBase<PropertyTimeZoneStrings>{
		


		private const string s_title = @"Time settings";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_currentTime = @"Current time";
		private string m_currentTime=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='currentTime']/@value")]
		public string currentTime {
			get { 
				if( m_currentTime == null){
					return s_currentTime;
				}
				return m_currentTime; 
			}
			set { 
				if( value != m_currentTime){
					m_currentTime = value;
					NotifyPropertyChanged("currentTime");
				}
			}  
		}
	


		private const string s_timeZone = @"Time zone:";
		private string m_timeZone=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='timeZone']/@value")]
		public string timeZone {
			get { 
				if( m_timeZone == null){
					return s_timeZone;
				}
				return m_timeZone; 
			}
			set { 
				if( value != m_timeZone){
					m_timeZone = value;
					NotifyPropertyChanged("timeZone");
				}
			}  
		}
	


		private const string s_timeSettings = @"Time settings:";
		private string m_timeSettings=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='timeSettings']/@value")]
		public string timeSettings {
			get { 
				if( m_timeSettings == null){
					return s_timeSettings;
				}
				return m_timeSettings; 
			}
			set { 
				if( value != m_timeSettings){
					m_timeSettings = value;
					NotifyPropertyChanged("timeSettings");
				}
			}  
		}
	


		private const string s_autoAdjustString = @"Automatically adjust for daylight saving time changes.";
		private string m_autoAdjustString=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='autoAdjustString']/@value")]
		public string autoAdjustString {
			get { 
				if( m_autoAdjustString == null){
					return s_autoAdjustString;
				}
				return m_autoAdjustString; 
			}
			set { 
				if( value != m_autoAdjustString){
					m_autoAdjustString = value;
					NotifyPropertyChanged("autoAdjustString");
				}
			}  
		}
	


		private const string s_synchronizeWithComp = @"Synchronize with computer time";
		private string m_synchronizeWithComp=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='synchronizeWithComp']/@value")]
		public string synchronizeWithComp {
			get { 
				if( m_synchronizeWithComp == null){
					return s_synchronizeWithComp;
				}
				return m_synchronizeWithComp; 
			}
			set { 
				if( value != m_synchronizeWithComp){
					m_synchronizeWithComp = value;
					NotifyPropertyChanged("synchronizeWithComp");
				}
			}  
		}
	


		private const string s_date = @"Date:";
		private string m_date=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='date']/@value")]
		public string date {
			get { 
				if( m_date == null){
					return s_date;
				}
				return m_date; 
			}
			set { 
				if( value != m_date){
					m_date = value;
					NotifyPropertyChanged("date");
				}
			}  
		}
	


		private const string s_time = @"Time:";
		private string m_time=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='time']/@value")]
		public string time {
			get { 
				if( m_time == null){
					return s_time;
				}
				return m_time; 
			}
			set { 
				if( value != m_time){
					m_time = value;
					NotifyPropertyChanged("time");
				}
			}  
		}
	


		private const string s_synchronizeWithNtp = @"Synchronize with NTP server";
		private string m_synchronizeWithNtp=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='synchronizeWithNtp']/@value")]
		public string synchronizeWithNtp {
			get { 
				if( m_synchronizeWithNtp == null){
					return s_synchronizeWithNtp;
				}
				return m_synchronizeWithNtp; 
			}
			set { 
				if( value != m_synchronizeWithNtp){
					m_synchronizeWithNtp = value;
					NotifyPropertyChanged("synchronizeWithNtp");
				}
			}  
		}
	


		private const string s_NTPserver = @"NTP server:";
		private string m_NTPserver=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='NTPserver']/@value")]
		public string NTPserver {
			get { 
				if( m_NTPserver == null){
					return s_NTPserver;
				}
				return m_NTPserver; 
			}
			set { 
				if( value != m_NTPserver){
					m_NTPserver = value;
					NotifyPropertyChanged("NTPserver");
				}
			}  
		}
	


		private const string s_manually = @"Set manually";
		private string m_manually=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='manually']/@value")]
		public string manually {
			get { 
				if( m_manually == null){
					return s_manually;
				}
				return m_manually; 
			}
			set { 
				if( value != m_manually){
					m_manually = value;
					NotifyPropertyChanged("manually");
				}
			}  
		}
	


		private const string s_timeMode = @"Time mode:";
		private string m_timeMode=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='timeMode']/@value")]
		public string timeMode {
			get { 
				if( m_timeMode == null){
					return s_timeMode;
				}
				return m_timeMode; 
			}
			set { 
				if( value != m_timeMode){
					m_timeMode = value;
					NotifyPropertyChanged("timeMode");
				}
			}  
		}
	


		private const string s_ntpServerSetupTitle = @"NTP server setup";
		private string m_ntpServerSetupTitle=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ntpServerSetupTitle']/@value")]
		public string ntpServerSetupTitle {
			get { 
				if( m_ntpServerSetupTitle == null){
					return s_ntpServerSetupTitle;
				}
				return m_ntpServerSetupTitle; 
			}
			set { 
				if( value != m_ntpServerSetupTitle){
					m_ntpServerSetupTitle = value;
					NotifyPropertyChanged("ntpServerSetupTitle");
				}
			}  
		}
	


		private const string s_ntpServerSetupSet = @"Set";
		private string m_ntpServerSetupSet=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ntpServerSetupSet']/@value")]
		public string ntpServerSetupSet {
			get { 
				if( m_ntpServerSetupSet == null){
					return s_ntpServerSetupSet;
				}
				return m_ntpServerSetupSet; 
			}
			set { 
				if( value != m_ntpServerSetupSet){
					m_ntpServerSetupSet = value;
					NotifyPropertyChanged("ntpServerSetupSet");
				}
			}  
		}
	


		private const string s_warning = @"Warning: the time zone of the device is not the same as the time zone of the PC";
		private string m_warning=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='warning']/@value")]
		public string warning {
			get { 
				if( m_warning == null){
					return s_warning;
				}
				return m_warning; 
			}
			set { 
				if( value != m_warning){
					m_warning = value;
					NotifyPropertyChanged("warning");
				}
			}  
		}
	


		private const string s_ntpSetupInfo = @"Please go to Network settings link to set up NTP servers";
		private string m_ntpSetupInfo=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ntpSetupInfo']/@value")]
		public string ntpSetupInfo {
			get { 
				if( m_ntpSetupInfo == null){
					return s_ntpSetupInfo;
				}
				return m_ntpSetupInfo; 
			}
			set { 
				if( value != m_ntpSetupInfo){
					m_ntpSetupInfo = value;
					NotifyPropertyChanged("ntpSetupInfo");
				}
			}  
		}
	


		private const string s_fromDHCP = @"From DHCP";
		private string m_fromDHCP=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='fromDHCP']/@value")]
		public string fromDHCP {
			get { 
				if( m_fromDHCP == null){
					return s_fromDHCP;
				}
				return m_fromDHCP; 
			}
			set { 
				if( value != m_fromDHCP){
					m_fromDHCP = value;
					NotifyPropertyChanged("fromDHCP");
				}
			}  
		}
	


		private const string s_newDateTime = @"New time:";
		private string m_newDateTime=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='newDateTime']/@value")]
		public string newDateTime {
			get { 
				if( m_newDateTime == null){
					return s_newDateTime;
				}
				return m_newDateTime; 
			}
			set { 
				if( value != m_newDateTime){
					m_newDateTime = value;
					NotifyPropertyChanged("newDateTime");
				}
			}  
		}
	


		private const string s_applySuccess = @"Changes have been applied successfully. Please notice that it may affect security aspects and device will be inaccessible in current session.";
		private string m_applySuccess=null;
		[XPath(@"/localized-strings/module[@name='PropertyTimeZoneStrings' and @namespace='odm.ui.controls']/descendant::string[@name='applySuccess']/@value")]
		public string applySuccess {
			get { 
				if( m_applySuccess == null){
					return s_applySuccess;
				}
				return m_applySuccess; 
			}
			set { 
				if( value != m_applySuccess){
					m_applySuccess = value;
					NotifyPropertyChanged("applySuccess");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyNetworkSettingsStrings: LocalizedStringsBase<PropertyNetworkSettingsStrings>{
		


		private const string s_title = @"Network settings";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_dhcp = @"DHCP";
		private string m_dhcp=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='dhcp']/@value")]
		public string dhcp {
			get { 
				if( m_dhcp == null){
					return s_dhcp;
				}
				return m_dhcp; 
			}
			set { 
				if( value != m_dhcp){
					m_dhcp = value;
					NotifyPropertyChanged("dhcp");
				}
			}  
		}
	


		private const string s_ipAddr = @"Device IP address ";
		private string m_ipAddr=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ipAddr']/@value")]
		public string ipAddr {
			get { 
				if( m_ipAddr == null){
					return s_ipAddr;
				}
				return m_ipAddr; 
			}
			set { 
				if( value != m_ipAddr){
					m_ipAddr = value;
					NotifyPropertyChanged("ipAddr");
				}
			}  
		}
	


		private const string s_subnetMask = @"Subnet mask";
		private string m_subnetMask=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='subnetMask']/@value")]
		public string subnetMask {
			get { 
				if( m_subnetMask == null){
					return s_subnetMask;
				}
				return m_subnetMask; 
			}
			set { 
				if( value != m_subnetMask){
					m_subnetMask = value;
					NotifyPropertyChanged("subnetMask");
				}
			}  
		}
	


		private const string s_gateAddr = @"Gateway address";
		private string m_gateAddr=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='gateAddr']/@value")]
		public string gateAddr {
			get { 
				if( m_gateAddr == null){
					return s_gateAddr;
				}
				return m_gateAddr; 
			}
			set { 
				if( value != m_gateAddr){
					m_gateAddr = value;
					NotifyPropertyChanged("gateAddr");
				}
			}  
		}
	


		private const string s_dnsAddr = @"DNS address";
		private string m_dnsAddr=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='dnsAddr']/@value")]
		public string dnsAddr {
			get { 
				if( m_dnsAddr == null){
					return s_dnsAddr;
				}
				return m_dnsAddr; 
			}
			set { 
				if( value != m_dnsAddr){
					m_dnsAddr = value;
					NotifyPropertyChanged("dnsAddr");
				}
			}  
		}
	


		private const string s_ntpAddr = @"NTP address";
		private string m_ntpAddr=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ntpAddr']/@value")]
		public string ntpAddr {
			get { 
				if( m_ntpAddr == null){
					return s_ntpAddr;
				}
				return m_ntpAddr; 
			}
			set { 
				if( value != m_ntpAddr){
					m_ntpAddr = value;
					NotifyPropertyChanged("ntpAddr");
				}
			}  
		}
	


		private const string s_obtainNtp = @"Obtain NTP from DHCP";
		private string m_obtainNtp=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='obtainNtp']/@value")]
		public string obtainNtp {
			get { 
				if( m_obtainNtp == null){
					return s_obtainNtp;
				}
				return m_obtainNtp; 
			}
			set { 
				if( value != m_obtainNtp){
					m_obtainNtp = value;
					NotifyPropertyChanged("obtainNtp");
				}
			}  
		}
	


		private const string s_obtainDns = @"Obtain DNS from DHCP";
		private string m_obtainDns=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='obtainDns']/@value")]
		public string obtainDns {
			get { 
				if( m_obtainDns == null){
					return s_obtainDns;
				}
				return m_obtainDns; 
			}
			set { 
				if( value != m_obtainDns){
					m_obtainDns = value;
					NotifyPropertyChanged("obtainDns");
				}
			}  
		}
	


		private const string s_macAddr = @"MAC address";
		private string m_macAddr=null;
		[XPath(@"/localized-strings/module[@name='PropertyNetworkSettingsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='macAddr']/@value")]
		public string macAddr {
			get { 
				if( m_macAddr == null){
					return s_macAddr;
				}
				return m_macAddr; 
			}
			set { 
				if( value != m_macAddr){
					m_macAddr = value;
					NotifyPropertyChanged("macAddr");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyDigitalIOStrings: LocalizedStringsBase<PropertyDigitalIOStrings>{
		


		private const string s_outputs = @"Digital outputs (relays)";
		private string m_outputs=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='outputs']/@value")]
		public string outputs {
			get { 
				if( m_outputs == null){
					return s_outputs;
				}
				return m_outputs; 
			}
			set { 
				if( value != m_outputs){
					m_outputs = value;
					NotifyPropertyChanged("outputs");
				}
			}  
		}
	


		private const string s_relayOptions = @"Relay options:";
		private string m_relayOptions=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='relayOptions']/@value")]
		public string relayOptions {
			get { 
				if( m_relayOptions == null){
					return s_relayOptions;
				}
				return m_relayOptions; 
			}
			set { 
				if( value != m_relayOptions){
					m_relayOptions = value;
					NotifyPropertyChanged("relayOptions");
				}
			}  
		}
	


		private const string s_relayState = @"Relay state:";
		private string m_relayState=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='relayState']/@value")]
		public string relayState {
			get { 
				if( m_relayState == null){
					return s_relayState;
				}
				return m_relayState; 
			}
			set { 
				if( value != m_relayState){
					m_relayState = value;
					NotifyPropertyChanged("relayState");
				}
			}  
		}
	


		private const string s_relayToken = @"Relay token";
		private string m_relayToken=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='relayToken']/@value")]
		public string relayToken {
			get { 
				if( m_relayToken == null){
					return s_relayToken;
				}
				return m_relayToken; 
			}
			set { 
				if( value != m_relayToken){
					m_relayToken = value;
					NotifyPropertyChanged("relayToken");
				}
			}  
		}
	


		private const string s_relayMode = @"Relay mode";
		private string m_relayMode=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='relayMode']/@value")]
		public string relayMode {
			get { 
				if( m_relayMode == null){
					return s_relayMode;
				}
				return m_relayMode; 
			}
			set { 
				if( value != m_relayMode){
					m_relayMode = value;
					NotifyPropertyChanged("relayMode");
				}
			}  
		}
	


		private const string s_relayIdleState = @"Relay idle state";
		private string m_relayIdleState=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='relayIdleState']/@value")]
		public string relayIdleState {
			get { 
				if( m_relayIdleState == null){
					return s_relayIdleState;
				}
				return m_relayIdleState; 
			}
			set { 
				if( value != m_relayIdleState){
					m_relayIdleState = value;
					NotifyPropertyChanged("relayIdleState");
				}
			}  
		}
	


		private const string s_delayTime = @"Delay time";
		private string m_delayTime=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='delayTime']/@value")]
		public string delayTime {
			get { 
				if( m_delayTime == null){
					return s_delayTime;
				}
				return m_delayTime; 
			}
			set { 
				if( value != m_delayTime){
					m_delayTime = value;
					NotifyPropertyChanged("delayTime");
				}
			}  
		}
	


		private const string s_btnSet = @"Set";
		private string m_btnSet=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='btnSet']/@value")]
		public string btnSet {
			get { 
				if( m_btnSet == null){
					return s_btnSet;
				}
				return m_btnSet; 
			}
			set { 
				if( value != m_btnSet){
					m_btnSet = value;
					NotifyPropertyChanged("btnSet");
				}
			}  
		}
	


		private const string s_btnActivate = @"Activate";
		private string m_btnActivate=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='btnActivate']/@value")]
		public string btnActivate {
			get { 
				if( m_btnActivate == null){
					return s_btnActivate;
				}
				return m_btnActivate; 
			}
			set { 
				if( value != m_btnActivate){
					m_btnActivate = value;
					NotifyPropertyChanged("btnActivate");
				}
			}  
		}
	


		private const string s_btnDeactivate = @"Deactivate";
		private string m_btnDeactivate=null;
		[XPath(@"/localized-strings/module[@name='PropertyDigitalIOStrings' and @namespace='odm.ui.controls']/descendant::string[@name='btnDeactivate']/@value")]
		public string btnDeactivate {
			get { 
				if( m_btnDeactivate == null){
					return s_btnDeactivate;
				}
				return m_btnDeactivate; 
			}
			set { 
				if( value != m_btnDeactivate){
					m_btnDeactivate = value;
					NotifyPropertyChanged("btnDeactivate");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class CommonEventsStrings: LocalizedStringsBase<CommonEventsStrings>{
		


		private const string s_title = @"Common events";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='CommonEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_ruleID = @"Rule ID";
		private string m_ruleID=null;
		[XPath(@"/localized-strings/module[@name='CommonEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ruleID']/@value")]
		public string ruleID {
			get { 
				if( m_ruleID == null){
					return s_ruleID;
				}
				return m_ruleID; 
			}
			set { 
				if( value != m_ruleID){
					m_ruleID = value;
					NotifyPropertyChanged("ruleID");
				}
			}  
		}
	


		private const string s_eventID = @"Event ID";
		private string m_eventID=null;
		[XPath(@"/localized-strings/module[@name='CommonEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='eventID']/@value")]
		public string eventID {
			get { 
				if( m_eventID == null){
					return s_eventID;
				}
				return m_eventID; 
			}
			set { 
				if( value != m_eventID){
					m_eventID = value;
					NotifyPropertyChanged("eventID");
				}
			}  
		}
	


		private const string s_dateTime = @"Date/Time";
		private string m_dateTime=null;
		[XPath(@"/localized-strings/module[@name='CommonEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='dateTime']/@value")]
		public string dateTime {
			get { 
				if( m_dateTime == null){
					return s_dateTime;
				}
				return m_dateTime; 
			}
			set { 
				if( value != m_dateTime){
					m_dateTime = value;
					NotifyPropertyChanged("dateTime");
				}
			}  
		}
	


		private const string s_type = @"Type";
		private string m_type=null;
		[XPath(@"/localized-strings/module[@name='CommonEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='type']/@value")]
		public string type {
			get { 
				if( m_type == null){
					return s_type;
				}
				return m_type; 
			}
			set { 
				if( value != m_type){
					m_type = value;
					NotifyPropertyChanged("type");
				}
			}  
		}
	


		private const string s_details = @"Details";
		private string m_details=null;
		[XPath(@"/localized-strings/module[@name='CommonEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='details']/@value")]
		public string details {
			get { 
				if( m_details == null){
					return s_details;
				}
				return m_details; 
			}
			set { 
				if( value != m_details){
					m_details = value;
					NotifyPropertyChanged("details");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.activities {
	public partial class ActionEngineStrings: LocalizedStringsBase<ActionEngineStrings>{
		


		private const string s_actionToken = @"Token";
		private string m_actionToken=null;
		[XPath(@"/localized-strings/module[@name='ActionEngineStrings' and @namespace='odm.ui.activities']/descendant::string[@name='actionToken']/@value")]
		public string actionToken {
			get { 
				if( m_actionToken == null){
					return s_actionToken;
				}
				return m_actionToken; 
			}
			set { 
				if( value != m_actionToken){
					m_actionToken = value;
					NotifyPropertyChanged("actionToken");
				}
			}  
		}
	


		private const string s_actionName = @"Name";
		private string m_actionName=null;
		[XPath(@"/localized-strings/module[@name='ActionEngineStrings' and @namespace='odm.ui.activities']/descendant::string[@name='actionName']/@value")]
		public string actionName {
			get { 
				if( m_actionName == null){
					return s_actionName;
				}
				return m_actionName; 
			}
			set { 
				if( value != m_actionName){
					m_actionName = value;
					NotifyPropertyChanged("actionName");
				}
			}  
		}
	


		private const string s_actionType = @"Type";
		private string m_actionType=null;
		[XPath(@"/localized-strings/module[@name='ActionEngineStrings' and @namespace='odm.ui.activities']/descendant::string[@name='actionType']/@value")]
		public string actionType {
			get { 
				if( m_actionType == null){
					return s_actionType;
				}
				return m_actionType; 
			}
			set { 
				if( value != m_actionType){
					m_actionType = value;
					NotifyPropertyChanged("actionType");
				}
			}  
		}
	


		private const string s_actionSimpleItems = @"Simple Parameters";
		private string m_actionSimpleItems=null;
		[XPath(@"/localized-strings/module[@name='ActionEngineStrings' and @namespace='odm.ui.activities']/descendant::string[@name='actionSimpleItems']/@value")]
		public string actionSimpleItems {
			get { 
				if( m_actionSimpleItems == null){
					return s_actionSimpleItems;
				}
				return m_actionSimpleItems; 
			}
			set { 
				if( value != m_actionSimpleItems){
					m_actionSimpleItems = value;
					NotifyPropertyChanged("actionSimpleItems");
				}
			}  
		}
	


		private const string s_triggerToken = @"Token";
		private string m_triggerToken=null;
		[XPath(@"/localized-strings/module[@name='ActionEngineStrings' and @namespace='odm.ui.activities']/descendant::string[@name='triggerToken']/@value")]
		public string triggerToken {
			get { 
				if( m_triggerToken == null){
					return s_triggerToken;
				}
				return m_triggerToken; 
			}
			set { 
				if( value != m_triggerToken){
					m_triggerToken = value;
					NotifyPropertyChanged("triggerToken");
				}
			}  
		}
	


		private const string s_triggerTopicExpression = @"Topic filter";
		private string m_triggerTopicExpression=null;
		[XPath(@"/localized-strings/module[@name='ActionEngineStrings' and @namespace='odm.ui.activities']/descendant::string[@name='triggerTopicExpression']/@value")]
		public string triggerTopicExpression {
			get { 
				if( m_triggerTopicExpression == null){
					return s_triggerTopicExpression;
				}
				return m_triggerTopicExpression; 
			}
			set { 
				if( value != m_triggerTopicExpression){
					m_triggerTopicExpression = value;
					NotifyPropertyChanged("triggerTopicExpression");
				}
			}  
		}
	


		private const string s_addTriggerTopicExprPart = @"Add";
		private string m_addTriggerTopicExprPart=null;
		[XPath(@"/localized-strings/module[@name='ActionEngineStrings' and @namespace='odm.ui.activities']/descendant::string[@name='addTriggerTopicExprPart']/@value")]
		public string addTriggerTopicExprPart {
			get { 
				if( m_addTriggerTopicExprPart == null){
					return s_addTriggerTopicExprPart;
				}
				return m_addTriggerTopicExprPart; 
			}
			set { 
				if( value != m_addTriggerTopicExprPart){
					m_addTriggerTopicExprPart = value;
					NotifyPropertyChanged("addTriggerTopicExprPart");
				}
			}  
		}
	


		private const string s_addTriggerTopicExprPartTooltip = @"Add an alternative topic";
		private string m_addTriggerTopicExprPartTooltip=null;
		[XPath(@"/localized-strings/module[@name='ActionEngineStrings' and @namespace='odm.ui.activities']/descendant::string[@name='addTriggerTopicExprPartTooltip']/@value")]
		public string addTriggerTopicExprPartTooltip {
			get { 
				if( m_addTriggerTopicExprPartTooltip == null){
					return s_addTriggerTopicExprPartTooltip;
				}
				return m_addTriggerTopicExprPartTooltip; 
			}
			set { 
				if( value != m_addTriggerTopicExprPartTooltip){
					m_addTriggerTopicExprPartTooltip = value;
					NotifyPropertyChanged("addTriggerTopicExprPartTooltip");
				}
			}  
		}
	


		private const string s_triggerContentExpression = @"Content filter";
		private string m_triggerContentExpression=null;
		[XPath(@"/localized-strings/module[@name='ActionEngineStrings' and @namespace='odm.ui.activities']/descendant::string[@name='triggerContentExpression']/@value")]
		public string triggerContentExpression {
			get { 
				if( m_triggerContentExpression == null){
					return s_triggerContentExpression;
				}
				return m_triggerContentExpression; 
			}
			set { 
				if( value != m_triggerContentExpression){
					m_triggerContentExpression = value;
					NotifyPropertyChanged("triggerContentExpression");
				}
			}  
		}
	


		private const string s_triggerAvailableActions = @"Available Actions";
		private string m_triggerAvailableActions=null;
		[XPath(@"/localized-strings/module[@name='ActionEngineStrings' and @namespace='odm.ui.activities']/descendant::string[@name='triggerAvailableActions']/@value")]
		public string triggerAvailableActions {
			get { 
				if( m_triggerAvailableActions == null){
					return s_triggerAvailableActions;
				}
				return m_triggerAvailableActions; 
			}
			set { 
				if( value != m_triggerAvailableActions){
					m_triggerAvailableActions = value;
					NotifyPropertyChanged("triggerAvailableActions");
				}
			}  
		}
	


		private const string s_triggerIncludedActions = @"Scheduled Actions";
		private string m_triggerIncludedActions=null;
		[XPath(@"/localized-strings/module[@name='ActionEngineStrings' and @namespace='odm.ui.activities']/descendant::string[@name='triggerIncludedActions']/@value")]
		public string triggerIncludedActions {
			get { 
				if( m_triggerIncludedActions == null){
					return s_triggerIncludedActions;
				}
				return m_triggerIncludedActions; 
			}
			set { 
				if( value != m_triggerIncludedActions){
					m_triggerIncludedActions = value;
					NotifyPropertyChanged("triggerIncludedActions");
				}
			}  
		}
	


		private const string s_triggerAddAction = @"Add >";
		private string m_triggerAddAction=null;
		[XPath(@"/localized-strings/module[@name='ActionEngineStrings' and @namespace='odm.ui.activities']/descendant::string[@name='triggerAddAction']/@value")]
		public string triggerAddAction {
			get { 
				if( m_triggerAddAction == null){
					return s_triggerAddAction;
				}
				return m_triggerAddAction; 
			}
			set { 
				if( value != m_triggerAddAction){
					m_triggerAddAction = value;
					NotifyPropertyChanged("triggerAddAction");
				}
			}  
		}
	


		private const string s_triggerRemoveAction = @"< Del";
		private string m_triggerRemoveAction=null;
		[XPath(@"/localized-strings/module[@name='ActionEngineStrings' and @namespace='odm.ui.activities']/descendant::string[@name='triggerRemoveAction']/@value")]
		public string triggerRemoveAction {
			get { 
				if( m_triggerRemoveAction == null){
					return s_triggerRemoveAction;
				}
				return m_triggerRemoveAction; 
			}
			set { 
				if( value != m_triggerRemoveAction){
					m_triggerRemoveAction = value;
					NotifyPropertyChanged("triggerRemoveAction");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class AnalyticsStrings: LocalizedStringsBase<AnalyticsStrings>{
		


		private const string s_setNameCaption = @"Set name:";
		private string m_setNameCaption=null;
		[XPath(@"/localized-strings/module[@name='AnalyticsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='setNameCaption']/@value")]
		public string setNameCaption {
			get { 
				if( m_setNameCaption == null){
					return s_setNameCaption;
				}
				return m_setNameCaption; 
			}
			set { 
				if( value != m_setNameCaption){
					m_setNameCaption = value;
					NotifyPropertyChanged("setNameCaption");
				}
			}  
		}
	


		private const string s_setTypeCaption = @"Set type:";
		private string m_setTypeCaption=null;
		[XPath(@"/localized-strings/module[@name='AnalyticsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='setTypeCaption']/@value")]
		public string setTypeCaption {
			get { 
				if( m_setTypeCaption == null){
					return s_setTypeCaption;
				}
				return m_setTypeCaption; 
			}
			set { 
				if( value != m_setTypeCaption){
					m_setTypeCaption = value;
					NotifyPropertyChanged("setTypeCaption");
				}
			}  
		}
	


		private const string s_setNameType = @"Set analytics configuration data";
		private string m_setNameType=null;
		[XPath(@"/localized-strings/module[@name='AnalyticsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='setNameType']/@value")]
		public string setNameType {
			get { 
				if( m_setNameType == null){
					return s_setNameType;
				}
				return m_setNameType; 
			}
			set { 
				if( value != m_setNameType){
					m_setNameType = value;
					NotifyPropertyChanged("setNameType");
				}
			}  
		}
	


		private const string s_modules = @"Available modules :";
		private string m_modules=null;
		[XPath(@"/localized-strings/module[@name='AnalyticsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='modules']/@value")]
		public string modules {
			get { 
				if( m_modules == null){
					return s_modules;
				}
				return m_modules; 
			}
			set { 
				if( value != m_modules){
					m_modules = value;
					NotifyPropertyChanged("modules");
				}
			}  
		}
	


		private const string s_rules = @"Available rules :";
		private string m_rules=null;
		[XPath(@"/localized-strings/module[@name='AnalyticsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rules']/@value")]
		public string rules {
			get { 
				if( m_rules == null){
					return s_rules;
				}
				return m_rules; 
			}
			set { 
				if( value != m_rules){
					m_rules = value;
					NotifyPropertyChanged("rules");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyProfileEditorStrings: LocalizedStringsBase<PropertyProfileEditorStrings>{
		


		private const string s_title = @"Profiles";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyProfileEditorStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_profdetails = @"Profile details";
		private string m_profdetails=null;
		[XPath(@"/localized-strings/module[@name='PropertyProfileEditorStrings' and @namespace='odm.ui.controls']/descendant::string[@name='profdetails']/@value")]
		public string profdetails {
			get { 
				if( m_profdetails == null){
					return s_profdetails;
				}
				return m_profdetails; 
			}
			set { 
				if( value != m_profdetails){
					m_profdetails = value;
					NotifyPropertyChanged("profdetails");
				}
			}  
		}
	


		private const string s_newProf = @"New";
		private string m_newProf=null;
		[XPath(@"/localized-strings/module[@name='PropertyProfileEditorStrings' and @namespace='odm.ui.controls']/descendant::string[@name='newProf']/@value")]
		public string newProf {
			get { 
				if( m_newProf == null){
					return s_newProf;
				}
				return m_newProf; 
			}
			set { 
				if( value != m_newProf){
					m_newProf = value;
					NotifyPropertyChanged("newProf");
				}
			}  
		}
	


		private const string s_rename = @"Rename";
		private string m_rename=null;
		[XPath(@"/localized-strings/module[@name='PropertyProfileEditorStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rename']/@value")]
		public string rename {
			get { 
				if( m_rename == null){
					return s_rename;
				}
				return m_rename; 
			}
			set { 
				if( value != m_rename){
					m_rename = value;
					NotifyPropertyChanged("rename");
				}
			}  
		}
	


		private const string s_delete = @"Delete";
		private string m_delete=null;
		[XPath(@"/localized-strings/module[@name='PropertyProfileEditorStrings' and @namespace='odm.ui.controls']/descendant::string[@name='delete']/@value")]
		public string delete {
			get { 
				if( m_delete == null){
					return s_delete;
				}
				return m_delete; 
			}
			set { 
				if( value != m_delete){
					m_delete = value;
					NotifyPropertyChanged("delete");
				}
			}  
		}
	


		private const string s_select = @"Apply";
		private string m_select=null;
		[XPath(@"/localized-strings/module[@name='PropertyProfileEditorStrings' and @namespace='odm.ui.controls']/descendant::string[@name='select']/@value")]
		public string select {
			get { 
				if( m_select == null){
					return s_select;
				}
				return m_select; 
			}
			set { 
				if( value != m_select){
					m_select = value;
					NotifyPropertyChanged("select");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyModulesStrings: LocalizedStringsBase<PropertyModulesStrings>{
		
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyPTZStrings: LocalizedStringsBase<PropertyPTZStrings>{
		


		private const string s_presets = @"Presets:";
		private string m_presets=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='presets']/@value")]
		public string presets {
			get { 
				if( m_presets == null){
					return s_presets;
				}
				return m_presets; 
			}
			set { 
				if( value != m_presets){
					m_presets = value;
					NotifyPropertyChanged("presets");
				}
			}  
		}
	


		private const string s_settings = @"Settings:";
		private string m_settings=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='settings']/@value")]
		public string settings {
			get { 
				if( m_settings == null){
					return s_settings;
				}
				return m_settings; 
			}
			set { 
				if( value != m_settings){
					m_settings = value;
					NotifyPropertyChanged("settings");
				}
			}  
		}
	


		private const string s_quicksets = @"Quick sets:";
		private string m_quicksets=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='quicksets']/@value")]
		public string quicksets {
			get { 
				if( m_quicksets == null){
					return s_quicksets;
				}
				return m_quicksets; 
			}
			set { 
				if( value != m_quicksets){
					m_quicksets = value;
					NotifyPropertyChanged("quicksets");
				}
			}  
		}
	


		private const string s_zoom = @"Relative Zoom:";
		private string m_zoom=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='zoom']/@value")]
		public string zoom {
			get { 
				if( m_zoom == null){
					return s_zoom;
				}
				return m_zoom; 
			}
			set { 
				if( value != m_zoom){
					m_zoom = value;
					NotifyPropertyChanged("zoom");
				}
			}  
		}
	


		private const string s_absoluteZoom = @"Absolute Zoom:";
		private string m_absoluteZoom=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='absoluteZoom']/@value")]
		public string absoluteZoom {
			get { 
				if( m_absoluteZoom == null){
					return s_absoluteZoom;
				}
				return m_absoluteZoom; 
			}
			set { 
				if( value != m_absoluteZoom){
					m_absoluteZoom = value;
					NotifyPropertyChanged("absoluteZoom");
				}
			}  
		}
	


		private const string s_relativemove = @"Relative move:";
		private string m_relativemove=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='relativemove']/@value")]
		public string relativemove {
			get { 
				if( m_relativemove == null){
					return s_relativemove;
				}
				return m_relativemove; 
			}
			set { 
				if( value != m_relativemove){
					m_relativemove = value;
					NotifyPropertyChanged("relativemove");
				}
			}  
		}
	


		private const string s_absolute = @"Absolute move:";
		private string m_absolute=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='absolute']/@value")]
		public string absolute {
			get { 
				if( m_absolute == null){
					return s_absolute;
				}
				return m_absolute; 
			}
			set { 
				if( value != m_absolute){
					m_absolute = value;
					NotifyPropertyChanged("absolute");
				}
			}  
		}
	


		private const string s_select = @"Select";
		private string m_select=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='select']/@value")]
		public string select {
			get { 
				if( m_select == null){
					return s_select;
				}
				return m_select; 
			}
			set { 
				if( value != m_select){
					m_select = value;
					NotifyPropertyChanged("select");
				}
			}  
		}
	


		private const string s_delete = @"Delete";
		private string m_delete=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='delete']/@value")]
		public string delete {
			get { 
				if( m_delete == null){
					return s_delete;
				}
				return m_delete; 
			}
			set { 
				if( value != m_delete){
					m_delete = value;
					NotifyPropertyChanged("delete");
				}
			}  
		}
	


		private const string s_apply = @"Apply";
		private string m_apply=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='apply']/@value")]
		public string apply {
			get { 
				if( m_apply == null){
					return s_apply;
				}
				return m_apply; 
			}
			set { 
				if( value != m_apply){
					m_apply = value;
					NotifyPropertyChanged("apply");
				}
			}  
		}
	


		private const string s_go_to = @"Goto";
		private string m_go_to=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='go_to']/@value")]
		public string go_to {
			get { 
				if( m_go_to == null){
					return s_go_to;
				}
				return m_go_to; 
			}
			set { 
				if( value != m_go_to){
					m_go_to = value;
					NotifyPropertyChanged("go_to");
				}
			}  
		}
	


		private const string s_sethome = @"Set Home position";
		private string m_sethome=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sethome']/@value")]
		public string sethome {
			get { 
				if( m_sethome == null){
					return s_sethome;
				}
				return m_sethome; 
			}
			set { 
				if( value != m_sethome){
					m_sethome = value;
					NotifyPropertyChanged("sethome");
				}
			}  
		}
	


		private const string s_setpreset = @"Set Preset";
		private string m_setpreset=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='setpreset']/@value")]
		public string setpreset {
			get { 
				if( m_setpreset == null){
					return s_setpreset;
				}
				return m_setpreset; 
			}
			set { 
				if( value != m_setpreset){
					m_setpreset = value;
					NotifyPropertyChanged("setpreset");
				}
			}  
		}
	


		private const string s_panspeed = @"Pan speed:";
		private string m_panspeed=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='panspeed']/@value")]
		public string panspeed {
			get { 
				if( m_panspeed == null){
					return s_panspeed;
				}
				return m_panspeed; 
			}
			set { 
				if( value != m_panspeed){
					m_panspeed = value;
					NotifyPropertyChanged("panspeed");
				}
			}  
		}
	


		private const string s_tiltspeed = @"Tilt speed:";
		private string m_tiltspeed=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='tiltspeed']/@value")]
		public string tiltspeed {
			get { 
				if( m_tiltspeed == null){
					return s_tiltspeed;
				}
				return m_tiltspeed; 
			}
			set { 
				if( value != m_tiltspeed){
					m_tiltspeed = value;
					NotifyPropertyChanged("tiltspeed");
				}
			}  
		}
	


		private const string s_zoomspeed = @"Zoom speed:";
		private string m_zoomspeed=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='zoomspeed']/@value")]
		public string zoomspeed {
			get { 
				if( m_zoomspeed == null){
					return s_zoomspeed;
				}
				return m_zoomspeed; 
			}
			set { 
				if( value != m_zoomspeed){
					m_zoomspeed = value;
					NotifyPropertyChanged("zoomspeed");
				}
			}  
		}
	


		private const string s_selectnode = @"Select Node:";
		private string m_selectnode=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='selectnode']/@value")]
		public string selectnode {
			get { 
				if( m_selectnode == null){
					return s_selectnode;
				}
				return m_selectnode; 
			}
			set { 
				if( value != m_selectnode){
					m_selectnode = value;
					NotifyPropertyChanged("selectnode");
				}
			}  
		}
	


		private const string s_setlimits = @"Set up limits:";
		private string m_setlimits=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='setlimits']/@value")]
		public string setlimits {
			get { 
				if( m_setlimits == null){
					return s_setlimits;
				}
				return m_setlimits; 
			}
			set { 
				if( value != m_setlimits){
					m_setlimits = value;
					NotifyPropertyChanged("setlimits");
				}
			}  
		}
	


		private const string s_tiltmin = @"Tilt min:";
		private string m_tiltmin=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='tiltmin']/@value")]
		public string tiltmin {
			get { 
				if( m_tiltmin == null){
					return s_tiltmin;
				}
				return m_tiltmin; 
			}
			set { 
				if( value != m_tiltmin){
					m_tiltmin = value;
					NotifyPropertyChanged("tiltmin");
				}
			}  
		}
	


		private const string s_tiltmax = @"Tilt max:";
		private string m_tiltmax=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='tiltmax']/@value")]
		public string tiltmax {
			get { 
				if( m_tiltmax == null){
					return s_tiltmax;
				}
				return m_tiltmax; 
			}
			set { 
				if( value != m_tiltmax){
					m_tiltmax = value;
					NotifyPropertyChanged("tiltmax");
				}
			}  
		}
	


		private const string s_panmin = @"Pan min:";
		private string m_panmin=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='panmin']/@value")]
		public string panmin {
			get { 
				if( m_panmin == null){
					return s_panmin;
				}
				return m_panmin; 
			}
			set { 
				if( value != m_panmin){
					m_panmin = value;
					NotifyPropertyChanged("panmin");
				}
			}  
		}
	


		private const string s_panmax = @"Pan max:";
		private string m_panmax=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='panmax']/@value")]
		public string panmax {
			get { 
				if( m_panmax == null){
					return s_panmax;
				}
				return m_panmax; 
			}
			set { 
				if( value != m_panmax){
					m_panmax = value;
					NotifyPropertyChanged("panmax");
				}
			}  
		}
	


		private const string s_zoommin = @"Zoom min:";
		private string m_zoommin=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='zoommin']/@value")]
		public string zoommin {
			get { 
				if( m_zoommin == null){
					return s_zoommin;
				}
				return m_zoommin; 
			}
			set { 
				if( value != m_zoommin){
					m_zoommin = value;
					NotifyPropertyChanged("zoommin");
				}
			}  
		}
	


		private const string s_zoommax = @"Zoom max:";
		private string m_zoommax=null;
		[XPath(@"/localized-strings/module[@name='PropertyPTZStrings' and @namespace='odm.ui.controls']/descendant::string[@name='zoommax']/@value")]
		public string zoommax {
			get { 
				if( m_zoommax == null){
					return s_zoommax;
				}
				return m_zoommax; 
			}
			set { 
				if( value != m_zoommax){
					m_zoommax = value;
					NotifyPropertyChanged("zoommax");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyLiveVideoStrings: LocalizedStringsBase<PropertyLiveVideoStrings>{
		


		private const string s_title = @"Live video";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyLiveVideoStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_folder = @"Select";
		private string m_folder=null;
		[XPath(@"/localized-strings/module[@name='PropertyLiveVideoStrings' and @namespace='odm.ui.controls']/descendant::string[@name='folder']/@value")]
		public string folder {
			get { 
				if( m_folder == null){
					return s_folder;
				}
				return m_folder; 
			}
			set { 
				if( value != m_folder){
					m_folder = value;
					NotifyPropertyChanged("folder");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyChannelEventsStrings: LocalizedStringsBase<PropertyChannelEventsStrings>{
		


		private const string s_title = @"Events";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyChannelEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_ruleID = @"Rule ID";
		private string m_ruleID=null;
		[XPath(@"/localized-strings/module[@name='PropertyChannelEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ruleID']/@value")]
		public string ruleID {
			get { 
				if( m_ruleID == null){
					return s_ruleID;
				}
				return m_ruleID; 
			}
			set { 
				if( value != m_ruleID){
					m_ruleID = value;
					NotifyPropertyChanged("ruleID");
				}
			}  
		}
	


		private const string s_eventID = @"Event ID";
		private string m_eventID=null;
		[XPath(@"/localized-strings/module[@name='PropertyChannelEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='eventID']/@value")]
		public string eventID {
			get { 
				if( m_eventID == null){
					return s_eventID;
				}
				return m_eventID; 
			}
			set { 
				if( value != m_eventID){
					m_eventID = value;
					NotifyPropertyChanged("eventID");
				}
			}  
		}
	


		private const string s_dateTime = @"Date/Time";
		private string m_dateTime=null;
		[XPath(@"/localized-strings/module[@name='PropertyChannelEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='dateTime']/@value")]
		public string dateTime {
			get { 
				if( m_dateTime == null){
					return s_dateTime;
				}
				return m_dateTime; 
			}
			set { 
				if( value != m_dateTime){
					m_dateTime = value;
					NotifyPropertyChanged("dateTime");
				}
			}  
		}
	


		private const string s_type = @"Type";
		private string m_type=null;
		[XPath(@"/localized-strings/module[@name='PropertyChannelEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='type']/@value")]
		public string type {
			get { 
				if( m_type == null){
					return s_type;
				}
				return m_type; 
			}
			set { 
				if( value != m_type){
					m_type = value;
					NotifyPropertyChanged("type");
				}
			}  
		}
	


		private const string s_details = @"Details";
		private string m_details=null;
		[XPath(@"/localized-strings/module[@name='PropertyChannelEventsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='details']/@value")]
		public string details {
			get { 
				if( m_details == null){
					return s_details;
				}
				return m_details; 
			}
			set { 
				if( value != m_details){
					m_details = value;
					NotifyPropertyChanged("details");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyDepthCalibrationStrings: LocalizedStringsBase<PropertyDepthCalibrationStrings>{
		


		private const string s_focalLength = @"Focal length, mm";
		private string m_focalLength=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='focalLength']/@value")]
		public string focalLength {
			get { 
				if( m_focalLength == null){
					return s_focalLength;
				}
				return m_focalLength; 
			}
			set { 
				if( value != m_focalLength){
					m_focalLength = value;
					NotifyPropertyChanged("focalLength");
				}
			}  
		}
	


		private const string s_sensorPixel = @"Photosensor pixel size, m*";
		private string m_sensorPixel=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sensorPixel']/@value")]
		public string sensorPixel {
			get { 
				if( m_sensorPixel == null){
					return s_sensorPixel;
				}
				return m_sensorPixel; 
			}
			set { 
				if( value != m_sensorPixel){
					m_sensorPixel = value;
					NotifyPropertyChanged("sensorPixel");
				}
			}  
		}
	


		private const string s_matrixFormat = @"Matrix format";
		private string m_matrixFormat=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='matrixFormat']/@value")]
		public string matrixFormat {
			get { 
				if( m_matrixFormat == null){
					return s_matrixFormat;
				}
				return m_matrixFormat; 
			}
			set { 
				if( value != m_matrixFormat){
					m_matrixFormat = value;
					NotifyPropertyChanged("matrixFormat");
				}
			}  
		}
	


		private const string s_heightMarker = @"Height marker";
		private string m_heightMarker=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='heightMarker']/@value")]
		public string heightMarker {
			get { 
				if( m_heightMarker == null){
					return s_heightMarker;
				}
				return m_heightMarker; 
			}
			set { 
				if( value != m_heightMarker){
					m_heightMarker = value;
					NotifyPropertyChanged("heightMarker");
				}
			}  
		}
	


		private const string s_marker2D = @"2D-marker";
		private string m_marker2D=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='marker2D']/@value")]
		public string marker2D {
			get { 
				if( m_marker2D == null){
					return s_marker2D;
				}
				return m_marker2D; 
			}
			set { 
				if( value != m_marker2D){
					m_marker2D = value;
					NotifyPropertyChanged("marker2D");
				}
			}  
		}
	


		private const string s_physHeight = @"Marker real heigth, cm";
		private string m_physHeight=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='physHeight']/@value")]
		public string physHeight {
			get { 
				if( m_physHeight == null){
					return s_physHeight;
				}
				return m_physHeight; 
			}
			set { 
				if( value != m_physHeight){
					m_physHeight = value;
					NotifyPropertyChanged("physHeight");
				}
			}  
		}
	


		private const string s_physWidth = @"Marker real width, cm";
		private string m_physWidth=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='physWidth']/@value")]
		public string physWidth {
			get { 
				if( m_physWidth == null){
					return s_physWidth;
				}
				return m_physWidth; 
			}
			set { 
				if( value != m_physWidth){
					m_physWidth = value;
					NotifyPropertyChanged("physWidth");
				}
			}  
		}
	


		private const string s_infoMarker1 = @"INFO: proportions of marker #1 are not valid. Please increase its width, or reduce its height.";
		private string m_infoMarker1=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='infoMarker1']/@value")]
		public string infoMarker1 {
			get { 
				if( m_infoMarker1 == null){
					return s_infoMarker1;
				}
				return m_infoMarker1; 
			}
			set { 
				if( value != m_infoMarker1){
					m_infoMarker1 = value;
					NotifyPropertyChanged("infoMarker1");
				}
			}  
		}
	


		private const string s_infoMarker2 = @"INFO: proportions of marker #2 are not valid. Please increase its width, or reduce its height.";
		private string m_infoMarker2=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='infoMarker2']/@value")]
		public string infoMarker2 {
			get { 
				if( m_infoMarker2 == null){
					return s_infoMarker2;
				}
				return m_infoMarker2; 
			}
			set { 
				if( value != m_infoMarker2){
					m_infoMarker2 = value;
					NotifyPropertyChanged("infoMarker2");
				}
			}  
		}
	


		private const string s_infoMarkerWhidth = @"INFO: The width of the lower marker must be greater than the upper marker.";
		private string m_infoMarkerWhidth=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='infoMarkerWhidth']/@value")]
		public string infoMarkerWhidth {
			get { 
				if( m_infoMarkerWhidth == null){
					return s_infoMarkerWhidth;
				}
				return m_infoMarkerWhidth; 
			}
			set { 
				if( value != m_infoMarkerWhidth){
					m_infoMarkerWhidth = value;
					NotifyPropertyChanged("infoMarkerWhidth");
				}
			}  
		}
	


		private const string s_infoDisplacement = @"INFO: The depth of the scene is not enough. Please extend the distance between the upper and the lower markers. The distance must be not less than 1 / 4 of screen.";
		private string m_infoDisplacement=null;
		[XPath(@"/localized-strings/module[@name='PropertyDepthCalibrationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='infoDisplacement']/@value")]
		public string infoDisplacement {
			get { 
				if( m_infoDisplacement == null){
					return s_infoDisplacement;
				}
				return m_infoDisplacement; 
			}
			set { 
				if( value != m_infoDisplacement){
					m_infoDisplacement = value;
					NotifyPropertyChanged("infoDisplacement");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyVideoStreamingStrings: LocalizedStringsBase<PropertyVideoStreamingStrings>{
		


		private const string s_title = @"Video streaming";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_resolution = @"Encoder and resolution(pixels)";
		private string m_resolution=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='resolution']/@value")]
		public string resolution {
			get { 
				if( m_resolution == null){
					return s_resolution;
				}
				return m_resolution; 
			}
			set { 
				if( value != m_resolution){
					m_resolution = value;
					NotifyPropertyChanged("resolution");
				}
			}  
		}
	


		private const string s_frameRate = @"Frame rate, fps";
		private string m_frameRate=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='frameRate']/@value")]
		public string frameRate {
			get { 
				if( m_frameRate == null){
					return s_frameRate;
				}
				return m_frameRate; 
			}
			set { 
				if( value != m_frameRate){
					m_frameRate = value;
					NotifyPropertyChanged("frameRate");
				}
			}  
		}
	


		private const string s_encodingInterval = @"Encoding interval";
		private string m_encodingInterval=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='encodingInterval']/@value")]
		public string encodingInterval {
			get { 
				if( m_encodingInterval == null){
					return s_encodingInterval;
				}
				return m_encodingInterval; 
			}
			set { 
				if( value != m_encodingInterval){
					m_encodingInterval = value;
					NotifyPropertyChanged("encodingInterval");
				}
			}  
		}
	


		private const string s_encoder = @"Encoder";
		private string m_encoder=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='encoder']/@value")]
		public string encoder {
			get { 
				if( m_encoder == null){
					return s_encoder;
				}
				return m_encoder; 
			}
			set { 
				if( value != m_encoder){
					m_encoder = value;
					NotifyPropertyChanged("encoder");
				}
			}  
		}
	


		private const string s_bitrate = @"Bitrate limit, kbps";
		private string m_bitrate=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='bitrate']/@value")]
		public string bitrate {
			get { 
				if( m_bitrate == null){
					return s_bitrate;
				}
				return m_bitrate; 
			}
			set { 
				if( value != m_bitrate){
					m_bitrate = value;
					NotifyPropertyChanged("bitrate");
				}
			}  
		}
	


		private const string s_prioriy = @"Priority";
		private string m_prioriy=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='prioriy']/@value")]
		public string prioriy {
			get { 
				if( m_prioriy == null){
					return s_prioriy;
				}
				return m_prioriy; 
			}
			set { 
				if( value != m_prioriy){
					m_prioriy = value;
					NotifyPropertyChanged("prioriy");
				}
			}  
		}
	


		private const string s_quality = @"Quality";
		private string m_quality=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='quality']/@value")]
		public string quality {
			get { 
				if( m_quality == null){
					return s_quality;
				}
				return m_quality; 
			}
			set { 
				if( value != m_quality){
					m_quality = value;
					NotifyPropertyChanged("quality");
				}
			}  
		}
	


		private const string s_govLength = @"GOV length";
		private string m_govLength=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='govLength']/@value")]
		public string govLength {
			get { 
				if( m_govLength == null){
					return s_govLength;
				}
				return m_govLength; 
			}
			set { 
				if( value != m_govLength){
					m_govLength = value;
					NotifyPropertyChanged("govLength");
				}
			}  
		}
	


		private const string s_metadata = @"Metadata stream On/Off";
		private string m_metadata=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='metadata']/@value")]
		public string metadata {
			get { 
				if( m_metadata == null){
					return s_metadata;
				}
				return m_metadata; 
			}
			set { 
				if( value != m_metadata){
					m_metadata = value;
					NotifyPropertyChanged("metadata");
				}
			}  
		}
	


		private const string s_channelName = @"Channel name";
		private string m_channelName=null;
		[XPath(@"/localized-strings/module[@name='PropertyVideoStreamingStrings' and @namespace='odm.ui.controls']/descendant::string[@name='channelName']/@value")]
		public string channelName {
			get { 
				if( m_channelName == null){
					return s_channelName;
				}
				return m_channelName; 
			}
			set { 
				if( value != m_channelName){
					m_channelName = value;
					NotifyPropertyChanged("channelName");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyTamperingDetectorsStrings: LocalizedStringsBase<PropertyTamperingDetectorsStrings>{
		


		private const string s_cameraRedirected = @"Camera redirected";
		private string m_cameraRedirected=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='cameraRedirected']/@value")]
		public string cameraRedirected {
			get { 
				if( m_cameraRedirected == null){
					return s_cameraRedirected;
				}
				return m_cameraRedirected; 
			}
			set { 
				if( value != m_cameraRedirected){
					m_cameraRedirected = value;
					NotifyPropertyChanged("cameraRedirected");
				}
			}  
		}
	


		private const string s_cameraRedirectedTip = @"To enable this detector you should also enable Antishaker";
		private string m_cameraRedirectedTip=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='cameraRedirectedTip']/@value")]
		public string cameraRedirectedTip {
			get { 
				if( m_cameraRedirectedTip == null){
					return s_cameraRedirectedTip;
				}
				return m_cameraRedirectedTip; 
			}
			set { 
				if( value != m_cameraRedirectedTip){
					m_cameraRedirectedTip = value;
					NotifyPropertyChanged("cameraRedirectedTip");
				}
			}  
		}
	


		private const string s_imageTooDark = @"Image too dark";
		private string m_imageTooDark=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='imageTooDark']/@value")]
		public string imageTooDark {
			get { 
				if( m_imageTooDark == null){
					return s_imageTooDark;
				}
				return m_imageTooDark; 
			}
			set { 
				if( value != m_imageTooDark){
					m_imageTooDark = value;
					NotifyPropertyChanged("imageTooDark");
				}
			}  
		}
	


		private const string s_cameraObstructed = @"Camera obstructed";
		private string m_cameraObstructed=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='cameraObstructed']/@value")]
		public string cameraObstructed {
			get { 
				if( m_cameraObstructed == null){
					return s_cameraObstructed;
				}
				return m_cameraObstructed; 
			}
			set { 
				if( value != m_cameraObstructed){
					m_cameraObstructed = value;
					NotifyPropertyChanged("cameraObstructed");
				}
			}  
		}
	


		private const string s_cameraObstructedTip = @"To enable this detector you should also enable Object Tracker";
		private string m_cameraObstructedTip=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='cameraObstructedTip']/@value")]
		public string cameraObstructedTip {
			get { 
				if( m_cameraObstructedTip == null){
					return s_cameraObstructedTip;
				}
				return m_cameraObstructedTip; 
			}
			set { 
				if( value != m_cameraObstructedTip){
					m_cameraObstructedTip = value;
					NotifyPropertyChanged("cameraObstructedTip");
				}
			}  
		}
	


		private const string s_imageTooBlurry = @"Image too blurry";
		private string m_imageTooBlurry=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='imageTooBlurry']/@value")]
		public string imageTooBlurry {
			get { 
				if( m_imageTooBlurry == null){
					return s_imageTooBlurry;
				}
				return m_imageTooBlurry; 
			}
			set { 
				if( value != m_imageTooBlurry){
					m_imageTooBlurry = value;
					NotifyPropertyChanged("imageTooBlurry");
				}
			}  
		}
	


		private const string s_imageTooBright = @"Image too bright";
		private string m_imageTooBright=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='imageTooBright']/@value")]
		public string imageTooBright {
			get { 
				if( m_imageTooBright == null){
					return s_imageTooBright;
				}
				return m_imageTooBright; 
			}
			set { 
				if( value != m_imageTooBright){
					m_imageTooBright = value;
					NotifyPropertyChanged("imageTooBright");
				}
			}  
		}
	


		private const string s_imageTooNoisy = @"Image too noisy";
		private string m_imageTooNoisy=null;
		[XPath(@"/localized-strings/module[@name='PropertyTamperingDetectorsStrings' and @namespace='odm.ui.controls']/descendant::string[@name='imageTooNoisy']/@value")]
		public string imageTooNoisy {
			get { 
				if( m_imageTooNoisy == null){
					return s_imageTooNoisy;
				}
				return m_imageTooNoisy; 
			}
			set { 
				if( value != m_imageTooNoisy){
					m_imageTooNoisy = value;
					NotifyPropertyChanged("imageTooNoisy");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyObjectTrackerStrings: LocalizedStringsBase<PropertyObjectTrackerStrings>{
		


		private const string s_useObjectTracker = @"Enable object tracker";
		private string m_useObjectTracker=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='useObjectTracker']/@value")]
		public string useObjectTracker {
			get { 
				if( m_useObjectTracker == null){
					return s_useObjectTracker;
				}
				return m_useObjectTracker; 
			}
			set { 
				if( value != m_useObjectTracker){
					m_useObjectTracker = value;
					NotifyPropertyChanged("useObjectTracker");
				}
			}  
		}
	


		private const string s_contrast = @"Contrast sensitivity";
		private string m_contrast=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='contrast']/@value")]
		public string contrast {
			get { 
				if( m_contrast == null){
					return s_contrast;
				}
				return m_contrast; 
			}
			set { 
				if( value != m_contrast){
					m_contrast = value;
					NotifyPropertyChanged("contrast");
				}
			}  
		}
	


		private const string s_areaMin = @"Object area min, m*m";
		private string m_areaMin=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='areaMin']/@value")]
		public string areaMin {
			get { 
				if( m_areaMin == null){
					return s_areaMin;
				}
				return m_areaMin; 
			}
			set { 
				if( value != m_areaMin){
					m_areaMin = value;
					NotifyPropertyChanged("areaMin");
				}
			}  
		}
	


		private const string s_areaMax = @"Object area max, m*m";
		private string m_areaMax=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='areaMax']/@value")]
		public string areaMax {
			get { 
				if( m_areaMax == null){
					return s_areaMax;
				}
				return m_areaMax; 
			}
			set { 
				if( value != m_areaMax){
					m_areaMax = value;
					NotifyPropertyChanged("areaMax");
				}
			}  
		}
	


		private const string s_speedMax = @"Speed max, m/s";
		private string m_speedMax=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='speedMax']/@value")]
		public string speedMax {
			get { 
				if( m_speedMax == null){
					return s_speedMax;
				}
				return m_speedMax; 
			}
			set { 
				if( value != m_speedMax){
					m_speedMax = value;
					NotifyPropertyChanged("speedMax");
				}
			}  
		}
	


		private const string s_stabilization = @"Stabilization time, ms";
		private string m_stabilization=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='stabilization']/@value")]
		public string stabilization {
			get { 
				if( m_stabilization == null){
					return s_stabilization;
				}
				return m_stabilization; 
			}
			set { 
				if( value != m_stabilization){
					m_stabilization = value;
					NotifyPropertyChanged("stabilization");
				}
			}  
		}
	


		private const string s_displacement = @"Displacement sensitivity";
		private string m_displacement=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='displacement']/@value")]
		public string displacement {
			get { 
				if( m_displacement == null){
					return s_displacement;
				}
				return m_displacement; 
			}
			set { 
				if( value != m_displacement){
					m_displacement = value;
					NotifyPropertyChanged("displacement");
				}
			}  
		}
	


		private const string s_direction = @"Direction";
		private string m_direction=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='direction']/@value")]
		public string direction {
			get { 
				if( m_direction == null){
					return s_direction;
				}
				return m_direction; 
			}
			set { 
				if( value != m_direction){
					m_direction = value;
					NotifyPropertyChanged("direction");
				}
			}  
		}
	


		private const string s_all = @"All";
		private string m_all=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='all']/@value")]
		public string all {
			get { 
				if( m_all == null){
					return s_all;
				}
				return m_all; 
			}
			set { 
				if( value != m_all){
					m_all = value;
					NotifyPropertyChanged("all");
				}
			}  
		}
	


		private const string s_none = @"None";
		private string m_none=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='none']/@value")]
		public string none {
			get { 
				if( m_none == null){
					return s_none;
				}
				return m_none; 
			}
			set { 
				if( value != m_none){
					m_none = value;
					NotifyPropertyChanged("none");
				}
			}  
		}
	


		private const string s_sensitivity = @"Sensitivity";
		private string m_sensitivity=null;
		[XPath(@"/localized-strings/module[@name='PropertyObjectTrackerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sensitivity']/@value")]
		public string sensitivity {
			get { 
				if( m_sensitivity == null){
					return s_sensitivity;
				}
				return m_sensitivity; 
			}
			set { 
				if( value != m_sensitivity){
					m_sensitivity = value;
					NotifyPropertyChanged("sensitivity");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyRuleEngineStrings: LocalizedStringsBase<PropertyRuleEngineStrings>{
		


		private const string s_enableRule = @"Motion";
		private string m_enableRule=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='enableRule']/@value")]
		public string enableRule {
			get { 
				if( m_enableRule == null){
					return s_enableRule;
				}
				return m_enableRule; 
			}
			set { 
				if( value != m_enableRule){
					m_enableRule = value;
					NotifyPropertyChanged("enableRule");
				}
			}  
		}
	


		private const string s_btnAdd = @"Add";
		private string m_btnAdd=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='btnAdd']/@value")]
		public string btnAdd {
			get { 
				if( m_btnAdd == null){
					return s_btnAdd;
				}
				return m_btnAdd; 
			}
			set { 
				if( value != m_btnAdd){
					m_btnAdd = value;
					NotifyPropertyChanged("btnAdd");
				}
			}  
		}
	


		private const string s_btnRemove = @"Remove";
		private string m_btnRemove=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='btnRemove']/@value")]
		public string btnRemove {
			get { 
				if( m_btnRemove == null){
					return s_btnRemove;
				}
				return m_btnRemove; 
			}
			set { 
				if( value != m_btnRemove){
					m_btnRemove = value;
					NotifyPropertyChanged("btnRemove");
				}
			}  
		}
	


		private const string s_name = @"Name";
		private string m_name=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='name']/@value")]
		public string name {
			get { 
				if( m_name == null){
					return s_name;
				}
				return m_name; 
			}
			set { 
				if( value != m_name){
					m_name = value;
					NotifyPropertyChanged("name");
				}
			}  
		}
	


		private const string s_groupRule = @"Generate alarm when:";
		private string m_groupRule=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='groupRule']/@value")]
		public string groupRule {
			get { 
				if( m_groupRule == null){
					return s_groupRule;
				}
				return m_groupRule; 
			}
			set { 
				if( value != m_groupRule){
					m_groupRule = value;
					NotifyPropertyChanged("groupRule");
				}
			}  
		}
	


		private const string s_groupAction = @"Upon alarm:";
		private string m_groupAction=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='groupAction']/@value")]
		public string groupAction {
			get { 
				if( m_groupAction == null){
					return s_groupAction;
				}
				return m_groupAction; 
			}
			set { 
				if( value != m_groupAction){
					m_groupAction = value;
					NotifyPropertyChanged("groupAction");
				}
			}  
		}
	


		private const string s_moving = @"Moving ";
		private string m_moving=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='moving']/@value")]
		public string moving {
			get { 
				if( m_moving == null){
					return s_moving;
				}
				return m_moving; 
			}
			set { 
				if( value != m_moving){
					m_moving = value;
					NotifyPropertyChanged("moving");
				}
			}  
		}
	


		private const string s_meters = @"m";
		private string m_meters=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='meters']/@value")]
		public string meters {
			get { 
				if( m_meters == null){
					return s_meters;
				}
				return m_meters; 
			}
			set { 
				if( value != m_meters){
					m_meters = value;
					NotifyPropertyChanged("meters");
				}
			}  
		}
	


		private const string s_movingInDirections = @"in directions:";
		private string m_movingInDirections=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='movingInDirections']/@value")]
		public string movingInDirections {
			get { 
				if( m_movingInDirections == null){
					return s_movingInDirections;
				}
				return m_movingInDirections; 
			}
			set { 
				if( value != m_movingInDirections){
					m_movingInDirections = value;
					NotifyPropertyChanged("movingInDirections");
				}
			}  
		}
	


		private const string s_loitering = @"Loitering ";
		private string m_loitering=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='loitering']/@value")]
		public string loitering {
			get { 
				if( m_loitering == null){
					return s_loitering;
				}
				return m_loitering; 
			}
			set { 
				if( value != m_loitering){
					m_loitering = value;
					NotifyPropertyChanged("loitering");
				}
			}  
		}
	


		private const string s_runtime = @"during ";
		private string m_runtime=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='runtime']/@value")]
		public string runtime {
			get { 
				if( m_runtime == null){
					return s_runtime;
				}
				return m_runtime; 
			}
			set { 
				if( value != m_runtime){
					m_runtime = value;
					NotifyPropertyChanged("runtime");
				}
			}  
		}
	


		private const string s_seconds = @"s";
		private string m_seconds=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='seconds']/@value")]
		public string seconds {
			get { 
				if( m_seconds == null){
					return s_seconds;
				}
				return m_seconds; 
			}
			set { 
				if( value != m_seconds){
					m_seconds = value;
					NotifyPropertyChanged("seconds");
				}
			}  
		}
	


		private const string s_within = @"s within";
		private string m_within=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='within']/@value")]
		public string within {
			get { 
				if( m_within == null){
					return s_within;
				}
				return m_within; 
			}
			set { 
				if( value != m_within){
					m_within = value;
					NotifyPropertyChanged("within");
				}
			}  
		}
	


		private const string s_running = @"Speeding over ";
		private string m_running=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='running']/@value")]
		public string running {
			get { 
				if( m_running == null){
					return s_running;
				}
				return m_running; 
			}
			set { 
				if( value != m_running){
					m_running = value;
					NotifyPropertyChanged("running");
				}
			}  
		}
	


		private const string s_speed = @" m/s";
		private string m_speed=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='speed']/@value")]
		public string speed {
			get { 
				if( m_speed == null){
					return s_speed;
				}
				return m_speed; 
			}
			set { 
				if( value != m_speed){
					m_speed = value;
					NotifyPropertyChanged("speed");
				}
			}  
		}
	


		private const string s_speed_kmh = @" km/h";
		private string m_speed_kmh=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='speed_kmh']/@value")]
		public string speed_kmh {
			get { 
				if( m_speed_kmh == null){
					return s_speed_kmh;
				}
				return m_speed_kmh; 
			}
			set { 
				if( value != m_speed_kmh){
					m_speed_kmh = value;
					NotifyPropertyChanged("speed_kmh");
				}
			}  
		}
	


		private const string s_abandoning = @"Abandoned item";
		private string m_abandoning=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='abandoning']/@value")]
		public string abandoning {
			get { 
				if( m_abandoning == null){
					return s_abandoning;
				}
				return m_abandoning; 
			}
			set { 
				if( value != m_abandoning){
					m_abandoning = value;
					NotifyPropertyChanged("abandoning");
				}
			}  
		}
	


		private const string s_sendOnvif = @"Send ONVIF message";
		private string m_sendOnvif=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='sendOnvif']/@value")]
		public string sendOnvif {
			get { 
				if( m_sendOnvif == null){
					return s_sendOnvif;
				}
				return m_sendOnvif; 
			}
			set { 
				if( value != m_sendOnvif){
					m_sendOnvif = value;
					NotifyPropertyChanged("sendOnvif");
				}
			}  
		}
	


		private const string s_setFramerate = @"Set Framerate to";
		private string m_setFramerate=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='setFramerate']/@value")]
		public string setFramerate {
			get { 
				if( m_setFramerate == null){
					return s_setFramerate;
				}
				return m_setFramerate; 
			}
			set { 
				if( value != m_setFramerate){
					m_setFramerate = value;
					NotifyPropertyChanged("setFramerate");
				}
			}  
		}
	


		private const string s_fps = @"fps";
		private string m_fps=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='fps']/@value")]
		public string fps {
			get { 
				if( m_fps == null){
					return s_fps;
				}
				return m_fps; 
			}
			set { 
				if( value != m_fps){
					m_fps = value;
					NotifyPropertyChanged("fps");
				}
			}  
		}
	


		private const string s_turnOnRelay = @"Turn on";
		private string m_turnOnRelay=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='turnOnRelay']/@value")]
		public string turnOnRelay {
			get { 
				if( m_turnOnRelay == null){
					return s_turnOnRelay;
				}
				return m_turnOnRelay; 
			}
			set { 
				if( value != m_turnOnRelay){
					m_turnOnRelay = value;
					NotifyPropertyChanged("turnOnRelay");
				}
			}  
		}
	


		private const string s_direction = @"Direction: ";
		private string m_direction=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='direction']/@value")]
		public string direction {
			get { 
				if( m_direction == null){
					return s_direction;
				}
				return m_direction; 
			}
			set { 
				if( value != m_direction){
					m_direction = value;
					NotifyPropertyChanged("direction");
				}
			}  
		}
	


		private const string s_turnOnAnalog = @"Turn on analogue output";
		private string m_turnOnAnalog=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='turnOnAnalog']/@value")]
		public string turnOnAnalog {
			get { 
				if( m_turnOnAnalog == null){
					return s_turnOnAnalog;
				}
				return m_turnOnAnalog; 
			}
			set { 
				if( value != m_turnOnAnalog){
					m_turnOnAnalog = value;
					NotifyPropertyChanged("turnOnAnalog");
				}
			}  
		}
	


		private const string s_record = @"Record to local or network drive";
		private string m_record=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='record']/@value")]
		public string record {
			get { 
				if( m_record == null){
					return s_record;
				}
				return m_record; 
			}
			set { 
				if( value != m_record){
					m_record = value;
					NotifyPropertyChanged("record");
				}
			}  
		}
	


		private const string s_ptz = @"Target PTZ-camera";
		private string m_ptz=null;
		[XPath(@"/localized-strings/module[@name='PropertyRuleEngineStrings' and @namespace='odm.ui.controls']/descendant::string[@name='ptz']/@value")]
		public string ptz {
			get { 
				if( m_ptz == null){
					return s_ptz;
				}
				return m_ptz; 
			}
			set { 
				if( value != m_ptz){
					m_ptz = value;
					NotifyPropertyChanged("ptz");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyAntishakerStrings: LocalizedStringsBase<PropertyAntishakerStrings>{
		


		private const string s_useAntishaker = @"Enable antishaker";
		private string m_useAntishaker=null;
		[XPath(@"/localized-strings/module[@name='PropertyAntishakerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='useAntishaker']/@value")]
		public string useAntishaker {
			get { 
				if( m_useAntishaker == null){
					return s_useAntishaker;
				}
				return m_useAntishaker; 
			}
			set { 
				if( value != m_useAntishaker){
					m_useAntishaker = value;
					NotifyPropertyChanged("useAntishaker");
				}
			}  
		}
	


		private const string s_enableDisplacement = @"Enable camera redirected event";
		private string m_enableDisplacement=null;
		[XPath(@"/localized-strings/module[@name='PropertyAntishakerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='enableDisplacement']/@value")]
		public string enableDisplacement {
			get { 
				if( m_enableDisplacement == null){
					return s_enableDisplacement;
				}
				return m_enableDisplacement; 
			}
			set { 
				if( value != m_enableDisplacement){
					m_enableDisplacement = value;
					NotifyPropertyChanged("enableDisplacement");
				}
			}  
		}
	


		private const string s_enableOutputShift = @"Enable stabilization of output picture";
		private string m_enableOutputShift=null;
		[XPath(@"/localized-strings/module[@name='PropertyAntishakerStrings' and @namespace='odm.ui.controls']/descendant::string[@name='enableOutputShift']/@value")]
		public string enableOutputShift {
			get { 
				if( m_enableOutputShift == null){
					return s_enableOutputShift;
				}
				return m_enableOutputShift; 
			}
			set { 
				if( value != m_enableOutputShift){
					m_enableOutputShift = value;
					NotifyPropertyChanged("enableOutputShift");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyRotationStrings: LocalizedStringsBase<PropertyRotationStrings>{
		


		private const string s_title = @"Rotation";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_rotate = @"Rotation:";
		private string m_rotate=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rotate']/@value")]
		public string rotate {
			get { 
				if( m_rotate == null){
					return s_rotate;
				}
				return m_rotate; 
			}
			set { 
				if( value != m_rotate){
					m_rotate = value;
					NotifyPropertyChanged("rotate");
				}
			}  
		}
	


		private const string s_rotate0 = @"0'(None)";
		private string m_rotate0=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rotate0']/@value")]
		public string rotate0 {
			get { 
				if( m_rotate0 == null){
					return s_rotate0;
				}
				return m_rotate0; 
			}
			set { 
				if( value != m_rotate0){
					m_rotate0 = value;
					NotifyPropertyChanged("rotate0");
				}
			}  
		}
	


		private const string s_rotate90 = @"90'";
		private string m_rotate90=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rotate90']/@value")]
		public string rotate90 {
			get { 
				if( m_rotate90 == null){
					return s_rotate90;
				}
				return m_rotate90; 
			}
			set { 
				if( value != m_rotate90){
					m_rotate90 = value;
					NotifyPropertyChanged("rotate90");
				}
			}  
		}
	


		private const string s_rotate180 = @"180'";
		private string m_rotate180=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rotate180']/@value")]
		public string rotate180 {
			get { 
				if( m_rotate180 == null){
					return s_rotate180;
				}
				return m_rotate180; 
			}
			set { 
				if( value != m_rotate180){
					m_rotate180 = value;
					NotifyPropertyChanged("rotate180");
				}
			}  
		}
	


		private const string s_rotate270 = @"270'";
		private string m_rotate270=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='rotate270']/@value")]
		public string rotate270 {
			get { 
				if( m_rotate270 == null){
					return s_rotate270;
				}
				return m_rotate270; 
			}
			set { 
				if( value != m_rotate270){
					m_rotate270 = value;
					NotifyPropertyChanged("rotate270");
				}
			}  
		}
	


		private const string s_flip = @"Flip:";
		private string m_flip=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='flip']/@value")]
		public string flip {
			get { 
				if( m_flip == null){
					return s_flip;
				}
				return m_flip; 
			}
			set { 
				if( value != m_flip){
					m_flip = value;
					NotifyPropertyChanged("flip");
				}
			}  
		}
	


		private const string s_flipH0 = @"None";
		private string m_flipH0=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='flipH0']/@value")]
		public string flipH0 {
			get { 
				if( m_flipH0 == null){
					return s_flipH0;
				}
				return m_flipH0; 
			}
			set { 
				if( value != m_flipH0){
					m_flipH0 = value;
					NotifyPropertyChanged("flipH0");
				}
			}  
		}
	


		private const string s_flipH = @"Horizontal";
		private string m_flipH=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='flipH']/@value")]
		public string flipH {
			get { 
				if( m_flipH == null){
					return s_flipH;
				}
				return m_flipH; 
			}
			set { 
				if( value != m_flipH){
					m_flipH = value;
					NotifyPropertyChanged("flipH");
				}
			}  
		}
	


		private const string s_flipV0 = @"None";
		private string m_flipV0=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='flipV0']/@value")]
		public string flipV0 {
			get { 
				if( m_flipV0 == null){
					return s_flipV0;
				}
				return m_flipV0; 
			}
			set { 
				if( value != m_flipV0){
					m_flipV0 = value;
					NotifyPropertyChanged("flipV0");
				}
			}  
		}
	


		private const string s_flipV = @"Vertical";
		private string m_flipV=null;
		[XPath(@"/localized-strings/module[@name='PropertyRotationStrings' and @namespace='odm.ui.controls']/descendant::string[@name='flipV']/@value")]
		public string flipV {
			get { 
				if( m_flipV == null){
					return s_flipV;
				}
				return m_flipV; 
			}
			set { 
				if( value != m_flipV){
					m_flipV = value;
					NotifyPropertyChanged("flipV");
				}
			}  
		}
	
	}

}
	

namespace odm.ui.controls {
	public partial class PropertyAnalogueOutputStrings: LocalizedStringsBase<PropertyAnalogueOutputStrings>{
		


		private const string s_title = @"Analogue output";
		private string m_title=null;
		[XPath(@"/localized-strings/module[@name='PropertyAnalogueOutputStrings' and @namespace='odm.ui.controls']/descendant::string[@name='title']/@value")]
		public string title {
			get { 
				if( m_title == null){
					return s_title;
				}
				return m_title; 
			}
			set { 
				if( value != m_title){
					m_title = value;
					NotifyPropertyChanged("title");
				}
			}  
		}
	


		private const string s_loop = @"Loop-through";
		private string m_loop=null;
		[XPath(@"/localized-strings/module[@name='PropertyAnalogueOutputStrings' and @namespace='odm.ui.controls']/descendant::string[@name='loop']/@value")]
		public string loop {
			get { 
				if( m_loop == null){
					return s_loop;
				}
				return m_loop; 
			}
			set { 
				if( value != m_loop){
					m_loop = value;
					NotifyPropertyChanged("loop");
				}
			}  
		}
	


		private const string s_digital = @"Digital processing";
		private string m_digital=null;
		[XPath(@"/localized-strings/module[@name='PropertyAnalogueOutputStrings' and @namespace='odm.ui.controls']/descendant::string[@name='digital']/@value")]
		public string digital {
			get { 
				if( m_digital == null){
					return s_digital;
				}
				return m_digital; 
			}
			set { 
				if( value != m_digital){
					m_digital = value;
					NotifyPropertyChanged("digital");
				}
			}  
		}
	


		private const string s_off = @"Off";
		private string m_off=null;
		[XPath(@"/localized-strings/module[@name='PropertyAnalogueOutputStrings' and @namespace='odm.ui.controls']/descendant::string[@name='off']/@value")]
		public string off {
			get { 
				if( m_off == null){
					return s_off;
				}
				return m_off; 
			}
			set { 
				if( value != m_off){
					m_off = value;
					NotifyPropertyChanged("off");
				}
			}  
		}
	
	}

}
	