
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Reactive.Disposables;
using System.Windows.Input;
using odm.infra;
namespace odm.ui.activities {
	using global::onvif.services;
	
	public partial class ProfileUpdatingView{
		
		#region Model definition
		
		public interface IModelAccessor{
			VideoEncoderConfiguration videoEncCfg{get;set;}
			AudioEncoderConfiguration audioEncCfg{get;set;}
			VideoAnalyticsConfiguration analyticsCfg{get;set;}
			PTZConfiguration ptzCfg{get;set;}
			MetadataConfiguration metaCfg{get;set;}
			bool isVideoEncCfgEnabled{get;set;}
			bool isAudioEncCfgEnabled{get;set;}
			bool isAnalyticsCfgEnabled{get;set;}
			bool isPtzCfgEnabled{get;set;}
			bool isMetaCfgEnabled{get;set;}
			
		}
		public class Model: IModelAccessor, INotifyPropertyChanged{
			
			public Model(
				VideoEncoderConfiguration[] videoEncCfgs, AudioEncoderConfiguration[] audioEncCfgs, PTZConfiguration[] ptzCfgs, VideoAnalyticsConfiguration[] analyticsCfgs, MetadataConfiguration[] metaCfgs
			){
				
				this.videoEncCfgs = videoEncCfgs;
				this.audioEncCfgs = audioEncCfgs;
				this.ptzCfgs = ptzCfgs;
				this.analyticsCfgs = analyticsCfgs;
				this.metaCfgs = metaCfgs;
			}
			private Model(){
			}
			

			public static Model Create(
				VideoEncoderConfiguration videoEncCfg,
				AudioEncoderConfiguration audioEncCfg,
				VideoAnalyticsConfiguration analyticsCfg,
				PTZConfiguration ptzCfg,
				MetadataConfiguration metaCfg,
				bool isVideoEncCfgEnabled,
				bool isAudioEncCfgEnabled,
				bool isAnalyticsCfgEnabled,
				bool isPtzCfgEnabled,
				bool isMetaCfgEnabled,
				VideoEncoderConfiguration[] videoEncCfgs,
				AudioEncoderConfiguration[] audioEncCfgs,
				PTZConfiguration[] ptzCfgs,
				VideoAnalyticsConfiguration[] analyticsCfgs,
				MetadataConfiguration[] metaCfgs
			){
				var _this = new Model();
				
				_this.videoEncCfgs = videoEncCfgs;
				_this.audioEncCfgs = audioEncCfgs;
				_this.ptzCfgs = ptzCfgs;
				_this.analyticsCfgs = analyticsCfgs;
				_this.metaCfgs = metaCfgs;
				_this.origin.videoEncCfg = videoEncCfg;
				_this.origin.audioEncCfg = audioEncCfg;
				_this.origin.analyticsCfg = analyticsCfg;
				_this.origin.ptzCfg = ptzCfg;
				_this.origin.metaCfg = metaCfg;
				_this.origin.isVideoEncCfgEnabled = isVideoEncCfgEnabled;
				_this.origin.isAudioEncCfgEnabled = isAudioEncCfgEnabled;
				_this.origin.isAnalyticsCfgEnabled = isAnalyticsCfgEnabled;
				_this.origin.isPtzCfgEnabled = isPtzCfgEnabled;
				_this.origin.isMetaCfgEnabled = isMetaCfgEnabled;
				_this.RevertChanges();
				
				return _this;
			}
		
				private SimpleChangeTrackable<VideoEncoderConfiguration> m_videoEncCfg;
				private SimpleChangeTrackable<AudioEncoderConfiguration> m_audioEncCfg;
				private SimpleChangeTrackable<VideoAnalyticsConfiguration> m_analyticsCfg;
				private SimpleChangeTrackable<PTZConfiguration> m_ptzCfg;
				private SimpleChangeTrackable<MetadataConfiguration> m_metaCfg;
				private SimpleChangeTrackable<bool> m_isVideoEncCfgEnabled;
				private SimpleChangeTrackable<bool> m_isAudioEncCfgEnabled;
				private SimpleChangeTrackable<bool> m_isAnalyticsCfgEnabled;
				private SimpleChangeTrackable<bool> m_isPtzCfgEnabled;
				private SimpleChangeTrackable<bool> m_isMetaCfgEnabled;
				public VideoEncoderConfiguration[] videoEncCfgs{get;private set;}
				public AudioEncoderConfiguration[] audioEncCfgs{get;private set;}
				public PTZConfiguration[] ptzCfgs{get;private set;}
				public VideoAnalyticsConfiguration[] analyticsCfgs{get;private set;}
				public MetadataConfiguration[] metaCfgs{get;private set;}

			private class OriginAccessor: IModelAccessor {
				private Model m_model;
				public OriginAccessor(Model model) {
					m_model = model;
				}
				VideoEncoderConfiguration IModelAccessor.videoEncCfg {
					get {return m_model.m_videoEncCfg.origin;}
					set {m_model.m_videoEncCfg.origin = value;}
				}
				AudioEncoderConfiguration IModelAccessor.audioEncCfg {
					get {return m_model.m_audioEncCfg.origin;}
					set {m_model.m_audioEncCfg.origin = value;}
				}
				VideoAnalyticsConfiguration IModelAccessor.analyticsCfg {
					get {return m_model.m_analyticsCfg.origin;}
					set {m_model.m_analyticsCfg.origin = value;}
				}
				PTZConfiguration IModelAccessor.ptzCfg {
					get {return m_model.m_ptzCfg.origin;}
					set {m_model.m_ptzCfg.origin = value;}
				}
				MetadataConfiguration IModelAccessor.metaCfg {
					get {return m_model.m_metaCfg.origin;}
					set {m_model.m_metaCfg.origin = value;}
				}
				bool IModelAccessor.isVideoEncCfgEnabled {
					get {return m_model.m_isVideoEncCfgEnabled.origin;}
					set {m_model.m_isVideoEncCfgEnabled.origin = value;}
				}
				bool IModelAccessor.isAudioEncCfgEnabled {
					get {return m_model.m_isAudioEncCfgEnabled.origin;}
					set {m_model.m_isAudioEncCfgEnabled.origin = value;}
				}
				bool IModelAccessor.isAnalyticsCfgEnabled {
					get {return m_model.m_isAnalyticsCfgEnabled.origin;}
					set {m_model.m_isAnalyticsCfgEnabled.origin = value;}
				}
				bool IModelAccessor.isPtzCfgEnabled {
					get {return m_model.m_isPtzCfgEnabled.origin;}
					set {m_model.m_isPtzCfgEnabled.origin = value;}
				}
				bool IModelAccessor.isMetaCfgEnabled {
					get {return m_model.m_isMetaCfgEnabled.origin;}
					set {m_model.m_isMetaCfgEnabled.origin = value;}
				}
				
			}
			public event PropertyChangedEventHandler PropertyChanged;
			private void NotifyPropertyChanged(string propertyName){
				var prop_changed = this.PropertyChanged;
				if (prop_changed != null) {
					prop_changed(this, new PropertyChangedEventArgs(propertyName));
				}
			}
			
			public VideoEncoderConfiguration videoEncCfg  {
				get {return m_videoEncCfg.current;}
				set {
					if(m_videoEncCfg.current != value) {
						m_videoEncCfg.current = value;
						NotifyPropertyChanged("videoEncCfg");
					}
				}
			}
			
			public AudioEncoderConfiguration audioEncCfg  {
				get {return m_audioEncCfg.current;}
				set {
					if(m_audioEncCfg.current != value) {
						m_audioEncCfg.current = value;
						NotifyPropertyChanged("audioEncCfg");
					}
				}
			}
			
			public VideoAnalyticsConfiguration analyticsCfg  {
				get {return m_analyticsCfg.current;}
				set {
					if(m_analyticsCfg.current != value) {
						m_analyticsCfg.current = value;
						NotifyPropertyChanged("analyticsCfg");
					}
				}
			}
			
			public PTZConfiguration ptzCfg  {
				get {return m_ptzCfg.current;}
				set {
					if(m_ptzCfg.current != value) {
						m_ptzCfg.current = value;
						NotifyPropertyChanged("ptzCfg");
					}
				}
			}
			
			public MetadataConfiguration metaCfg  {
				get {return m_metaCfg.current;}
				set {
					if(m_metaCfg.current != value) {
						m_metaCfg.current = value;
						NotifyPropertyChanged("metaCfg");
					}
				}
			}
			
			public bool isVideoEncCfgEnabled  {
				get {return m_isVideoEncCfgEnabled.current;}
				set {
					if(m_isVideoEncCfgEnabled.current != value) {
						m_isVideoEncCfgEnabled.current = value;
						NotifyPropertyChanged("isVideoEncCfgEnabled");
					}
				}
			}
			
			public bool isAudioEncCfgEnabled  {
				get {return m_isAudioEncCfgEnabled.current;}
				set {
					if(m_isAudioEncCfgEnabled.current != value) {
						m_isAudioEncCfgEnabled.current = value;
						NotifyPropertyChanged("isAudioEncCfgEnabled");
					}
				}
			}
			
			public bool isAnalyticsCfgEnabled  {
				get {return m_isAnalyticsCfgEnabled.current;}
				set {
					if(m_isAnalyticsCfgEnabled.current != value) {
						m_isAnalyticsCfgEnabled.current = value;
						NotifyPropertyChanged("isAnalyticsCfgEnabled");
					}
				}
			}
			
			public bool isPtzCfgEnabled  {
				get {return m_isPtzCfgEnabled.current;}
				set {
					if(m_isPtzCfgEnabled.current != value) {
						m_isPtzCfgEnabled.current = value;
						NotifyPropertyChanged("isPtzCfgEnabled");
					}
				}
			}
			
			public bool isMetaCfgEnabled  {
				get {return m_isMetaCfgEnabled.current;}
				set {
					if(m_isMetaCfgEnabled.current != value) {
						m_isMetaCfgEnabled.current = value;
						NotifyPropertyChanged("isMetaCfgEnabled");
					}
				}
			}
			
			public void AcceptChanges() {
				m_videoEncCfg.AcceptChanges();
				m_audioEncCfg.AcceptChanges();
				m_analyticsCfg.AcceptChanges();
				m_ptzCfg.AcceptChanges();
				m_metaCfg.AcceptChanges();
				m_isVideoEncCfgEnabled.AcceptChanges();
				m_isAudioEncCfgEnabled.AcceptChanges();
				m_isAnalyticsCfgEnabled.AcceptChanges();
				m_isPtzCfgEnabled.AcceptChanges();
				m_isMetaCfgEnabled.AcceptChanges();
				
			}

			public void RevertChanges() {
				this.current.videoEncCfg= this.origin.videoEncCfg;
				this.current.audioEncCfg= this.origin.audioEncCfg;
				this.current.analyticsCfg= this.origin.analyticsCfg;
				this.current.ptzCfg= this.origin.ptzCfg;
				this.current.metaCfg= this.origin.metaCfg;
				this.current.isVideoEncCfgEnabled= this.origin.isVideoEncCfgEnabled;
				this.current.isAudioEncCfgEnabled= this.origin.isAudioEncCfgEnabled;
				this.current.isAnalyticsCfgEnabled= this.origin.isAnalyticsCfgEnabled;
				this.current.isPtzCfgEnabled= this.origin.isPtzCfgEnabled;
				this.current.isMetaCfgEnabled= this.origin.isMetaCfgEnabled;
				
			}

			public bool isModified {
				get {
					if(m_videoEncCfg.isModified)return true;
					if(m_audioEncCfg.isModified)return true;
					if(m_analyticsCfg.isModified)return true;
					if(m_ptzCfg.isModified)return true;
					if(m_metaCfg.isModified)return true;
					if(m_isVideoEncCfgEnabled.isModified)return true;
					if(m_isAudioEncCfgEnabled.isModified)return true;
					if(m_isAnalyticsCfgEnabled.isModified)return true;
					if(m_isPtzCfgEnabled.isModified)return true;
					if(m_isMetaCfgEnabled.isModified)return true;
					
					return false;
				}
			}

			public IModelAccessor current {
				get {return this;}
				
			}

			public IModelAccessor origin {
				get {return new OriginAccessor(this);}
				
			}
		}
			
		#endregion
	
		#region Result definition
		public abstract class Result{
			private Result() { }
			
			public abstract T Handle<T>(
				
				Func<Model,T> finish,
				Func<T> abort,
				Func<Model,T> selectVideoEncCfg,
				Func<Model,T> selectAudioEncCfg,
				Func<Model,T> selectAnalyticsCfg,
				Func<Model,T> selectPtzCfg,
				Func<Model,T> selectMetaCfg
			);
	
			public bool IsFinish(){
				return AsFinish() != null;
			}
			public virtual Finish AsFinish(){ return null; }
			public class Finish : Result {
				public Finish(Model model){
					
					this.model = model;
					
				}
				public Model model{ get; set; }
				public override Finish AsFinish(){ return this; }
				
				public override T Handle<T>(
				
					Func<Model,T> finish,
					Func<T> abort,
					Func<Model,T> selectVideoEncCfg,
					Func<Model,T> selectAudioEncCfg,
					Func<Model,T> selectAnalyticsCfg,
					Func<Model,T> selectPtzCfg,
					Func<Model,T> selectMetaCfg
				){
					return finish(
						model
					);
				}
	
			}
			
			public bool IsAbort(){
				return AsAbort() != null;
			}
			public virtual Abort AsAbort(){ return null; }
			public class Abort : Result {
				public Abort(){
					
				}
				
				public override Abort AsAbort(){ return this; }
				
				public override T Handle<T>(
				
					Func<Model,T> finish,
					Func<T> abort,
					Func<Model,T> selectVideoEncCfg,
					Func<Model,T> selectAudioEncCfg,
					Func<Model,T> selectAnalyticsCfg,
					Func<Model,T> selectPtzCfg,
					Func<Model,T> selectMetaCfg
				){
					return abort(
						
					);
				}
	
			}
			
			public bool IsSelectVideoEncCfg(){
				return AsSelectVideoEncCfg() != null;
			}
			public virtual SelectVideoEncCfg AsSelectVideoEncCfg(){ return null; }
			public class SelectVideoEncCfg : Result {
				public SelectVideoEncCfg(Model model){
					
					this.model = model;
					
				}
				public Model model{ get; set; }
				public override SelectVideoEncCfg AsSelectVideoEncCfg(){ return this; }
				
				public override T Handle<T>(
				
					Func<Model,T> finish,
					Func<T> abort,
					Func<Model,T> selectVideoEncCfg,
					Func<Model,T> selectAudioEncCfg,
					Func<Model,T> selectAnalyticsCfg,
					Func<Model,T> selectPtzCfg,
					Func<Model,T> selectMetaCfg
				){
					return selectVideoEncCfg(
						model
					);
				}
	
			}
			
			public bool IsSelectAudioEncCfg(){
				return AsSelectAudioEncCfg() != null;
			}
			public virtual SelectAudioEncCfg AsSelectAudioEncCfg(){ return null; }
			public class SelectAudioEncCfg : Result {
				public SelectAudioEncCfg(Model model){
					
					this.model = model;
					
				}
				public Model model{ get; set; }
				public override SelectAudioEncCfg AsSelectAudioEncCfg(){ return this; }
				
				public override T Handle<T>(
				
					Func<Model,T> finish,
					Func<T> abort,
					Func<Model,T> selectVideoEncCfg,
					Func<Model,T> selectAudioEncCfg,
					Func<Model,T> selectAnalyticsCfg,
					Func<Model,T> selectPtzCfg,
					Func<Model,T> selectMetaCfg
				){
					return selectAudioEncCfg(
						model
					);
				}
	
			}
			
			public bool IsSelectAnalyticsCfg(){
				return AsSelectAnalyticsCfg() != null;
			}
			public virtual SelectAnalyticsCfg AsSelectAnalyticsCfg(){ return null; }
			public class SelectAnalyticsCfg : Result {
				public SelectAnalyticsCfg(Model model){
					
					this.model = model;
					
				}
				public Model model{ get; set; }
				public override SelectAnalyticsCfg AsSelectAnalyticsCfg(){ return this; }
				
				public override T Handle<T>(
				
					Func<Model,T> finish,
					Func<T> abort,
					Func<Model,T> selectVideoEncCfg,
					Func<Model,T> selectAudioEncCfg,
					Func<Model,T> selectAnalyticsCfg,
					Func<Model,T> selectPtzCfg,
					Func<Model,T> selectMetaCfg
				){
					return selectAnalyticsCfg(
						model
					);
				}
	
			}
			
			public bool IsSelectPtzCfg(){
				return AsSelectPtzCfg() != null;
			}
			public virtual SelectPtzCfg AsSelectPtzCfg(){ return null; }
			public class SelectPtzCfg : Result {
				public SelectPtzCfg(Model model){
					
					this.model = model;
					
				}
				public Model model{ get; set; }
				public override SelectPtzCfg AsSelectPtzCfg(){ return this; }
				
				public override T Handle<T>(
				
					Func<Model,T> finish,
					Func<T> abort,
					Func<Model,T> selectVideoEncCfg,
					Func<Model,T> selectAudioEncCfg,
					Func<Model,T> selectAnalyticsCfg,
					Func<Model,T> selectPtzCfg,
					Func<Model,T> selectMetaCfg
				){
					return selectPtzCfg(
						model
					);
				}
	
			}
			
			public bool IsSelectMetaCfg(){
				return AsSelectMetaCfg() != null;
			}
			public virtual SelectMetaCfg AsSelectMetaCfg(){ return null; }
			public class SelectMetaCfg : Result {
				public SelectMetaCfg(Model model){
					
					this.model = model;
					
				}
				public Model model{ get; set; }
				public override SelectMetaCfg AsSelectMetaCfg(){ return this; }
				
				public override T Handle<T>(
				
					Func<Model,T> finish,
					Func<T> abort,
					Func<Model,T> selectVideoEncCfg,
					Func<Model,T> selectAudioEncCfg,
					Func<Model,T> selectAnalyticsCfg,
					Func<Model,T> selectPtzCfg,
					Func<Model,T> selectMetaCfg
				){
					return selectMetaCfg(
						model
					);
				}
	
			}
			
		}
		#endregion

		public ICommand FinishCommand{ get; private set; }
		public ICommand AbortCommand{ get; private set; }
		public ICommand SelectVideoEncCfgCommand{ get; private set; }
		public ICommand SelectAudioEncCfgCommand{ get; private set; }
		public ICommand SelectAnalyticsCfgCommand{ get; private set; }
		public ICommand SelectPtzCfgCommand{ get; private set; }
		public ICommand SelectMetaCfgCommand{ get; private set; }
		
		IActivityContext<Result> activityContext = null;
		SingleAssignmentDisposable activityCancellationSubscription = new SingleAssignmentDisposable();
		bool activityCompleted = false;
		//activity has been completed
		event Action OnCompleted = null;
		//activity has been failed
		event Action<Exception> OnError = null;
		//activity has been completed successfully
		event Action<Result> OnSuccess = null;
		//activity has been canceled
		event Action OnCancelled = null;
		
		public ProfileUpdatingView(Model model, IActivityContext<Result> activityContext) {
			this.activityContext = activityContext;
			if(activityContext!=null){
				activityCancellationSubscription.Disposable = 
					activityContext.RegisterCancellationCallback(() => {
						EnsureAccess(() => {
							CompleteWith(() => {
								if(OnCancelled!=null){
									OnCancelled();
								}
							});
						});
					});
			}
			Init(model);
		}

		
		public void EnsureAccess(Action action){
			if(!CheckAccess()){
				Dispatcher.Invoke(action);
			}else{
				action();
			}
		}

		public void CompleteWith(Action cont){
			if(!activityCompleted){
				activityCompleted = true;
				cont();
				if(OnCompleted!=null){
					OnCompleted();
				}
				activityCancellationSubscription.Dispose();
			}
		}
		public void Success(Result result) {
			CompleteWith(() => {
				if(activityContext!=null){
					activityContext.Success(result);
				}
				if(OnSuccess!=null){
					OnSuccess(result);
				}
			});
		}
		public void Error(Exception error) {
			CompleteWith(() => {
				if(activityContext!=null){
					activityContext.Error(error);
				}
				if(OnError!=null){
					OnError(error);
				}
			});
		}
		public void Cancel() {
			CompleteWith(() => {
				if(activityContext!=null){
					activityContext.Cancel();
				}
				if(OnCancelled!=null){
					OnCancelled();
				}
			});
		}
		public void Success(Func<Result> resultFactory) {
			CompleteWith(() => {
				var result = resultFactory();
				if(activityContext!=null){
					activityContext.Success(result);
				}
				if(OnSuccess!=null){
					OnSuccess(result);
				}
			});
		}
		public void Error(Func<Exception> errorFactory) {
			CompleteWith(() => {
				var error = errorFactory();
				if(activityContext!=null){
					activityContext.Error(error);
				}
				if(OnError!=null){
					OnError(error);
				}
			});
		}
		public void Cancel(Action action) {
			CompleteWith(() => {
				action();
				if(activityContext!=null){
					activityContext.Cancel();
				}
				if(OnCancelled!=null){
					OnCancelled();
				}
			});
		}
		
	}
}
