<my:CustomWindow 
	x:Class="odm.ui.MainWindow" x:Name="self"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:cmd="clr-namespace:Microsoft.Practices.Prism.Commands;assembly=Microsoft.Practices.Prism"
	xmlns:my="clr-namespace:odm.ui.controls;assembly=odm.ui.views"
	xmlns:prop="clr-namespace:odm.ui.Properties"
	xmlns:ui="clr-namespace:odm.ui"
	xmlns:p="http://www.codeplex.com/CompositeWPF"
	Title="{Binding Title}" 
	Width="{Binding Source={x:Static Member=prop:Settings.Default}, Path=MainWindowWidth, Mode=TwoWay}"
	Height="{Binding Source={x:Static Member=prop:Settings.Default}, Path=MainWindowHeight, Mode=TwoWay}"
	WindowState="{Binding Source={x:Static Member=prop:Settings.Default}, Path=MainWindowState, Mode=TwoWay}"
	Icon="{StaticResource ResourceKey='images.odm_icon'}" 
	VisualTextRenderingMode="Aliased"
	TextOptions.TextRenderingMode="Aliased"
	TextOptions.TextFormattingMode="Display"
	SnapsToDevicePixels="True" IsEnabled="True">

	<!--xmlns:p="http://www.codeplex.com/prism"-->
	<Window.CommandBindings>
		<!--<CommandBinding Command="Help" Executed="CmdHelpHandler"/>-->
	</Window.CommandBindings>

	<Window.InputBindings>
		<KeyBinding Command="Help" Key="H" Modifiers="Ctrl"/>
	</Window.InputBindings>
	<!--<ui:MainWindow.ToolBar>
	</ui:MainWindow.ToolBar>-->
	<Window.Resources>
		<Style x:Key="devlistStyle" TargetType="ContentControl">
			<Setter Property="MinWidth" Value="200"/>
			<Style.Triggers>
				<DataTrigger Binding="{Binding Path=IsChecked, ElementName=expander}" Value="true">
					<Setter Property="Visibility" Value="Collapsed" />
				</DataTrigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="expanderBtn" TargetType="{x:Type ToggleButton}">
			<Setter Property="Background" Value="{DynamicResource ButtonBackgroundHighlight}"/>
			<Setter Property="BorderBrush" Value="{DynamicResource ButtonBackgroundHighlight}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Margin" Value="0"/>
			<Setter Property="MinHeight" Value="150"/>
			<Setter Property="VerticalAlignment" Value="Center"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ToggleButton}">
						<Border 
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" 
							CornerRadius="4"
							Background="{TemplateBinding Background}">
							<ContentPresenter
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Margin="2">
							</ContentPresenter>
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="IsChecked" Value="True">
					<Setter Property="Content" Value="Device list"/>
				</Trigger>
				<Trigger Property="IsChecked" Value="False">
					<Setter Property="Content" Value="Collapse"/>
				</Trigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsMouseOver" Value="True"/>
						<Condition Property="IsPressed" Value="False"/>
					</MultiTrigger.Conditions>
					<Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundHighlight}"/>
					<Setter Property="Foreground" Value="{DynamicResource ResourceKey=ForegroundHighlight}"/>
				</MultiTrigger>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsPressed" Value="True"/>
					</MultiTrigger.Conditions>
					<Setter Property="Background" Value="{DynamicResource ResourceKey=BackgroundPressed}"/>
					<Setter Property="Foreground" Value="{DynamicResource ResourceKey=ForegroundPressed}"/>
				</MultiTrigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>
	<Grid
		x:Name="rootLayout"
		Margin="0,0,10,10"
		VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
		<Grid.RowDefinitions>
			<RowDefinition Height="auto"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<Grid.ColumnDefinitions>
			<ColumnDefinition Width="auto" MinWidth="10"/>
			<ColumnDefinition Width="*"/>
		</Grid.ColumnDefinitions>

		<Button 
			x:Name="deviceListButton"
			Grid.Row="1" Grid.Column="0"
			Margin="0,0,3,3" Visibility="Collapsed"
			HorizontalAlignment="Left" VerticalAlignment="Top"
			BorderBrush="{DynamicResource BackgroundHighlight}"
			BorderThickness="0,1,1,1">
			<Button.Template>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border 
						x:Name="border"
						BorderBrush="Transparent" 
						BorderThickness="0" 
						CornerRadius="0,6,6,0"
						Padding="2,8,4,8"
						Background="{DynamicResource BackgroundHighlight}">
						<ContentPresenter
							HorizontalAlignment="Stretch" 
							VerticalAlignment="Stretch"
							Margin="0"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource ButtonBackgroundPressed}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Button.Template>
			<TextBlock Name="devlistCaption" Foreground="White" FontWeight="Bold" Text="Device list"> 
					<TextBlock.LayoutTransform> 
						<RotateTransform Angle="90" />
					</TextBlock.LayoutTransform>
			</TextBlock>
		</Button>

		<ContentControl 
			Grid.Row="0" Grid.Column="1"
			HorizontalAlignment="Stretch" VerticalAlignment="Top"
			p:RegionManager.RegionName="toolbar"/>
		<Grid 
			x:Name="contentLayout" 
			Grid.Row="1" Grid.Column="1"
			VerticalAlignment="Stretch">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<ContentControl 
				x:Name="devlist" Grid.Column="0" p:RegionManager.RegionName="deviceslist" 
				Style="{StaticResource devlistStyle}"
				Background="White"
				Margin="0,0,3,0" 
				HorizontalAlignment="Stretch" 
				VerticalAlignment="Stretch" 
				HorizontalContentAlignment="Left"/>
			<ContentControl 
				Grid.Column="1" 
				p:RegionManager.RegionName="mainframe" 
				Margin="0"/>
		</Grid>
	</Grid>
</my:CustomWindow>
