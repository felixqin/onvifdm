<ResourceDictionary 
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
	xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Classic">
	<Style x:Key="ComboBoxFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle 
						Margin="4,4,21,4" 
						SnapsToDevicePixels="true" 
						Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
						StrokeThickness="1" StrokeDashArray="1 2"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<PathGeometry x:Key="DownArrowGeometry" Figures="M 0 0 L 3.5 4 L 7 0 Z"/>


	<Style x:Key="ComboBoxTransparentButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="Height" Value="Auto"/>
		<Setter Property="Background" Value="#FFCDCDCD"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="BorderBrush" Value="Gray"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<DockPanel 
						Background="Transparent" LastChildFill="true" 
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						VerticalAlignment="{TemplateBinding VerticalAlignment}">
						<Border 
							x:Name="bd" DockPanel.Dock="Right"
							CornerRadius="0,2,2,0" 
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="0,1,1,1" 
							Background="{TemplateBinding Background}">
							<Path
								x:Name="iso"
								Margin="3"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Data="{StaticResource DownArrowGeometry}" 
								Fill="{TemplateBinding Foreground}" />
						</Border>
						<Border 
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							CornerRadius="2,0,0,2" 
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="1,1,1,1" 
							Background="White">
							<ContentPresenter
								Margin="{TemplateBinding Padding}" 
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<!--<Setter Property="BorderStyle" TargetName="Border" Value="AltPressed"/>-->
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsChecked" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="#FF595959"/>
							<Setter Property="Fill" TargetName="iso" Value="White"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			
		</Style.Triggers>
	</Style>
	<Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="AllowDrop" Value="true"/>
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
		<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
			<Grid>
				<Microsoft_Windows_Themes:ClassicBorderDecorator x:Name="Border" BorderBrush="{x:Static Microsoft_Windows_Themes:ClassicBorderDecorator.ClassicBorderBrush}" BorderThickness="2" BorderStyle="Sunken" Background="{TemplateBinding Background}">
					<Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="False" IsOpen="{TemplateBinding IsDropDownOpen}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
						<Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=Border}">
							<Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
								<ScrollViewer x:Name="DropDownScrollViewer">
									<Grid RenderOptions.ClearTypeHint="Enabled">
										<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
											<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
										</Canvas>
										<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									</Grid>
								</ScrollViewer>
							</Border>
						</Microsoft_Windows_Themes:SystemDropShadowChrome>
					</Popup>
				</Microsoft_Windows_Themes:ClassicBorderDecorator>
				<ToggleButton ClickMode="Press" Focusable="false" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="2" MinWidth="0" MinHeight="0" Style="{StaticResource ComboBoxTransparentButtonStyle}" Width="Auto"/>
				<DockPanel Margin="2">
					<FrameworkElement DockPanel.Dock="Right" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
					<TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
				</DockPanel>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="HasItems" Value="false">
				<Setter Property="MinHeight" TargetName="DropDownBorder" Value="95"/>
			</Trigger>
			<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
				<Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
				<Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</Trigger>
			<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
				<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
				<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>


	<ControlTemplate x:Key="ComboBoxReadOnlyEditableTemplate" TargetType="{x:Type ComboBox}">
		<Grid HorizontalAlignment="Stretch">
			<Border
				x:Name="Border" 
				BorderBrush="{TemplateBinding BorderBrush}" 
				BorderThickness="1"
				CornerRadius="2"
				Background="White">
				<Popup
					x:Name="PART_Popup" Placement="Bottom"
					AllowsTransparency="true" Focusable="False" 
					HorizontalAlignment="Stretch" VerticalOffset="2"
					IsOpen="{TemplateBinding IsDropDownOpen}" 
					PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
					Margin="0">
					<Border 
						x:Name="DropDownBorder" 
						HorizontalAlignment="Stretch" 
						MaxHeight="{TemplateBinding MaxDropDownHeight}" 
						MinWidth="{Binding ActualWidth, ElementName=Border}"
						BorderBrush="{TemplateBinding BorderBrush}" 
						BorderThickness="1" 
						Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
						CornerRadius="2" Padding="0" Margin="0">

						<ScrollViewer x:Name="DropDownScrollViewer" Margin="0" HorizontalAlignment="Stretch" >
							<Grid RenderOptions.ClearTypeHint="Enabled" Margin="0" HorizontalAlignment="Stretch">
								<Canvas HorizontalAlignment="Stretch"  Height="0" VerticalAlignment="Top" Width="0">
									<Rectangle 
										x:Name="OpaqueRect" 
										Fill="{Binding Background, ElementName=DropDownBorder}" 
										Height="{Binding ActualHeight, ElementName=DropDownBorder}" 
										Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
								</Canvas>
								<ItemsPresenter 
									x:Name="ItemsPresenter" 
									Margin="0"
									KeyboardNavigation.DirectionalNavigation="Contained" 
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Grid>
						</ScrollViewer>
					</Border>
				</Popup>
			</Border>
			<ToggleButton
				HorizontalContentAlignment="Left" 
				ClickMode="Press" Focusable="false" 
				Margin="0" MinWidth="0" MinHeight="0" Width="Auto"
				Padding="{TemplateBinding Padding}"
				BorderBrush="{TemplateBinding BorderBrush}" 
				BorderThickness="{TemplateBinding BorderThickness}" 
				IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
				Style="{StaticResource ComboBoxTransparentButtonStyle}">
				<ContentPresenter
					ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
					ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
					Content="{TemplateBinding Text}" 
					ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
					HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
					VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</ToggleButton>
		</Grid>

		<ControlTemplate.Triggers>
			<MultiTrigger>
				<MultiTrigger.Conditions>
					<Condition Property="IsSelectionBoxHighlighted" Value="true"/>
					<Condition Property="IsDropDownOpen" Value="false"/>
				</MultiTrigger.Conditions>
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
			</MultiTrigger>
			<Trigger Property="IsSelectionBoxHighlighted" Value="true"/>
			<Trigger Property="HasItems" Value="false"/>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
				<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
			</Trigger>
			<Trigger Property="IsGrouping" Value="true">
				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="{x:Type ComboBox}">
		<Setter Property="Background" Value="#FFCDCDCD"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="BorderBrush" Value="Gray"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid HorizontalAlignment="Stretch">
						<Border
							x:Name="Border" 
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="1"
							CornerRadius="2"
							Background="White">
							<Popup
								x:Name="PART_Popup" Placement="Bottom"
								AllowsTransparency="true" Focusable="False" 
								HorizontalAlignment="Stretch" VerticalOffset="2"
								IsOpen="{TemplateBinding IsDropDownOpen}" 
								PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" 
								Margin="0">
								<Border 
									x:Name="DropDownBorder" 
									HorizontalAlignment="Stretch" 
									MaxHeight="{TemplateBinding MaxDropDownHeight}" 
									MinWidth="{Binding ActualWidth, ElementName=Border}"
									BorderBrush="{TemplateBinding BorderBrush}" 
									BorderThickness="1" 
									Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
									CornerRadius="2" Padding="0" Margin="0">

								<ScrollViewer x:Name="DropDownScrollViewer" Margin="0" HorizontalAlignment="Stretch" >
									<Grid RenderOptions.ClearTypeHint="Enabled" Margin="0" HorizontalAlignment="Stretch">
										<Canvas HorizontalAlignment="Stretch"  Height="0" VerticalAlignment="Top" Width="0">
											<Rectangle 
												x:Name="OpaqueRect" 
												Fill="{Binding Background, ElementName=DropDownBorder}" 
												Height="{Binding ActualHeight, ElementName=DropDownBorder}" 
												Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
										</Canvas>
										<ItemsPresenter 
											x:Name="ItemsPresenter" 
											Margin="0"
											KeyboardNavigation.DirectionalNavigation="Contained" 
											SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
										</Grid>
									</ScrollViewer>
								</Border>
							</Popup>
						</Border>
						<!--<Border x:Name="SelectedItemBorder" Margin="{TemplateBinding Padding}" >
								
						</Border>-->
						<ToggleButton
							HorizontalContentAlignment="Left" 
							ClickMode="Press" Focusable="false" 
							Margin="0" MinWidth="0" MinHeight="0" Width="Auto"
							Padding="{TemplateBinding Padding}"
							BorderBrush="{TemplateBinding BorderBrush}" 
							BorderThickness="{TemplateBinding BorderThickness}" 
							IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
							Style="{StaticResource ComboBoxTransparentButtonStyle}">
							<ContentPresenter
								ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
								ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
								Content="{TemplateBinding SelectionBoxItem}" 
								ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</ToggleButton>
					</Grid>
					
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelectionBoxHighlighted" Value="true"/>
								<Condition Property="IsDropDownOpen" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
						</MultiTrigger>
						<Trigger Property="IsSelectionBoxHighlighted" Value="true"/>
						<Trigger Property="HasItems" Value="false"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<MultiTrigger >
				<MultiTrigger.Conditions>
					<Condition Property="IsEditable" Value="true"/>
					<Condition Property="IsReadOnly" Value="true" />
				</MultiTrigger.Conditions>
				<Setter Property="IsTabStop" Value="false"/>
				<!--<Setter Property="Padding" Value="1"/>-->
				<Setter Property="Template" Value="{StaticResource ComboBoxReadOnlyEditableTemplate}"/>
			</MultiTrigger>
			<MultiTrigger >
				<MultiTrigger.Conditions>
					<Condition Property="IsEditable" Value="true"/>
					<Condition Property="IsReadOnly" Value="false" />
				</MultiTrigger.Conditions>
				<Setter Property="IsTabStop" Value="false"/>
				<!--<Setter Property="Padding" Value="1"/>-->
				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
			</MultiTrigger>
		</Style.Triggers>
	</Style>

	


</ResourceDictionary>