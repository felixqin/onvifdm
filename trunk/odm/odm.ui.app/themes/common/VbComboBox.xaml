<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
	<Style x:Key="vb_green_combobox" TargetType="{x:Type ComboBox}">
        <Setter Property="Background" Value="{DynamicResource vb_black_M}"/>
		<Setter Property="Foreground" Value="{DynamicResource vb_green_S}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource vb_green_S}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		
		<Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
		<Setter Property="Margin" Value="0"/>
		<Setter Property="Padding" Value="2"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid>
						<Border
							x:Name="Border" 
							BorderThickness="0"
							CornerRadius="2" BorderBrush="{DynamicResource vb_green_S}">
							<Popup 
								x:Name="PART_Popup" Placement="Bottom"
								AllowsTransparency="true" Focusable="False" 
								HorizontalAlignment="Stretch" VerticalOffset="2"								
								IsOpen="{TemplateBinding IsDropDownOpen}" 
								PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" >
								<Border 
									MaxHeight="{TemplateBinding MaxDropDownHeight}" 
									MinWidth="{Binding ActualWidth, ElementName=Border}"
                                    Background="{DynamicResource vb_black_ML}"
									x:Name="DropDownBorder" 
									BorderThickness="{TemplateBinding BorderThickness}"
									CornerRadius="2" BorderBrush="{DynamicResource vb_green_M}">
										
									<ScrollViewer x:Name="DropDownScrollViewer" Foreground="{DynamicResource vb_green_S}">
										<Grid RenderOptions.ClearTypeHint="Enabled">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="0.612*"/>
												<ColumnDefinition Width="0.388*"/>
											</Grid.ColumnDefinitions>
											<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
												<Rectangle 
													x:Name="OpaqueRect" 
													Fill="{Binding Background, ElementName=DropDownBorder}" 
													Height="{Binding ActualHeight, ElementName=DropDownBorder}" 
													Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
											</Canvas>
											<ItemsPresenter 
												x:Name="ItemsPresenter" 
												KeyboardNavigation.DirectionalNavigation="Contained" 
												SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.ColumnSpan="2"/>
										</Grid>
									</ScrollViewer>
								</Border>
							</Popup>						
						</Border>
						<!--<Border x:Name="SelectedItemBorder" Margin="{TemplateBinding Padding}" >
								
						</Border>-->
						<ToggleButton
							HorizontalContentAlignment="Left" 
							ClickMode="Press" Focusable="false" 
							Margin="0" MinWidth="0" MinHeight="0" Width="Auto"
							Padding="{TemplateBinding Padding}"
							IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
							Style="{DynamicResource vb_green_togglebutton}" Foreground="{DynamicResource vb_green_S}" BorderBrush="{DynamicResource vb_green_S}" Background="{DynamicResource vb_green_S}">
							<ContentPresenter
								ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
								ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
								Content="{TemplateBinding SelectionBoxItem}" 
								ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>							
						</ToggleButton>
					</Grid>
					
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelectionBoxHighlighted" Value="true"/>
								<Condition Property="IsDropDownOpen" Value="false"/>
							</MultiTrigger.Conditions>
							<Setter Property="Foreground" Value="{DynamicResource vb_green_L}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource vb_green_L}"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource vb_green_L}"/>
						</MultiTrigger>
                        <Trigger Property="IsSelectionBoxHighlighted" Value="true">
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource vb_green_L}"/>
                        </Trigger>
                            <Trigger Property="HasItems" Value="false"/>
						<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource vb_green_S}"/>
                            <Setter Property="Background" Value="{DynamicResource vb_green_S}"/>
                            <Setter Property="BorderBrush" TargetName="Border" Value="{DynamicResource vb_green_S}"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Padding" Value="1"/>
				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="vb_green_togglebutton" TargetType="{x:Type ToggleButton}">
		<Setter Property="MinWidth" Value="0"/>
		<Setter Property="MinHeight" Value="0"/>
		<Setter Property="Width" Value="Auto"/>
		<Setter Property="Height" Value="Auto"/>
		<Setter Property="Background" Value="{DynamicResource vb_green_S}"/>
		<Setter Property="Foreground" Value="{DynamicResource vb_green_M}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource vb_green_M}"/>
		<Setter Property="Padding" Value="1"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">					
					<DockPanel 
						Background="Transparent" LastChildFill="true" 
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
						HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
						VerticalAlignment="{TemplateBinding VerticalAlignment}">
						<Border 
							x:Name="bd" DockPanel.Dock="Right"
							CornerRadius="0,2,2,0" 
							BorderThickness="1" Background="{DynamicResource vb_green_S}" BorderBrush="{DynamicResource vb_green_S}">
							<Path
								x:Name="iso"
								Margin="3"							
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Data="{StaticResource DownArrowGeometry}" Fill="{DynamicResource vb_green_M}" />
						</Border>
						<Border 
                            Name="cbd"
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							CornerRadius="2,0,0,2" 
							BorderThickness="1,1,0,1" BorderBrush="{DynamicResource vb_green_S}">
							<ContentPresenter
								Margin="{TemplateBinding Padding}" 
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
					</DockPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" Value="{DynamicResource vb_green_M}"/>
                            <Setter Property="Fill" TargetName="iso" Value="{DynamicResource vb_green_L}"/>
                            <Setter Property="BorderBrush" TargetName="bd" Value="{DynamicResource vb_green_L}"/>
                            <Setter Property="Background" TargetName="bd" Value="{DynamicResource vb_green_ML}"/>
                            <Setter Property="BorderBrush" TargetName="cbd" Value="{DynamicResource vb_green_L}"/>
                        </Trigger>
						<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource vb_green_S}"/>
                            <Setter Property="Fill" TargetName="iso" Value="{DynamicResource vb_green_S}"/>
                            <Setter Property="BorderBrush" TargetName="bd" Value="{DynamicResource vb_green_S}"/>
                            <Setter Property="Background" TargetName="bd" Value="{DynamicResource vb_green_S}"/>
                            <Setter Property="BorderBrush" TargetName="cbd" Value="{DynamicResource vb_green_S}"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsChecked" Value="False"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource vb_green_M}"/>
							<Setter Property="Fill" TargetName="iso" Value="{DynamicResource vb_green_L}"/>
                            <Setter Property="BorderBrush" TargetName="bd" Value="{DynamicResource vb_green_L}"/>
                            <Setter Property="Background" TargetName="bd" Value="{DynamicResource vb_green_ML}"/>
                            <Setter Property="BorderBrush" TargetName="cbd" Value="{DynamicResource vb_green_L}"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
					
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="vb_combobox_item" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="Padding" Value="3,0,3,0"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsHighlighted" Value="true">
							<Setter Property="Background" TargetName="Bd" Value="{DynamicResource vb_green_M}"/>
                            <Setter Property="Foreground" Value="{DynamicResource vb_green_M}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- Resource dictionary entries should be defined here. -->
</ResourceDictionary>